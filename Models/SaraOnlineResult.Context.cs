//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SaraPabson.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SaraOnlineResultEntities : DbContext
    {
        public SaraOnlineResultEntities()
            : base("name=SaraOnlineResultEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccountBillStatu> AccountBillStatus { get; set; }
        public virtual DbSet<AccountBillStatus_Billing> AccountBillStatus_Billing { get; set; }
        public virtual DbSet<AccountCrossLink> AccountCrossLinks { get; set; }
        public virtual DbSet<AccountHeading> AccountHeadings { get; set; }
        public virtual DbSet<accountprepare> accountprepares { get; set; }
        public virtual DbSet<AdmissionTable> AdmissionTables { get; set; }
        public virtual DbSet<advanceresultmidterm> advanceresultmidterms { get; set; }
        public virtual DbSet<AdvanSysResult> AdvanSysResults { get; set; }
        public virtual DbSet<AnualLeaveStaff> AnualLeaveStaffs { get; set; }
        public virtual DbSet<assetsdetail> assetsdetails { get; set; }
        public virtual DbSet<attendenceschool> attendenceschools { get; set; }
        public virtual DbSet<AuthorighSign> AuthorighSigns { get; set; }
        public virtual DbSet<balanceAmount> balanceAmounts { get; set; }
        public virtual DbSet<balancestaf> balancestafs { get; set; }
        public virtual DbSet<Bank_Transction_Detail> Bank_Transction_Detail { get; set; }
        public virtual DbSet<bankheadingtable> bankheadingtables { get; set; }
        public virtual DbSet<BillCommonClass> BillCommonClasses { get; set; }
        public virtual DbSet<BillExtraIndivusal> BillExtraIndivusals { get; set; }
        public virtual DbSet<BillGenerateStaff_Track> BillGenerateStaff_Track { get; set; }
        public virtual DbSet<billmonthlyindivusal> billmonthlyindivusals { get; set; }
        public virtual DbSet<BillTraco> BillTracoes { get; set; }
        public virtual DbSet<booksstoksview> booksstoksviews { get; set; }
        public virtual DbSet<BooksTaken> BooksTakens { get; set; }
        public virtual DbSet<CashIn_Out> CashIn_Out { get; set; }
        public virtual DbSet<Class_pre> Class_pre { get; set; }
        public virtual DbSet<companyinfo> companyinfoes { get; set; }
        public virtual DbSet<ControllIdm> ControllIdms { get; set; }
        public virtual DbSet<customercashtable> customercashtables { get; set; }
        public virtual DbSet<CustomerSalesBill> CustomerSalesBills { get; set; }
        public virtual DbSet<dayCondition> dayConditions { get; set; }
        public virtual DbSet<dayconditiondetail> dayconditiondetails { get; set; }
        public virtual DbSet<DayEnd> DayEnds { get; set; }
        public virtual DbSet<daystart> daystarts { get; set; }
        public virtual DbSet<DiscountPurchaseBill> DiscountPurchaseBills { get; set; }
        public virtual DbSet<EarlySalaryRpto> EarlySalaryRptoes { get; set; }
        public virtual DbSet<ExamFinal> ExamFinals { get; set; }
        public virtual DbSet<ExamShedule> ExamShedules { get; set; }
        public virtual DbSet<ExamTerm> ExamTerms { get; set; }
        public virtual DbSet<expendituredetail> expendituredetails { get; set; }
        public virtual DbSet<FeeHeading> FeeHeadings { get; set; }
        public virtual DbSet<feeStructure_Table> feeStructure_Table { get; set; }
        public virtual DbSet<FormId> FormIds { get; set; }
        public virtual DbSet<fyear> fyears { get; set; }
        public virtual DbSet<GeneralTransctionTable> GeneralTransctionTables { get; set; }
        public virtual DbSet<GroupAc> GroupAcs { get; set; }
        public virtual DbSet<GroupBook> GroupBooks { get; set; }
        public virtual DbSet<GroupGood> GroupGoods { get; set; }
        public virtual DbSet<IdReady> IdReadies { get; set; }
        public virtual DbSet<incomedetail> incomedetails { get; set; }
        public virtual DbSet<issuebillmonthly> issuebillmonthlies { get; set; }
        public virtual DbSet<issuebooksrecord> issuebooksrecords { get; set; }
        public virtual DbSet<issuestock> issuestocks { get; set; }
        public virtual DbSet<JVoucher> JVouchers { get; set; }
        public virtual DbSet<ledgeradmission> ledgeradmissions { get; set; }
        public virtual DbSet<LeftSchool> LeftSchools { get; set; }
        public virtual DbSet<liabilitesdetail> liabilitesdetails { get; set; }
        public virtual DbSet<LoginName> LoginNames { get; set; }
        public virtual DbSet<mahbhukmpa2072> mahbhukmpa2072 { get; set; }
        public virtual DbSet<mangetermfinal> mangetermfinals { get; set; }
        public virtual DbSet<Midfirstterm> Midfirstterms { get; set; }
        public virtual DbSet<Midfirstterm_1> Midfirstterm_1 { get; set; }
        public virtual DbSet<Midfirstterm_2> Midfirstterm_2 { get; set; }
        public virtual DbSet<Midfirstterm_sum> Midfirstterm_sum { get; set; }
        public virtual DbSet<MidfirsttermOnlineView> MidfirsttermOnlineViews { get; set; }
        public virtual DbSet<monthlybillPrintIssue> monthlybillPrintIssues { get; set; }
        public virtual DbSet<MonthlyEndDay> MonthlyEndDays { get; set; }
        public virtual DbSet<MonthlySalaryAdd> MonthlySalaryAdds { get; set; }
        public virtual DbSet<monthlystaffsalary> monthlystaffsalaries { get; set; }
        public virtual DbSet<Numberofworkingday> Numberofworkingdays { get; set; }
        public virtual DbSet<Payment_Supplier> Payment_Supplier { get; set; }
        public virtual DbSet<paymentStaff> paymentStaffs { get; set; }
        public virtual DbSet<PaymentSupplier> PaymentSuppliers { get; set; }
        public virtual DbSet<ProcessingReultTerm_Year> ProcessingReultTerm_Year { get; set; }
        public virtual DbSet<PurchaseEntry> PurchaseEntries { get; set; }
        public virtual DbSet<PurchaseHeading> PurchaseHeadings { get; set; }
        public virtual DbSet<Purchaseprefix> Purchaseprefixes { get; set; }
        public virtual DbSet<purchaseReturn> purchaseReturns { get; set; }
        public virtual DbSet<Purchasetable> Purchasetables { get; set; }
        public virtual DbSet<PurchsaeCode> PurchsaeCodes { get; set; }
        public virtual DbSet<PVoucher> PVouchers { get; set; }
        public virtual DbSet<RankStudent> RankStudents { get; set; }
        public virtual DbSet<RegeGere> RegeGeres { get; set; }
        public virtual DbSet<remarksresultDivision> remarksresultDivisions { get; set; }
        public virtual DbSet<ResultIndivusalClassEntry> ResultIndivusalClassEntries { get; set; }
        public virtual DbSet<returnbook> returnbooks { get; set; }
        public virtual DbSet<SalaryHeadingDetail> SalaryHeadingDetails { get; set; }
        public virtual DbSet<salesCash> salesCashes { get; set; }
        public virtual DbSet<SalesCode> SalesCodes { get; set; }
        public virtual DbSet<SalesHeading> SalesHeadings { get; set; }
        public virtual DbSet<Salesprefix> Salesprefixes { get; set; }
        public virtual DbSet<Salestable> Salestables { get; set; }
        public virtual DbSet<Saloko> Salokoes { get; set; }
        public virtual DbSet<sanepagate> sanepagates { get; set; }
        public virtual DbSet<setholiday> setholidays { get; set; }
        public virtual DbSet<SlokoPrintToo> SlokoPrintToos { get; set; }
        public virtual DbSet<Staffcasualleav> Staffcasualleavs { get; set; }
        public virtual DbSet<Staffinformation> Staffinformations { get; set; }
        public virtual DbSet<Staffmonthlyindivusal> Staffmonthlyindivusals { get; set; }
        public virtual DbSet<StaffsalaryformatGov> StaffsalaryformatGovs { get; set; }
        public virtual DbSet<stockDetail> stockDetails { get; set; }
        public virtual DbSet<StudentAccountTable> StudentAccountTables { get; set; }
        public virtual DbSet<StudentAttendenceReco> StudentAttendenceRecoes { get; set; }
        public virtual DbSet<studentBehav> studentBehavs { get; set; }
        public virtual DbSet<studentbillingsystem> studentbillingsystems { get; set; }
        public virtual DbSet<StudentbooksInOut> StudentbooksInOuts { get; set; }
        public virtual DbSet<studentdiscountinformation> studentdiscountinformations { get; set; }
        public virtual DbSet<StudentdiscountTrack> StudentdiscountTracks { get; set; }
        public virtual DbSet<StudentInformationTable> StudentInformationTables { get; set; }
        public virtual DbSet<studentmonthlybehavior> studentmonthlybehaviors { get; set; }
        public virtual DbSet<subjectentrybyIndivusal> subjectentrybyIndivusals { get; set; }
        public virtual DbSet<subjectIndivusalStudent> subjectIndivusalStudents { get; set; }
        public virtual DbSet<SupplierList> SupplierLists { get; set; }
        public virtual DbSet<SVoucher> SVouchers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tempprntBill> tempprntBills { get; set; }
        public virtual DbSet<TempSupplierBalance> TempSupplierBalances { get; set; }
        public virtual DbSet<TopMarksObtained> TopMarksObtaineds { get; set; }
        public virtual DbSet<TotalBooksOut> TotalBooksOuts { get; set; }
        public virtual DbSet<Totalid> Totalids { get; set; }
        public virtual DbSet<Tran_Detail> Tran_Detail { get; set; }
        public virtual DbSet<TransactionTable> TransactionTables { get; set; }
        public virtual DbSet<transctiondetail> transctiondetails { get; set; }
        public virtual DbSet<transctiondetail_test> transctiondetail_test { get; set; }
        public virtual DbSet<UpBilBalanceMonthly> UpBilBalanceMonthlies { get; set; }
        public virtual DbSet<UserIDName> UserIDNames { get; set; }
        public virtual DbSet<variableSalaryMonthly> variableSalaryMonthlies { get; set; }
        public virtual DbSet<EntryBook> EntryBooks { get; set; }
        public virtual DbSet<JVoucher_PreYear> JVoucher_PreYear { get; set; }
    
        public virtual ObjectResult<AdvanceEntry_Result> AdvanceEntry(string p1reslt)
        {
            var p1resltParameter = p1reslt != null ?
                new ObjectParameter("p1reslt", p1reslt) :
                new ObjectParameter("p1reslt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdvanceEntry_Result>("AdvanceEntry", p1resltParameter);
        }
    
        public virtual ObjectResult<AmountStaffBalance_Result> AmountStaffBalance(string sTba)
        {
            var sTbaParameter = sTba != null ?
                new ObjectParameter("STba", sTba) :
                new ObjectParameter("STba", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AmountStaffBalance_Result>("AmountStaffBalance", sTbaParameter);
        }
    
        public virtual ObjectResult<AuthorizSign_Result> AuthorizSign(string aS)
        {
            var aSParameter = aS != null ?
                new ObjectParameter("AS", aS) :
                new ObjectParameter("AS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AuthorizSign_Result>("AuthorizSign", aSParameter);
        }
    
        public virtual ObjectResult<AuthorizSignPhoto_Result> AuthorizSignPhoto(string aSP)
        {
            var aSPParameter = aSP != null ?
                new ObjectParameter("ASP", aSP) :
                new ObjectParameter("ASP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AuthorizSignPhoto_Result>("AuthorizSignPhoto", aSPParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> balanceview(string bV)
        {
            var bVParameter = bV != null ?
                new ObjectParameter("BV", bV) :
                new ObjectParameter("BV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("balanceview", bVParameter);
        }
    
        public virtual int BillStudentId(string bSId)
        {
            var bSIdParameter = bSId != null ?
                new ObjectParameter("BSId", bSId) :
                new ObjectParameter("BSId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BillStudentId", bSIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BooksOut(Nullable<int> tBO)
        {
            var tBOParameter = tBO.HasValue ?
                new ObjectParameter("TBO", tBO) :
                new ObjectParameter("TBO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BooksOut", tBOParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CashInOut(string cIO)
        {
            var cIOParameter = cIO != null ?
                new ObjectParameter("CIO", cIO) :
                new ObjectParameter("CIO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CashInOut", cIOParameter);
        }
    
        public virtual ObjectResult<Cr_Trail_codeView_Date_Result> Cr_Trail_codeView_Date(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cr_Trail_codeView_Date_Result>("Cr_Trail_codeView_Date", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<DayEndCashBalanceBd_Result> DayEndCashBalanceBd(Nullable<System.DateTime> cbdb)
        {
            var cbdbParameter = cbdb.HasValue ?
                new ObjectParameter("Cbdb", cbdb) :
                new ObjectParameter("Cbdb", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DayEndCashBalanceBd_Result>("DayEndCashBalanceBd", cbdbParameter);
        }
    
        public virtual ObjectResult<DayStartCashBalanceBd_Result> DayStartCashBalanceBd(Nullable<System.DateTime> cbdSb)
        {
            var cbdSbParameter = cbdSb.HasValue ?
                new ObjectParameter("CbdSb", cbdSb) :
                new ObjectParameter("CbdSb", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DayStartCashBalanceBd_Result>("DayStartCashBalanceBd", cbdSbParameter);
        }
    
        public virtual ObjectResult<string> DayStatusGet(Nullable<int> dSGI)
        {
            var dSGIParameter = dSGI.HasValue ?
                new ObjectParameter("DSGI", dSGI) :
                new ObjectParameter("DSGI", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DayStatusGet", dSGIParameter);
        }
    
        public virtual int Eightfee13(string p8FV)
        {
            var p8FVParameter = p8FV != null ?
                new ObjectParameter("p8FV", p8FV) :
                new ObjectParameter("p8FV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Eightfee13", p8FVParameter);
        }
    
        public virtual ObjectResult<EngToNep_Result> EngToNep(string enNp)
        {
            var enNpParameter = enNp != null ?
                new ObjectParameter("EnNp", enNp) :
                new ObjectParameter("EnNp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EngToNep_Result>("EngToNep", enNpParameter);
        }
    
        public virtual ObjectResult<EnterBooksCode_Result> EnterBooksCode(string bC, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var bCParameter = bC != null ?
                new ObjectParameter("BC", bC) :
                new ObjectParameter("BC", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EnterBooksCode_Result>("EnterBooksCode", bCParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int finalcashbalance(string fCb)
        {
            var fCbParameter = fCb != null ?
                new ObjectParameter("FCb", fCb) :
                new ObjectParameter("FCb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("finalcashbalance", fCbParameter);
        }
    
        public virtual ObjectResult<forStudentIdcard_Result> forStudentIdcard(string sId)
        {
            var sIdParameter = sId != null ?
                new ObjectParameter("SId", sId) :
                new ObjectParameter("SId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<forStudentIdcard_Result>("forStudentIdcard", sIdParameter);
        }
    
        public virtual ObjectResult<Get_AnualLeaveStaff_Result> Get_AnualLeaveStaff(string staffid)
        {
            var staffidParameter = staffid != null ?
                new ObjectParameter("staffid", staffid) :
                new ObjectParameter("staffid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_AnualLeaveStaff_Result>("Get_AnualLeaveStaff", staffidParameter);
        }
    
        public virtual ObjectResult<Get_VariablesalaryMonthly_Result> Get_VariablesalaryMonthly(string staffid)
        {
            var staffidParameter = staffid != null ?
                new ObjectParameter("Staffid", staffid) :
                new ObjectParameter("Staffid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_VariablesalaryMonthly_Result>("Get_VariablesalaryMonthly", staffidParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Get_VaultCash(Nullable<System.DateTime> datetime)
        {
            var datetimeParameter = datetime.HasValue ?
                new ObjectParameter("datetime", datetime) :
                new ObjectParameter("datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Get_VaultCash", datetimeParameter);
        }
    
        public virtual ObjectResult<GetAdmissionFeeMunal_Result> GetAdmissionFeeMunal(Nullable<int> gAFM)
        {
            var gAFMParameter = gAFM.HasValue ?
                new ObjectParameter("GAFM", gAFM) :
                new ObjectParameter("GAFM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdmissionFeeMunal_Result>("GetAdmissionFeeMunal", gAFMParameter);
        }
    
        public virtual ObjectResult<getbillmonthlyindivusal_Result> getbillmonthlyindivusal(Nullable<int> bMIV)
        {
            var bMIVParameter = bMIV.HasValue ?
                new ObjectParameter("BMIV", bMIV) :
                new ObjectParameter("BMIV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getbillmonthlyindivusal_Result>("getbillmonthlyindivusal", bMIVParameter);
        }
    
        public virtual ObjectResult<GetHolidayDetail_Result> GetHolidayDetail(Nullable<System.DateTime> datevalue)
        {
            var datevalueParameter = datevalue.HasValue ?
                new ObjectParameter("datevalue", datevalue) :
                new ObjectParameter("datevalue", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHolidayDetail_Result>("GetHolidayDetail", datevalueParameter);
        }
    
        public virtual ObjectResult<GetNumberofWorkingDays_Result> GetNumberofWorkingDays(string engmonths, string sal)
        {
            var engmonthsParameter = engmonths != null ?
                new ObjectParameter("engmonths", engmonths) :
                new ObjectParameter("engmonths", typeof(string));
    
            var salParameter = sal != null ?
                new ObjectParameter("sal", sal) :
                new ObjectParameter("sal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNumberofWorkingDays_Result>("GetNumberofWorkingDays", engmonthsParameter, salParameter);
        }
    
        public virtual ObjectResult<getStudentbookInout_Result> getStudentbookInout(string gBD)
        {
            var gBDParameter = gBD != null ?
                new ObjectParameter("GBD", gBD) :
                new ObjectParameter("GBD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getStudentbookInout_Result>("getStudentbookInout", gBDParameter);
        }
    
        public virtual ObjectResult<GetTriggerAdmissionFee_Result> GetTriggerAdmissionFee(string feeheading, string class_Student, string academicYear)
        {
            var feeheadingParameter = feeheading != null ?
                new ObjectParameter("feeheading", feeheading) :
                new ObjectParameter("feeheading", typeof(string));
    
            var class_StudentParameter = class_Student != null ?
                new ObjectParameter("Class_Student", class_Student) :
                new ObjectParameter("Class_Student", typeof(string));
    
            var academicYearParameter = academicYear != null ?
                new ObjectParameter("AcademicYear", academicYear) :
                new ObjectParameter("AcademicYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTriggerAdmissionFee_Result>("GetTriggerAdmissionFee", feeheadingParameter, class_StudentParameter, academicYearParameter);
        }
    
        public virtual ObjectResult<Givenambyname_Result> Givenambyname(string sNa)
        {
            var sNaParameter = sNa != null ?
                new ObjectParameter("sNa", sNa) :
                new ObjectParameter("sNa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Givenambyname_Result>("Givenambyname", sNaParameter);
        }
    
        public virtual ObjectResult<GivenamebyId_Result> GivenamebyId(string sId)
        {
            var sIdParameter = sId != null ?
                new ObjectParameter("sId", sId) :
                new ObjectParameter("sId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GivenamebyId_Result>("GivenamebyId", sIdParameter);
        }
    
        public virtual int insertStudentLedgerMarksId(string studentid, string name_field, string class_field, string roll)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("Studentid", studentid) :
                new ObjectParameter("Studentid", typeof(string));
    
            var name_fieldParameter = name_field != null ?
                new ObjectParameter("Name_field", name_field) :
                new ObjectParameter("Name_field", typeof(string));
    
            var class_fieldParameter = class_field != null ?
                new ObjectParameter("Class_field", class_field) :
                new ObjectParameter("Class_field", typeof(string));
    
            var rollParameter = roll != null ?
                new ObjectParameter("Roll", roll) :
                new ObjectParameter("Roll", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertStudentLedgerMarksId", studentidParameter, name_fieldParameter, class_fieldParameter, rollParameter);
        }
    
        public virtual ObjectResult<IssueBooksStock_Result> IssueBooksStock(string iB)
        {
            var iBParameter = iB != null ?
                new ObjectParameter("IB", iB) :
                new ObjectParameter("IB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IssueBooksStock_Result>("IssueBooksStock", iBParameter);
        }
    
        public virtual ObjectResult<issuerecord_Result> issuerecord(string iRV)
        {
            var iRVParameter = iRV != null ?
                new ObjectParameter("IRV", iRV) :
                new ObjectParameter("IRV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<issuerecord_Result>("issuerecord", iRVParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Journal(string jv)
        {
            var jvParameter = jv != null ?
                new ObjectParameter("Jv", jv) :
                new ObjectParameter("Jv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Journal", jvParameter);
        }
    
        public virtual ObjectResult<string> LastBillUpdate(string lbUd)
        {
            var lbUdParameter = lbUd != null ?
                new ObjectParameter("LbUd", lbUd) :
                new ObjectParameter("LbUd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("LastBillUpdate", lbUdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LastId(string lI)
        {
            var lIParameter = lI != null ?
                new ObjectParameter("LI", lI) :
                new ObjectParameter("LI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LastId", lIParameter);
        }
    
        public virtual ObjectResult<string> LastStudentId(string lSId)
        {
            var lSIdParameter = lSId != null ?
                new ObjectParameter("LSId", lSId) :
                new ObjectParameter("LSId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("LastStudentId", lSIdParameter);
        }
    
        public virtual int LKGfee(string lFV)
        {
            var lFVParameter = lFV != null ?
                new ObjectParameter("LFV", lFV) :
                new ObjectParameter("LFV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LKGfee", lFVParameter);
        }
    
        public virtual ObjectResult<string> loginko(string uid)
        {
            var uidParameter = uid != null ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("loginko", uidParameter);
        }
    
        public virtual ObjectResult<loginSaloko_Result> loginSaloko(string id, string jhal, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var jhalParameter = jhal != null ?
                new ObjectParameter("Jhal", jhal) :
                new ObjectParameter("Jhal", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loginSaloko_Result>("loginSaloko", idParameter, jhalParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int makeresultfinalTerm(string p1idreslt)
        {
            var p1idresltParameter = p1idreslt != null ?
                new ObjectParameter("p1idreslt", p1idreslt) :
                new ObjectParameter("p1idreslt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("makeresultfinalTerm", p1idresltParameter);
        }
    
        public virtual int makeresultfirstterm(string p1reslt)
        {
            var p1resltParameter = p1reslt != null ?
                new ObjectParameter("p1reslt", p1reslt) :
                new ObjectParameter("p1reslt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("makeresultfirstterm", p1resltParameter);
        }
    
        public virtual int makeresultfirsttermId(string p1idreslt)
        {
            var p1idresltParameter = p1idreslt != null ?
                new ObjectParameter("p1idreslt", p1idreslt) :
                new ObjectParameter("p1idreslt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("makeresultfirsttermId", p1idresltParameter);
        }
    
        public virtual int makeresultIdfinalTerm(string p1reslt)
        {
            var p1resltParameter = p1reslt != null ?
                new ObjectParameter("p1reslt", p1reslt) :
                new ObjectParameter("p1reslt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("makeresultIdfinalTerm", p1resltParameter);
        }
    
        public virtual ObjectResult<MoneyBalance_Result> MoneyBalance(string mb)
        {
            var mbParameter = mb != null ?
                new ObjectParameter("Mb", mb) :
                new ObjectParameter("Mb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MoneyBalance_Result>("MoneyBalance", mbParameter);
        }
    
        public virtual int Monthlybilledit(string mBE)
        {
            var mBEParameter = mBE != null ?
                new ObjectParameter("MBE", mBE) :
                new ObjectParameter("MBE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Monthlybilledit", mBEParameter);
        }
    
        public virtual ObjectResult<MonthlyStaffPay_Result> MonthlyStaffPay(string mSp)
        {
            var mSpParameter = mSp != null ?
                new ObjectParameter("MSp", mSp) :
                new ObjectParameter("MSp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MonthlyStaffPay_Result>("MonthlyStaffPay", mSpParameter);
        }
    
        public virtual ObjectResult<NepToEng_Result> NepToEng(string npEn)
        {
            var npEnParameter = npEn != null ?
                new ObjectParameter("NpEn", npEn) :
                new ObjectParameter("NpEn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NepToEng_Result>("NepToEng", npEnParameter);
        }
    
        public virtual ObjectResult<New_GetFeeHeading_Result> New_GetFeeHeading(string fHV)
        {
            var fHVParameter = fHV != null ?
                new ObjectParameter("FHV", fHV) :
                new ObjectParameter("FHV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<New_GetFeeHeading_Result>("New_GetFeeHeading", fHVParameter);
        }
    
        public virtual int NewDeleteCommand(string original_AccountCode, string original_AccountHeading)
        {
            var original_AccountCodeParameter = original_AccountCode != null ?
                new ObjectParameter("Original_AccountCode", original_AccountCode) :
                new ObjectParameter("Original_AccountCode", typeof(string));
    
            var original_AccountHeadingParameter = original_AccountHeading != null ?
                new ObjectParameter("Original_AccountHeading", original_AccountHeading) :
                new ObjectParameter("Original_AccountHeading", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewDeleteCommand", original_AccountCodeParameter, original_AccountHeadingParameter);
        }
    
        public virtual int PaymentInVoiceNo(string pAIn)
        {
            var pAInParameter = pAIn != null ?
                new ObjectParameter("PAIn", pAIn) :
                new ObjectParameter("PAIn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PaymentInVoiceNo", pAInParameter);
        }
    
        public virtual int ProfitOrLoss(string poL)
        {
            var poLParameter = poL != null ?
                new ObjectParameter("PoL", poL) :
                new ObjectParameter("PoL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProfitOrLoss", poLParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_looprow_count()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_looprow_count");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int Sp_AnitaTermmidt1(string year)
        {
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_AnitaTermmidt1", yearParameter);
        }
    
        public virtual int sp_Autodayend(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Autodayend", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Sp_AutoIdList_Result> Sp_AutoIdList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_AutoIdList_Result>("Sp_AutoIdList");
        }
    
        public virtual ObjectResult<sp_AutoPrintingWholeclass_Months_Result> sp_AutoPrintingWholeclass_Months(string studentid, string months)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var monthsParameter = months != null ?
                new ObjectParameter("months", months) :
                new ObjectParameter("months", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AutoPrintingWholeclass_Months_Result>("sp_AutoPrintingWholeclass_Months", studentidParameter, monthsParameter);
        }
    
        public virtual ObjectResult<sp_AutoPrintingWholeclass_Months_discount_Result> sp_AutoPrintingWholeclass_Months_discount(string studentid, string months)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var monthsParameter = months != null ?
                new ObjectParameter("months", months) :
                new ObjectParameter("months", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AutoPrintingWholeclass_Months_discount_Result>("sp_AutoPrintingWholeclass_Months_discount", studentidParameter, monthsParameter);
        }
    
        public virtual ObjectResult<sp_Balansheet_Result> sp_Balansheet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Balansheet_Result>("sp_Balansheet");
        }
    
        public virtual ObjectResult<sp_BalansheetWithDate_Result> sp_BalansheetWithDate(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BalansheetWithDate_Result>("sp_BalansheetWithDate", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_BillPaybleAmount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_BillPaybleAmount");
        }
    
        public virtual ObjectResult<Sp_BillPuchaseEntry_Result> Sp_BillPuchaseEntry(string suppInvoiceNo, string invNo)
        {
            var suppInvoiceNoParameter = suppInvoiceNo != null ?
                new ObjectParameter("SuppInvoiceNo", suppInvoiceNo) :
                new ObjectParameter("SuppInvoiceNo", typeof(string));
    
            var invNoParameter = invNo != null ?
                new ObjectParameter("InvNo", invNo) :
                new ObjectParameter("InvNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_BillPuchaseEntry_Result>("Sp_BillPuchaseEntry", suppInvoiceNoParameter, invNoParameter);
        }
    
        public virtual int sp_bookesstockdetail(string bookcode, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var bookcodeParameter = bookcode != null ?
                new ObjectParameter("bookcode", bookcode) :
                new ObjectParameter("bookcode", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_bookesstockdetail", bookcodeParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_Cr_Income_Expenditure_WithRange_Result> Sp_Cr_Income_Expenditure_WithRange(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Cr_Income_Expenditure_WithRange_Result>("Sp_Cr_Income_Expenditure_WithRange", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<sp_CrBankStatement_Result> sp_CrBankStatement(Nullable<System.DateTime> start, Nullable<System.DateTime> end, string bank_Name)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var bank_NameParameter = bank_Name != null ?
                new ObjectParameter("Bank_Name", bank_Name) :
                new ObjectParameter("Bank_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CrBankStatement_Result>("sp_CrBankStatement", startParameter, endParameter, bank_NameParameter);
        }
    
        public virtual int Sp_Create_TotalSupplierList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Create_TotalSupplierList");
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<Sp_CreateIdForAutoResultEntry_Result> Sp_CreateIdForAutoResultEntry(string term, string year, string class_stu, string sectionfield, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var termParameter = term != null ?
                new ObjectParameter("Term", term) :
                new ObjectParameter("Term", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("class_stu", class_stu) :
                new ObjectParameter("class_stu", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("sectionfield", sectionfield) :
                new ObjectParameter("sectionfield", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CreateIdForAutoResultEntry_Result>("Sp_CreateIdForAutoResultEntry", termParameter, yearParameter, class_stuParameter, sectionfieldParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_CreateIdForAutoResultEntryFinal(string term, string year, string class_stu, string sectionfield, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var termParameter = term != null ?
                new ObjectParameter("Term", term) :
                new ObjectParameter("Term", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("class_stu", class_stu) :
                new ObjectParameter("class_stu", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("sectionfield", sectionfield) :
                new ObjectParameter("sectionfield", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_CreateIdForAutoResultEntryFinal", termParameter, yearParameter, class_stuParameter, sectionfieldParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_CreateIdForBillIssue_Result> Sp_CreateIdForBillIssue()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CreateIdForBillIssue_Result>("Sp_CreateIdForBillIssue");
        }
    
        public virtual ObjectResult<Sp_CreateIdForBillIssue_Wholeclass_Result> Sp_CreateIdForBillIssue_Wholeclass(string class_stu, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("class_stu", class_stu) :
                new ObjectParameter("class_stu", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CreateIdForBillIssue_Wholeclass_Result>("Sp_CreateIdForBillIssue_Wholeclass", class_stuParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_CreateIdForLiveOnly_Result> Sp_CreateIdForLiveOnly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CreateIdForLiveOnly_Result>("Sp_CreateIdForLiveOnly");
        }
    
        public virtual int Sp_CreateIdForMarksObtain(string class_stu, string section, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("class_stu", class_stu) :
                new ObjectParameter("class_stu", typeof(string));
    
            var sectionParameter = section != null ?
                new ObjectParameter("section", section) :
                new ObjectParameter("section", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_CreateIdForMarksObtain", class_stuParameter, sectionParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_CreateIdForStaffMonthl_Result> Sp_CreateIdForStaffMonthl()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CreateIdForStaffMonthl_Result>("Sp_CreateIdForStaffMonthl");
        }
    
        public virtual ObjectResult<Sp_CreateIdForSubjectEntry_Result> Sp_CreateIdForSubjectEntry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CreateIdForSubjectEntry_Result>("Sp_CreateIdForSubjectEntry");
        }
    
        public virtual ObjectResult<Sp_CreateIdRanking_Final_Student_Result> Sp_CreateIdRanking_Final_Student(string class_Stu, string time_Year, string section, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("class_Stu", class_Stu) :
                new ObjectParameter("class_Stu", typeof(string));
    
            var time_YearParameter = time_Year != null ?
                new ObjectParameter("Time_Year", time_Year) :
                new ObjectParameter("Time_Year", typeof(string));
    
            var sectionParameter = section != null ?
                new ObjectParameter("section", section) :
                new ObjectParameter("section", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CreateIdRanking_Final_Student_Result>("Sp_CreateIdRanking_Final_Student", class_StuParameter, time_YearParameter, sectionParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_CreateIdRanking_Student_Result> Sp_CreateIdRanking_Student(string class_Stu, string terms, string time_Year, string sectionfield, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("class_Stu", class_Stu) :
                new ObjectParameter("class_Stu", typeof(string));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var time_YearParameter = time_Year != null ?
                new ObjectParameter("Time_Year", time_Year) :
                new ObjectParameter("Time_Year", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("sectionfield", sectionfield) :
                new ObjectParameter("sectionfield", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CreateIdRanking_Student_Result>("Sp_CreateIdRanking_Student", class_StuParameter, termsParameter, time_YearParameter, sectionfieldParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_CreatePre_RankForMarksObtain_Result> Sp_CreatePre_RankForMarksObtain(string class_Stu, string terms, string time_Year, string sectionfield, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("class_Stu", class_Stu) :
                new ObjectParameter("class_Stu", typeof(string));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var time_YearParameter = time_Year != null ?
                new ObjectParameter("Time_Year", time_Year) :
                new ObjectParameter("Time_Year", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("sectionfield", sectionfield) :
                new ObjectParameter("sectionfield", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CreatePre_RankForMarksObtain_Result>("Sp_CreatePre_RankForMarksObtain", class_StuParameter, termsParameter, time_YearParameter, sectionfieldParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_CreatePre_RankForMarksObtain_Final(string class_Stu, string time_Year, string section, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("class_Stu", class_Stu) :
                new ObjectParameter("class_Stu", typeof(string));
    
            var time_YearParameter = time_Year != null ?
                new ObjectParameter("Time_Year", time_Year) :
                new ObjectParameter("Time_Year", typeof(string));
    
            var sectionParameter = section != null ?
                new ObjectParameter("section", section) :
                new ObjectParameter("section", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_CreatePre_RankForMarksObtain_Final", class_StuParameter, time_YearParameter, sectionParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_CreateRankForMarksObtain_Result> Sp_CreateRankForMarksObtain(string class_Stu, string terms, string time_Year, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("class_Stu", class_Stu) :
                new ObjectParameter("class_Stu", typeof(string));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var time_YearParameter = time_Year != null ?
                new ObjectParameter("Time_Year", time_Year) :
                new ObjectParameter("Time_Year", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CreateRankForMarksObtain_Result>("Sp_CreateRankForMarksObtain", class_StuParameter, termsParameter, time_YearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_CreateRankForMarksObtainfinal(string class_Stu, string terms, string time_Year, string section, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("class_Stu", class_Stu) :
                new ObjectParameter("class_Stu", typeof(string));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var time_YearParameter = time_Year != null ?
                new ObjectParameter("Time_Year", time_Year) :
                new ObjectParameter("Time_Year", typeof(string));
    
            var sectionParameter = section != null ?
                new ObjectParameter("section", section) :
                new ObjectParameter("section", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_CreateRankForMarksObtainfinal", class_StuParameter, termsParameter, time_YearParameter, sectionParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_CrystalMarksValue_Result> Sp_CrystalMarksValue(string classMark, string termsMark, string yearVakMark, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var classMarkParameter = classMark != null ?
                new ObjectParameter("classMark", classMark) :
                new ObjectParameter("classMark", typeof(string));
    
            var termsMarkParameter = termsMark != null ?
                new ObjectParameter("termsMark", termsMark) :
                new ObjectParameter("termsMark", typeof(string));
    
            var yearVakMarkParameter = yearVakMark != null ?
                new ObjectParameter("YearVakMark", yearVakMark) :
                new ObjectParameter("YearVakMark", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CrystalMarksValue_Result>("Sp_CrystalMarksValue", classMarkParameter, termsMarkParameter, yearVakMarkParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_DayEndInformation_Result> sp_DayEndInformation(Nullable<System.DateTime> dayEndFrom, Nullable<System.DateTime> dayEndTo)
        {
            var dayEndFromParameter = dayEndFrom.HasValue ?
                new ObjectParameter("DayEndFrom", dayEndFrom) :
                new ObjectParameter("DayEndFrom", typeof(System.DateTime));
    
            var dayEndToParameter = dayEndTo.HasValue ?
                new ObjectParameter("DayEndTo", dayEndTo) :
                new ObjectParameter("DayEndTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DayEndInformation_Result>("sp_DayEndInformation", dayEndFromParameter, dayEndToParameter);
        }
    
        public virtual int sp_DeleteDublicateMarksId(string studentId, string examterm, string year_B_C, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var examtermParameter = examterm != null ?
                new ObjectParameter("Examterm", examterm) :
                new ObjectParameter("Examterm", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteDublicateMarksId", studentIdParameter, examtermParameter, year_B_CParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_DeleteDublicateMarksId_Final(string studentId, string examterm, string year_B_C, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var examtermParameter = examterm != null ?
                new ObjectParameter("Examterm", examterm) :
                new ObjectParameter("Examterm", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteDublicateMarksId_Final", studentIdParameter, examtermParameter, year_B_CParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_DeleteDublicateStudentBehav(string studentId, string examterm, string year_B_C, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var examtermParameter = examterm != null ?
                new ObjectParameter("Examterm", examterm) :
                new ObjectParameter("Examterm", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteDublicateStudentBehav", studentIdParameter, examtermParameter, year_B_CParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_DeleteForUpdate(string userName, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeleteForUpdate", userNameParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_DeleteIndivusalClassEntry(string terms_Exan, string class_stu, string year_exam, string sectionfield, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var terms_ExanParameter = terms_Exan != null ?
                new ObjectParameter("Terms_Exan", terms_Exan) :
                new ObjectParameter("Terms_Exan", typeof(string));
    
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("class_stu", class_stu) :
                new ObjectParameter("class_stu", typeof(string));
    
            var year_examParameter = year_exam != null ?
                new ObjectParameter("Year_exam", year_exam) :
                new ObjectParameter("Year_exam", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("sectionfield", sectionfield) :
                new ObjectParameter("sectionfield", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteIndivusalClassEntry", terms_ExanParameter, class_stuParameter, year_examParameter, sectionfieldParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_DeleteTopIdAutoBillPrint_Result> Sp_DeleteTopIdAutoBillPrint()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DeleteTopIdAutoBillPrint_Result>("Sp_DeleteTopIdAutoBillPrint");
        }
    
        public virtual ObjectResult<Sp_DeleteTopIdAutoMaticResultEntry_Result> Sp_DeleteTopIdAutoMaticResultEntry(Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DeleteTopIdAutoMaticResultEntry_Result>("Sp_DeleteTopIdAutoMaticResultEntry", sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_DeleteTopSjubjet_Mark_Result> Sp_DeleteTopSjubjet_Mark(Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DeleteTopSjubjet_Mark_Result>("Sp_DeleteTopSjubjet_Mark", sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_Deletetransctionassetsdetail(Nullable<int> trackId)
        {
            var trackIdParameter = trackId.HasValue ?
                new ObjectParameter("TrackId", trackId) :
                new ObjectParameter("TrackId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Deletetransctionassetsdetail", trackIdParameter);
        }
    
        public virtual int Sp_Deletetransctioncashin_out(Nullable<int> trackId)
        {
            var trackIdParameter = trackId.HasValue ?
                new ObjectParameter("TrackId", trackId) :
                new ObjectParameter("TrackId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Deletetransctioncashin_out", trackIdParameter);
        }
    
        public virtual int Sp_Deletetransctionexpendituredetail(Nullable<int> trackId)
        {
            var trackIdParameter = trackId.HasValue ?
                new ObjectParameter("TrackId", trackId) :
                new ObjectParameter("TrackId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Deletetransctionexpendituredetail", trackIdParameter);
        }
    
        public virtual int Sp_DeletetransctionIncomedetail(Nullable<int> trackId)
        {
            var trackIdParameter = trackId.HasValue ?
                new ObjectParameter("TrackId", trackId) :
                new ObjectParameter("TrackId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeletetransctionIncomedetail", trackIdParameter);
        }
    
        public virtual int Sp_DeletetransctionJvoucher(Nullable<int> vN)
        {
            var vNParameter = vN.HasValue ?
                new ObjectParameter("VN", vN) :
                new ObjectParameter("VN", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeletetransctionJvoucher", vNParameter);
        }
    
        public virtual int Sp_DeletetransctionLiabilitesdetail(Nullable<int> trackId)
        {
            var trackIdParameter = trackId.HasValue ?
                new ObjectParameter("TrackId", trackId) :
                new ObjectParameter("TrackId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeletetransctionLiabilitesdetail", trackIdParameter);
        }
    
        public virtual int Sp_DeletetransctionTransctiondetail(Nullable<int> trackId)
        {
            var trackIdParameter = trackId.HasValue ?
                new ObjectParameter("TrackId", trackId) :
                new ObjectParameter("TrackId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeletetransctionTransctiondetail", trackIdParameter);
        }
    
        public virtual ObjectResult<sp_DiscountStudentHeading_Result> sp_DiscountStudentHeading(string studentid)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DiscountStudentHeading_Result>("sp_DiscountStudentHeading", studentidParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_expendituredetail_PreYear(Nullable<System.DateTime> dateFiled, Nullable<int> vn, string accountCode, string accountHeading, Nullable<decimal> amount, string groupHeading, string acYear, Nullable<int> trackid)
        {
            var dateFiledParameter = dateFiled.HasValue ?
                new ObjectParameter("DateFiled", dateFiled) :
                new ObjectParameter("DateFiled", typeof(System.DateTime));
    
            var vnParameter = vn.HasValue ?
                new ObjectParameter("Vn", vn) :
                new ObjectParameter("Vn", typeof(int));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var groupHeadingParameter = groupHeading != null ?
                new ObjectParameter("GroupHeading", groupHeading) :
                new ObjectParameter("GroupHeading", typeof(string));
    
            var acYearParameter = acYear != null ?
                new ObjectParameter("AcYear", acYear) :
                new ObjectParameter("AcYear", typeof(string));
    
            var trackidParameter = trackid.HasValue ?
                new ObjectParameter("trackid", trackid) :
                new ObjectParameter("trackid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_expendituredetail_PreYear", dateFiledParameter, vnParameter, accountCodeParameter, accountHeadingParameter, amountParameter, groupHeadingParameter, acYearParameter, trackidParameter);
        }
    
        public virtual ObjectResult<Sp_FianlReultPro1_Result> Sp_FianlReultPro1(string terms, string year_B, string class_stu, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var year_BParameter = year_B != null ?
                new ObjectParameter("Year_B", year_B) :
                new ObjectParameter("Year_B", typeof(string));
    
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("Class_stu", class_stu) :
                new ObjectParameter("Class_stu", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_FianlReultPro1_Result>("Sp_FianlReultPro1", termsParameter, year_BParameter, class_stuParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_FianlReultPro2_Result> sp_FianlReultPro2(string year_B, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var year_BParameter = year_B != null ?
                new ObjectParameter("Year_B", year_B) :
                new ObjectParameter("Year_B", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_FianlReultPro2_Result>("sp_FianlReultPro2", year_BParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_Get_Insert_Rank_Result> Sp_Get_Insert_Rank()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Insert_Rank_Result>("Sp_Get_Insert_Rank");
        }
    
        public virtual ObjectResult<Sp_Get_Insert_Rank_Final_Result> Sp_Get_Insert_Rank_Final()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Insert_Rank_Final_Result>("Sp_Get_Insert_Rank_Final");
        }
    
        public virtual int sp_getanitamerseinserdata()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getanitamerseinserdata");
        }
    
        public virtual int sp_getAnitaMerseTerms(string terms, string year, string class_term, Nullable<decimal> termvalue, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var termsParameter = terms != null ?
                new ObjectParameter("terms", terms) :
                new ObjectParameter("terms", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var class_termParameter = class_term != null ?
                new ObjectParameter("class_term", class_term) :
                new ObjectParameter("class_term", typeof(string));
    
            var termvalueParameter = termvalue.HasValue ?
                new ObjectParameter("termvalue", termvalue) :
                new ObjectParameter("termvalue", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAnitaMerseTerms", termsParameter, yearParameter, class_termParameter, termvalueParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_getAnitaMerseTermsTemMidfirstterm(string terms, string year, Nullable<decimal> termvalue, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var termsParameter = terms != null ?
                new ObjectParameter("terms", terms) :
                new ObjectParameter("terms", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var termvalueParameter = termvalue.HasValue ?
                new ObjectParameter("termvalue", termvalue) :
                new ObjectParameter("termvalue", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAnitaMerseTermsTemMidfirstterm", termsParameter, yearParameter, termvalueParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getattenbycode_Result> sp_getattenbycode(string attcode, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var attcodeParameter = attcode != null ?
                new ObjectParameter("attcode", attcode) :
                new ObjectParameter("attcode", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getattenbycode_Result>("sp_getattenbycode", attcodeParameter, fromdateParameter, todateParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getattendatevalue_Result> sp_getattendatevalue(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getattendatevalue_Result>("sp_getattendatevalue", fromdateParameter, todateParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_getbankbalance(string bankname, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var banknameParameter = bankname != null ?
                new ObjectParameter("bankname", bankname) :
                new ObjectParameter("bankname", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_getbankbalance", banknameParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<string> SP_GetBillGenerateTrack(string yRA, string months, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var yRAParameter = yRA != null ?
                new ObjectParameter("YRA", yRA) :
                new ObjectParameter("YRA", typeof(string));
    
            var monthsParameter = months != null ?
                new ObjectParameter("Months", months) :
                new ObjectParameter("Months", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetBillGenerateTrack", yRAParameter, monthsParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<string> SP_GetBillGenerateTrackStaff(string yRA, string months, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var yRAParameter = yRA != null ?
                new ObjectParameter("YRA", yRA) :
                new ObjectParameter("YRA", typeof(string));
    
            var monthsParameter = months != null ?
                new ObjectParameter("Months", months) :
                new ObjectParameter("Months", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetBillGenerateTrackStaff", yRAParameter, monthsParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getBillIndivusalByMonth_Result> sp_getBillIndivusalByMonth(string studentid, string billMonth, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("Studentid", studentid) :
                new ObjectParameter("Studentid", typeof(string));
    
            var billMonthParameter = billMonth != null ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getBillIndivusalByMonth_Result>("sp_getBillIndivusalByMonth", studentidParameter, billMonthParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getBillPrintById_Result> sp_getBillPrintById(string studentid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("Studentid", studentid) :
                new ObjectParameter("Studentid", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getBillPrintById_Result>("sp_getBillPrintById", studentidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_GetCashboofinco_Result> sp_GetCashboofinco(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCashboofinco_Result>("sp_GetCashboofinco", fromdateParameter, todateParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_GetCashBookDetail_Result> Sp_GetCashBookDetail(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCashBookDetail_Result>("Sp_GetCashBookDetail", fromdateParameter, todateParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getclasspre_Result> sp_getclasspre(string other1, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var other1Parameter = other1 != null ?
                new ObjectParameter("other1", other1) :
                new ObjectParameter("other1", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getclasspre_Result>("sp_getclasspre", other1Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_GetCrystalResult_Result> sp_GetCrystalResult(string classStu, string terms, string yearVak, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var classStuParameter = classStu != null ?
                new ObjectParameter("classStu", classStu) :
                new ObjectParameter("classStu", typeof(string));
    
            var termsParameter = terms != null ?
                new ObjectParameter("terms", terms) :
                new ObjectParameter("terms", typeof(string));
    
            var yearVakParameter = yearVak != null ?
                new ObjectParameter("YearVak", yearVak) :
                new ObjectParameter("YearVak", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCrystalResult_Result>("sp_GetCrystalResult", classStuParameter, termsParameter, yearVakParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_GetDivisioninfo_Division_Result> sp_GetDivisioninfo_Division(string division, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var divisionParameter = division != null ?
                new ObjectParameter("division", division) :
                new ObjectParameter("division", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDivisioninfo_Division_Result>("sp_GetDivisioninfo_Division", divisionParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_GetExamShudle_Result> Sp_GetExamShudle(string examterm, string examYear, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var examtermParameter = examterm != null ?
                new ObjectParameter("examterm", examterm) :
                new ObjectParameter("examterm", typeof(string));
    
            var examYearParameter = examYear != null ?
                new ObjectParameter("ExamYear", examYear) :
                new ObjectParameter("ExamYear", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetExamShudle_Result>("Sp_GetExamShudle", examtermParameter, examYearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getInfobySubject_Result> sp_getInfobySubject(string subject, string class_Stu, string time_Year, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("Class_Stu", class_Stu) :
                new ObjectParameter("Class_Stu", typeof(string));
    
            var time_YearParameter = time_Year != null ?
                new ObjectParameter("Time_Year", time_Year) :
                new ObjectParameter("Time_Year", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getInfobySubject_Result>("sp_getInfobySubject", subjectParameter, class_StuParameter, time_YearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_getinformationstu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getinformationstu");
        }
    
        public virtual int sp_getinformationstu1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getinformationstu1");
        }
    
        public virtual ObjectResult<sp_getJvoucher_Result> sp_getJvoucher(Nullable<int> vN, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var vNParameter = vN.HasValue ?
                new ObjectParameter("VN", vN) :
                new ObjectParameter("VN", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getJvoucher_Result>("sp_getJvoucher", vNParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_GetLedgerPrint_Result> sp_GetLedgerPrint(string class_stu, string year_B_C, string examterm, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("class_stu", class_stu) :
                new ObjectParameter("class_stu", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var examtermParameter = examterm != null ?
                new ObjectParameter("Examterm", examterm) :
                new ObjectParameter("Examterm", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetLedgerPrint_Result>("sp_GetLedgerPrint", class_stuParameter, year_B_CParameter, examtermParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_getMahabhukmpa2072DataMunicipali_Result> Sp_getMahabhukmpa2072DataMunicipali(string district, string municipalities, string wardno)
        {
            var districtParameter = district != null ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(string));
    
            var municipalitiesParameter = municipalities != null ?
                new ObjectParameter("Municipalities", municipalities) :
                new ObjectParameter("Municipalities", typeof(string));
    
            var wardnoParameter = wardno != null ?
                new ObjectParameter("Wardno", wardno) :
                new ObjectParameter("Wardno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_getMahabhukmpa2072DataMunicipali_Result>("Sp_getMahabhukmpa2072DataMunicipali", districtParameter, municipalitiesParameter, wardnoParameter);
        }
    
        public virtual ObjectResult<Sp_getMahabhukmpa2072DataVDC_Result> Sp_getMahabhukmpa2072DataVDC(string district, string vDc, string wardno)
        {
            var districtParameter = district != null ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(string));
    
            var vDcParameter = vDc != null ?
                new ObjectParameter("VDc", vDc) :
                new ObjectParameter("VDc", typeof(string));
    
            var wardnoParameter = wardno != null ?
                new ObjectParameter("Wardno", wardno) :
                new ObjectParameter("Wardno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_getMahabhukmpa2072DataVDC_Result>("Sp_getMahabhukmpa2072DataVDC", districtParameter, vDcParameter, wardnoParameter);
        }
    
        public virtual ObjectResult<SP_GetNoOfID_Result> SP_GetNoOfID(Nullable<int> nOIC, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var nOICParameter = nOIC.HasValue ?
                new ObjectParameter("NOIC", nOIC) :
                new ObjectParameter("NOIC", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetNoOfID_Result>("SP_GetNoOfID", nOICParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_GetPaymentReceive_History_ByStudent_ID_Result> Sp_GetPaymentReceive_History_ByStudent_ID(string studentID, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIDParameter = studentID != null ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetPaymentReceive_History_ByStudent_ID_Result>("Sp_GetPaymentReceive_History_ByStudent_ID", studentIDParameter, fromdateParameter, todateParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_GetPaymentReceiveByID_Months_Result> Sp_GetPaymentReceiveByID_Months(string studentId, string months, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var monthsParameter = months != null ?
                new ObjectParameter("Months", months) :
                new ObjectParameter("Months", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetPaymentReceiveByID_Months_Result>("Sp_GetPaymentReceiveByID_Months", studentIdParameter, monthsParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_GetPaymentReceiveByTranNo_Result> Sp_GetPaymentReceiveByTranNo(string tranNo, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var tranNoParameter = tranNo != null ?
                new ObjectParameter("TranNo", tranNo) :
                new ObjectParameter("TranNo", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetPaymentReceiveByTranNo_Result>("Sp_GetPaymentReceiveByTranNo", tranNoParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_GetPaymentReceiveByTranNoTransctiondetail_Result> Sp_GetPaymentReceiveByTranNoTransctiondetail(Nullable<decimal> balanceamount, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var balanceamountParameter = balanceamount.HasValue ?
                new ObjectParameter("Balanceamount", balanceamount) :
                new ObjectParameter("Balanceamount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetPaymentReceiveByTranNoTransctiondetail_Result>("Sp_GetPaymentReceiveByTranNoTransctiondetail", balanceamountParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_GetPrintReportMonthlybill_Result> sp_GetPrintReportMonthlybill(string id, string month, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPrintReportMonthlybill_Result>("sp_GetPrintReportMonthlybill", idParameter, monthParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_GetRemarksPercentageRank_Result> Sp_GetRemarksPercentageRank(Nullable<decimal> f_Percentage, string remarks, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var f_PercentageParameter = f_Percentage.HasValue ?
                new ObjectParameter("F_Percentage", f_Percentage) :
                new ObjectParameter("F_Percentage", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetRemarksPercentageRank_Result>("Sp_GetRemarksPercentageRank", f_PercentageParameter, remarksParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<SP_GetResultIndivusalClassEntry__Result> SP_GetResultIndivusalClassEntry_(string gRAICE, string terms_Exan, string year_exam, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var gRAICEParameter = gRAICE != null ?
                new ObjectParameter("GRAICE", gRAICE) :
                new ObjectParameter("GRAICE", typeof(string));
    
            var terms_ExanParameter = terms_Exan != null ?
                new ObjectParameter("Terms_Exan", terms_Exan) :
                new ObjectParameter("Terms_Exan", typeof(string));
    
            var year_examParameter = year_exam != null ?
                new ObjectParameter("Year_exam", year_exam) :
                new ObjectParameter("Year_exam", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetResultIndivusalClassEntry__Result>("SP_GetResultIndivusalClassEntry_", gRAICEParameter, terms_ExanParameter, year_examParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getresultOnline_Result> sp_getresultOnline(string studentid, string year_B_C, string examterm, Nullable<int> sc_1)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("Studentid", studentid) :
                new ObjectParameter("Studentid", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var examtermParameter = examterm != null ?
                new ObjectParameter("Examterm", examterm) :
                new ObjectParameter("Examterm", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getresultOnline_Result>("sp_getresultOnline", studentidParameter, year_B_CParameter, examtermParameter, sc_1Parameter);
        }
    
        public virtual ObjectResult<sp_getsalaraybarpaigov_Result> sp_getsalaraybarpaigov(string other2, string other3, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var other2Parameter = other2 != null ?
                new ObjectParameter("other2", other2) :
                new ObjectParameter("other2", typeof(string));
    
            var other3Parameter = other3 != null ?
                new ObjectParameter("other3", other3) :
                new ObjectParameter("other3", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getsalaraybarpaigov_Result>("sp_getsalaraybarpaigov", other2Parameter, other3Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getSchoolCode_Result> sp_getSchoolCode(Nullable<int> code)
        {
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getSchoolCode_Result>("sp_getSchoolCode", codeParameter);
        }
    
        public virtual ObjectResult<sp_GetSlokoPrint_Result> sp_GetSlokoPrint(Nullable<int> tranNo, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var tranNoParameter = tranNo.HasValue ?
                new ObjectParameter("TranNo", tranNo) :
                new ObjectParameter("TranNo", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetSlokoPrint_Result>("sp_GetSlokoPrint", tranNoParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getstaffbalance_Result> sp_getstaffbalance(string stafid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var stafidParameter = stafid != null ?
                new ObjectParameter("stafid", stafid) :
                new ObjectParameter("stafid", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getstaffbalance_Result>("sp_getstaffbalance", stafidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_GetStaffinformation_Result> Sp_GetStaffinformation(string staffcode, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var staffcodeParameter = staffcode != null ?
                new ObjectParameter("staffcode", staffcode) :
                new ObjectParameter("staffcode", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetStaffinformation_Result>("Sp_GetStaffinformation", staffcodeParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getstaffsalarycode_Result> sp_getstaffsalarycode(string staff, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var staffParameter = staff != null ?
                new ObjectParameter("staff", staff) :
                new ObjectParameter("staff", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getstaffsalarycode_Result>("sp_getstaffsalarycode", staffParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_GetStudentBheviour_Result> Sp_GetStudentBheviour(string studentid, string examTerm, string year_B_c, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var examTermParameter = examTerm != null ?
                new ObjectParameter("ExamTerm", examTerm) :
                new ObjectParameter("ExamTerm", typeof(string));
    
            var year_B_cParameter = year_B_c != null ?
                new ObjectParameter("Year_B_c", year_B_c) :
                new ObjectParameter("Year_B_c", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetStudentBheviour_Result>("Sp_GetStudentBheviour", studentidParameter, examTermParameter, year_B_cParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_GetStudentByBatch_Result> Sp_GetStudentByBatch(string batch, string class_Student, Nullable<int> sC_1, Nullable<int> sc_2)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(string));
    
            var class_StudentParameter = class_Student != null ?
                new ObjectParameter("Class_Student", class_Student) :
                new ObjectParameter("Class_Student", typeof(string));
    
            var sC_1Parameter = sC_1.HasValue ?
                new ObjectParameter("SC_1", sC_1) :
                new ObjectParameter("SC_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetStudentByBatch_Result>("Sp_GetStudentByBatch", batchParameter, class_StudentParameter, sC_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_GetStudentDiscountTrack_Result> sp_GetStudentDiscountTrack(string studentid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetStudentDiscountTrack_Result>("sp_GetStudentDiscountTrack", studentidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_GetstudentLastBalanceInformation_Result> sp_GetstudentLastBalanceInformation(string class_student, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_studentParameter = class_student != null ?
                new ObjectParameter("class_student", class_student) :
                new ObjectParameter("class_student", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetstudentLastBalanceInformation_Result>("sp_GetstudentLastBalanceInformation", class_studentParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_GetstudentLastBalanceInformation_All_Result> sp_GetstudentLastBalanceInformation_All(Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetstudentLastBalanceInformation_All_Result>("sp_GetstudentLastBalanceInformation_All", sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getstudentmonthlybehavior_Result> sp_getstudentmonthlybehavior(string studentid, Nullable<System.DateTime> yearvale, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("Studentid", studentid) :
                new ObjectParameter("Studentid", typeof(string));
    
            var yearvaleParameter = yearvale.HasValue ?
                new ObjectParameter("yearvale", yearvale) :
                new ObjectParameter("yearvale", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getstudentmonthlybehavior_Result>("sp_getstudentmonthlybehavior", studentidParameter, yearvaleParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getstudentonline_Result> sp_getstudentonline(string studentid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getstudentonline_Result>("sp_getstudentonline", studentidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_GetStudentRecord_Result> Sp_GetStudentRecord(string studentid, string academicYear, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var academicYearParameter = academicYear != null ?
                new ObjectParameter("AcademicYear", academicYear) :
                new ObjectParameter("AcademicYear", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetStudentRecord_Result>("Sp_GetStudentRecord", studentidParameter, academicYearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getsubjectadvance_Result> sp_getsubjectadvance(string class_stu, string terms, string times_year, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("class_stu", class_stu) :
                new ObjectParameter("class_stu", typeof(string));
    
            var termsParameter = terms != null ?
                new ObjectParameter("terms", terms) :
                new ObjectParameter("terms", typeof(string));
    
            var times_yearParameter = times_year != null ?
                new ObjectParameter("times_year", times_year) :
                new ObjectParameter("times_year", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getsubjectadvance_Result>("sp_getsubjectadvance", class_stuParameter, termsParameter, times_yearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getSubjectInfo_bysubjectcode_Result> sp_getSubjectInfo_bysubjectcode(Nullable<int> gSBSC, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var gSBSCParameter = gSBSC.HasValue ?
                new ObjectParameter("GSBSC", gSBSC) :
                new ObjectParameter("GSBSC", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getSubjectInfo_bysubjectcode_Result>("sp_getSubjectInfo_bysubjectcode", gSBSCParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getSubjectInformation_Result> sp_getSubjectInformation(string class_Stu, string terms, string time_Year, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("Class_Stu", class_Stu) :
                new ObjectParameter("Class_Stu", typeof(string));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var time_YearParameter = time_Year != null ?
                new ObjectParameter("Time_Year", time_Year) :
                new ObjectParameter("Time_Year", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getSubjectInformation_Result>("sp_getSubjectInformation", class_StuParameter, termsParameter, time_YearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_getTempPrintDiscount_Result> sp_getTempPrintDiscount(string studentid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getTempPrintDiscount_Result>("sp_getTempPrintDiscount", studentidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_gettermsvalueAnita_Result> sp_gettermsvalueAnita(string examterm, string yearvalue, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var examtermParameter = examterm != null ?
                new ObjectParameter("examterm", examterm) :
                new ObjectParameter("examterm", typeof(string));
    
            var yearvalueParameter = yearvalue != null ?
                new ObjectParameter("Yearvalue", yearvalue) :
                new ObjectParameter("Yearvalue", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_gettermsvalueAnita_Result>("sp_gettermsvalueAnita", examtermParameter, yearvalueParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_GetTimesTypeFinalResulty_Result> sp_GetTimesTypeFinalResulty(string studentid, string exanterm, string year_B_C, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("Studentid", studentid) :
                new ObjectParameter("Studentid", typeof(string));
    
            var exantermParameter = exanterm != null ?
                new ObjectParameter("Exanterm", exanterm) :
                new ObjectParameter("Exanterm", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTimesTypeFinalResulty_Result>("sp_GetTimesTypeFinalResulty", studentidParameter, exantermParameter, year_B_CParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_GetTopMarksObtain_Result> Sp_GetTopMarksObtain(string class_stu, string examterm, string year_B_C, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("Class_stu", class_stu) :
                new ObjectParameter("Class_stu", typeof(string));
    
            var examtermParameter = examterm != null ?
                new ObjectParameter("Examterm", examterm) :
                new ObjectParameter("Examterm", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetTopMarksObtain_Result>("Sp_GetTopMarksObtain", class_stuParameter, examtermParameter, year_B_CParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_GroupLedgerbyDate_Result> sp_GroupLedgerbyDate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupLedgerbyDate_Result>("sp_GroupLedgerbyDate", fromDateParameter, toDateParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_GroupLedgerbyDateWithDetail_Result> sp_GroupLedgerbyDateWithDetail(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupLedgerbyDateWithDetail_Result>("sp_GroupLedgerbyDateWithDetail", fromDateParameter, toDateParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_incomedetail_PreYea(Nullable<System.DateTime> dateFiled, Nullable<int> vn, string accountCode, string accountHeading, Nullable<decimal> amount, string groupHeading, string acYear, Nullable<int> trackid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var dateFiledParameter = dateFiled.HasValue ?
                new ObjectParameter("DateFiled", dateFiled) :
                new ObjectParameter("DateFiled", typeof(System.DateTime));
    
            var vnParameter = vn.HasValue ?
                new ObjectParameter("Vn", vn) :
                new ObjectParameter("Vn", typeof(int));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var groupHeadingParameter = groupHeading != null ?
                new ObjectParameter("GroupHeading", groupHeading) :
                new ObjectParameter("GroupHeading", typeof(string));
    
            var acYearParameter = acYear != null ?
                new ObjectParameter("AcYear", acYear) :
                new ObjectParameter("AcYear", typeof(string));
    
            var trackidParameter = trackid.HasValue ?
                new ObjectParameter("trackid", trackid) :
                new ObjectParameter("trackid", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_incomedetail_PreYea", dateFiledParameter, vnParameter, accountCodeParameter, accountHeadingParameter, amountParameter, groupHeadingParameter, acYearParameter, trackidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertAccountBillStatus(ObjectParameter tranNO, string studentid, string accountHeading, string billMonths, Nullable<decimal> billDue, Nullable<decimal> paidBill, string class_Stu, string columntraco_1, string columntraco_2, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("Studentid", studentid) :
                new ObjectParameter("Studentid", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var billMonthsParameter = billMonths != null ?
                new ObjectParameter("BillMonths", billMonths) :
                new ObjectParameter("BillMonths", typeof(string));
    
            var billDueParameter = billDue.HasValue ?
                new ObjectParameter("BillDue", billDue) :
                new ObjectParameter("BillDue", typeof(decimal));
    
            var paidBillParameter = paidBill.HasValue ?
                new ObjectParameter("PaidBill", paidBill) :
                new ObjectParameter("PaidBill", typeof(decimal));
    
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("Class_Stu", class_Stu) :
                new ObjectParameter("Class_Stu", typeof(string));
    
            var columntraco_1Parameter = columntraco_1 != null ?
                new ObjectParameter("columntraco_1", columntraco_1) :
                new ObjectParameter("columntraco_1", typeof(string));
    
            var columntraco_2Parameter = columntraco_2 != null ?
                new ObjectParameter("columntraco_2", columntraco_2) :
                new ObjectParameter("columntraco_2", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertAccountBillStatus", tranNO, studentidParameter, accountHeadingParameter, billMonthsParameter, billDueParameter, paidBillParameter, class_StuParameter, columntraco_1Parameter, columntraco_2Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertAccountBillStatus_Billing(ObjectParameter tranNO, string studentid, string accountHeading, string billMonths, Nullable<decimal> billDue, Nullable<decimal> paidBill, string class_Stu, string columntraco_1, string columntraco_2, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("Studentid", studentid) :
                new ObjectParameter("Studentid", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var billMonthsParameter = billMonths != null ?
                new ObjectParameter("BillMonths", billMonths) :
                new ObjectParameter("BillMonths", typeof(string));
    
            var billDueParameter = billDue.HasValue ?
                new ObjectParameter("BillDue", billDue) :
                new ObjectParameter("BillDue", typeof(decimal));
    
            var paidBillParameter = paidBill.HasValue ?
                new ObjectParameter("PaidBill", paidBill) :
                new ObjectParameter("PaidBill", typeof(decimal));
    
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("Class_Stu", class_Stu) :
                new ObjectParameter("Class_Stu", typeof(string));
    
            var columntraco_1Parameter = columntraco_1 != null ?
                new ObjectParameter("columntraco_1", columntraco_1) :
                new ObjectParameter("columntraco_1", typeof(string));
    
            var columntraco_2Parameter = columntraco_2 != null ?
                new ObjectParameter("columntraco_2", columntraco_2) :
                new ObjectParameter("columntraco_2", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertAccountBillStatus_Billing", tranNO, studentidParameter, accountHeadingParameter, billMonthsParameter, billDueParameter, paidBillParameter, class_StuParameter, columntraco_1Parameter, columntraco_2Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertAccountCrosslink(string accountCode, string accountHeading, string accountcode2, string accountHeading2, string heading1, string heading2, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var accountcode2Parameter = accountcode2 != null ?
                new ObjectParameter("Accountcode2", accountcode2) :
                new ObjectParameter("Accountcode2", typeof(string));
    
            var accountHeading2Parameter = accountHeading2 != null ?
                new ObjectParameter("AccountHeading2", accountHeading2) :
                new ObjectParameter("AccountHeading2", typeof(string));
    
            var heading1Parameter = heading1 != null ?
                new ObjectParameter("Heading1", heading1) :
                new ObjectParameter("Heading1", typeof(string));
    
            var heading2Parameter = heading2 != null ?
                new ObjectParameter("Heading2", heading2) :
                new ObjectParameter("Heading2", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertAccountCrosslink", accountCodeParameter, accountHeadingParameter, accountcode2Parameter, accountHeading2Parameter, heading1Parameter, heading2Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertAccountHeading(string accountHeading, string accountCode, Nullable<decimal> amount, string accountType, string groupHeading, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            var groupHeadingParameter = groupHeading != null ?
                new ObjectParameter("GroupHeading", groupHeading) :
                new ObjectParameter("GroupHeading", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertAccountHeading", accountHeadingParameter, accountCodeParameter, amountParameter, accountTypeParameter, groupHeadingParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertaccountprepare(Nullable<System.DateTime> datetimefiled, string assountcode, string accountheading, Nullable<decimal> income, Nullable<decimal> expenditure, Nullable<decimal> assets, Nullable<decimal> liabilites, ObjectParameter tranNo, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var datetimefiledParameter = datetimefiled.HasValue ?
                new ObjectParameter("Datetimefiled", datetimefiled) :
                new ObjectParameter("Datetimefiled", typeof(System.DateTime));
    
            var assountcodeParameter = assountcode != null ?
                new ObjectParameter("Assountcode", assountcode) :
                new ObjectParameter("Assountcode", typeof(string));
    
            var accountheadingParameter = accountheading != null ?
                new ObjectParameter("Accountheading", accountheading) :
                new ObjectParameter("Accountheading", typeof(string));
    
            var incomeParameter = income.HasValue ?
                new ObjectParameter("Income", income) :
                new ObjectParameter("Income", typeof(decimal));
    
            var expenditureParameter = expenditure.HasValue ?
                new ObjectParameter("Expenditure", expenditure) :
                new ObjectParameter("Expenditure", typeof(decimal));
    
            var assetsParameter = assets.HasValue ?
                new ObjectParameter("Assets", assets) :
                new ObjectParameter("Assets", typeof(decimal));
    
            var liabilitesParameter = liabilites.HasValue ?
                new ObjectParameter("liabilites", liabilites) :
                new ObjectParameter("liabilites", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertaccountprepare", datetimefiledParameter, assountcodeParameter, accountheadingParameter, incomeParameter, expenditureParameter, assetsParameter, liabilitesParameter, tranNo, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_InsertAdvanSysResult_Result> sp_InsertAdvanSysResult(ObjectParameter subject_code, string class_Stu, string subject, Nullable<int> fullMarks, Nullable<int> theory, Nullable<int> partical, Nullable<int> totalPass, string terms, string time_Year, Nullable<decimal> fullTheory, Nullable<decimal> fullPratical, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("Class_Stu", class_Stu) :
                new ObjectParameter("Class_Stu", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var fullMarksParameter = fullMarks.HasValue ?
                new ObjectParameter("FullMarks", fullMarks) :
                new ObjectParameter("FullMarks", typeof(int));
    
            var theoryParameter = theory.HasValue ?
                new ObjectParameter("Theory", theory) :
                new ObjectParameter("Theory", typeof(int));
    
            var particalParameter = partical.HasValue ?
                new ObjectParameter("Partical", partical) :
                new ObjectParameter("Partical", typeof(int));
    
            var totalPassParameter = totalPass.HasValue ?
                new ObjectParameter("TotalPass", totalPass) :
                new ObjectParameter("TotalPass", typeof(int));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var time_YearParameter = time_Year != null ?
                new ObjectParameter("Time_Year", time_Year) :
                new ObjectParameter("Time_Year", typeof(string));
    
            var fullTheoryParameter = fullTheory.HasValue ?
                new ObjectParameter("FullTheory", fullTheory) :
                new ObjectParameter("FullTheory", typeof(decimal));
    
            var fullPraticalParameter = fullPratical.HasValue ?
                new ObjectParameter("FullPratical", fullPratical) :
                new ObjectParameter("FullPratical", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsertAdvanSysResult_Result>("sp_InsertAdvanSysResult", subject_code, class_StuParameter, subjectParameter, fullMarksParameter, theoryParameter, particalParameter, totalPassParameter, termsParameter, time_YearParameter, fullTheoryParameter, fullPraticalParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_insertAdvansysresult1(string subject, Nullable<int> fullmarks, Nullable<int> theory, Nullable<int> partical, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var fullmarksParameter = fullmarks.HasValue ?
                new ObjectParameter("Fullmarks", fullmarks) :
                new ObjectParameter("Fullmarks", typeof(int));
    
            var theoryParameter = theory.HasValue ?
                new ObjectParameter("Theory", theory) :
                new ObjectParameter("Theory", typeof(int));
    
            var particalParameter = partical.HasValue ?
                new ObjectParameter("Partical", partical) :
                new ObjectParameter("Partical", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_insertAdvansysresult1", subjectParameter, fullmarksParameter, theoryParameter, particalParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertAssetsDetail(Nullable<System.DateTime> dateFiled, ObjectParameter vn, string accountCode, string accountHeading, Nullable<decimal> amount, string groupHeading, Nullable<int> trackid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var dateFiledParameter = dateFiled.HasValue ?
                new ObjectParameter("DateFiled", dateFiled) :
                new ObjectParameter("DateFiled", typeof(System.DateTime));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var groupHeadingParameter = groupHeading != null ?
                new ObjectParameter("GroupHeading", groupHeading) :
                new ObjectParameter("GroupHeading", typeof(string));
    
            var trackidParameter = trackid.HasValue ?
                new ObjectParameter("trackid", trackid) :
                new ObjectParameter("trackid", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertAssetsDetail", dateFiledParameter, vn, accountCodeParameter, accountHeadingParameter, amountParameter, groupHeadingParameter, trackidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_insertattendenceschool(Nullable<System.DateTime> datevalue, string nepalidate, string attcode, string attgroup, string intime, string outTime, Nullable<decimal> attValue, string remarks, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var datevalueParameter = datevalue.HasValue ?
                new ObjectParameter("Datevalue", datevalue) :
                new ObjectParameter("Datevalue", typeof(System.DateTime));
    
            var nepalidateParameter = nepalidate != null ?
                new ObjectParameter("Nepalidate", nepalidate) :
                new ObjectParameter("Nepalidate", typeof(string));
    
            var attcodeParameter = attcode != null ?
                new ObjectParameter("Attcode", attcode) :
                new ObjectParameter("Attcode", typeof(string));
    
            var attgroupParameter = attgroup != null ?
                new ObjectParameter("Attgroup", attgroup) :
                new ObjectParameter("Attgroup", typeof(string));
    
            var intimeParameter = intime != null ?
                new ObjectParameter("Intime", intime) :
                new ObjectParameter("Intime", typeof(string));
    
            var outTimeParameter = outTime != null ?
                new ObjectParameter("OutTime", outTime) :
                new ObjectParameter("OutTime", typeof(string));
    
            var attValueParameter = attValue.HasValue ?
                new ObjectParameter("AttValue", attValue) :
                new ObjectParameter("AttValue", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertattendenceschool", datevalueParameter, nepalidateParameter, attcodeParameter, attgroupParameter, intimeParameter, outTimeParameter, attValueParameter, remarksParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertAuthorighSign(string authrighName, string authorizSignPath, ObjectParameter transNo, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var authrighNameParameter = authrighName != null ?
                new ObjectParameter("AuthrighName", authrighName) :
                new ObjectParameter("AuthrighName", typeof(string));
    
            var authorizSignPathParameter = authorizSignPath != null ?
                new ObjectParameter("AuthorizSignPath", authorizSignPath) :
                new ObjectParameter("AuthorizSignPath", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertAuthorighSign", authrighNameParameter, authorizSignPathParameter, transNo, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertBank_Transction_Detail(string miti, Nullable<System.DateTime> tran_Date, string bank_Name, string cheque_N0, Nullable<decimal> preAmount_Balance, Nullable<decimal> deposite, Nullable<decimal> withDraw, Nullable<decimal> balance_Amount, string trans_By, string currentUser, ObjectParameter transNo, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var mitiParameter = miti != null ?
                new ObjectParameter("Miti", miti) :
                new ObjectParameter("Miti", typeof(string));
    
            var tran_DateParameter = tran_Date.HasValue ?
                new ObjectParameter("Tran_Date", tran_Date) :
                new ObjectParameter("Tran_Date", typeof(System.DateTime));
    
            var bank_NameParameter = bank_Name != null ?
                new ObjectParameter("Bank_Name", bank_Name) :
                new ObjectParameter("Bank_Name", typeof(string));
    
            var cheque_N0Parameter = cheque_N0 != null ?
                new ObjectParameter("cheque_N0", cheque_N0) :
                new ObjectParameter("cheque_N0", typeof(string));
    
            var preAmount_BalanceParameter = preAmount_Balance.HasValue ?
                new ObjectParameter("PreAmount_Balance", preAmount_Balance) :
                new ObjectParameter("PreAmount_Balance", typeof(decimal));
    
            var depositeParameter = deposite.HasValue ?
                new ObjectParameter("Deposite", deposite) :
                new ObjectParameter("Deposite", typeof(decimal));
    
            var withDrawParameter = withDraw.HasValue ?
                new ObjectParameter("WithDraw", withDraw) :
                new ObjectParameter("WithDraw", typeof(decimal));
    
            var balance_AmountParameter = balance_Amount.HasValue ?
                new ObjectParameter("Balance_Amount", balance_Amount) :
                new ObjectParameter("Balance_Amount", typeof(decimal));
    
            var trans_ByParameter = trans_By != null ?
                new ObjectParameter("Trans_By", trans_By) :
                new ObjectParameter("Trans_By", typeof(string));
    
            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertBank_Transction_Detail", mitiParameter, tran_DateParameter, bank_NameParameter, cheque_N0Parameter, preAmount_BalanceParameter, depositeParameter, withDrawParameter, balance_AmountParameter, trans_ByParameter, currentUserParameter, transNo, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertbankheadingtable(string accountcode, string accountheading, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var accountcodeParameter = accountcode != null ?
                new ObjectParameter("accountcode", accountcode) :
                new ObjectParameter("accountcode", typeof(string));
    
            var accountheadingParameter = accountheading != null ?
                new ObjectParameter("accountheading", accountheading) :
                new ObjectParameter("accountheading", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertbankheadingtable", accountcodeParameter, accountheadingParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertBillCommonClass(ObjectParameter tranNo, Nullable<System.DateTime> englis_date, string nepalidate, string class_Student, string billHeading, Nullable<decimal> amount, string accountCode, string accountheading, string groupheading, string billMonthNepali, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var englis_dateParameter = englis_date.HasValue ?
                new ObjectParameter("Englis_date", englis_date) :
                new ObjectParameter("Englis_date", typeof(System.DateTime));
    
            var nepalidateParameter = nepalidate != null ?
                new ObjectParameter("Nepalidate", nepalidate) :
                new ObjectParameter("Nepalidate", typeof(string));
    
            var class_StudentParameter = class_Student != null ?
                new ObjectParameter("Class_Student", class_Student) :
                new ObjectParameter("Class_Student", typeof(string));
    
            var billHeadingParameter = billHeading != null ?
                new ObjectParameter("billHeading", billHeading) :
                new ObjectParameter("billHeading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("accountCode", accountCode) :
                new ObjectParameter("accountCode", typeof(string));
    
            var accountheadingParameter = accountheading != null ?
                new ObjectParameter("Accountheading", accountheading) :
                new ObjectParameter("Accountheading", typeof(string));
    
            var groupheadingParameter = groupheading != null ?
                new ObjectParameter("Groupheading", groupheading) :
                new ObjectParameter("Groupheading", typeof(string));
    
            var billMonthNepaliParameter = billMonthNepali != null ?
                new ObjectParameter("billMonthNepali", billMonthNepali) :
                new ObjectParameter("billMonthNepali", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertBillCommonClass", tranNo, englis_dateParameter, nepalidateParameter, class_StudentParameter, billHeadingParameter, amountParameter, accountCodeParameter, accountheadingParameter, groupheadingParameter, billMonthNepaliParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertBillExtraIndivusal(ObjectParameter tranNo, Nullable<System.DateTime> englis_date, string nepalidate, Nullable<int> studentid, string billHeading, Nullable<decimal> amount, string accountCode, string accountheading, string groupheading, string billMonthNepali, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var englis_dateParameter = englis_date.HasValue ?
                new ObjectParameter("Englis_date", englis_date) :
                new ObjectParameter("Englis_date", typeof(System.DateTime));
    
            var nepalidateParameter = nepalidate != null ?
                new ObjectParameter("Nepalidate", nepalidate) :
                new ObjectParameter("Nepalidate", typeof(string));
    
            var studentidParameter = studentid.HasValue ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(int));
    
            var billHeadingParameter = billHeading != null ?
                new ObjectParameter("billHeading", billHeading) :
                new ObjectParameter("billHeading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("accountCode", accountCode) :
                new ObjectParameter("accountCode", typeof(string));
    
            var accountheadingParameter = accountheading != null ?
                new ObjectParameter("Accountheading", accountheading) :
                new ObjectParameter("Accountheading", typeof(string));
    
            var groupheadingParameter = groupheading != null ?
                new ObjectParameter("Groupheading", groupheading) :
                new ObjectParameter("Groupheading", typeof(string));
    
            var billMonthNepaliParameter = billMonthNepali != null ?
                new ObjectParameter("billMonthNepali", billMonthNepali) :
                new ObjectParameter("billMonthNepali", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertBillExtraIndivusal", tranNo, englis_dateParameter, nepalidateParameter, studentidParameter, billHeadingParameter, amountParameter, accountCodeParameter, accountheadingParameter, groupheadingParameter, billMonthNepaliParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertBillGenerateStaff_Track(string year_Ma, string months_Ma, string status, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var year_MaParameter = year_Ma != null ?
                new ObjectParameter("Year_Ma", year_Ma) :
                new ObjectParameter("Year_Ma", typeof(string));
    
            var months_MaParameter = months_Ma != null ?
                new ObjectParameter("Months_Ma", months_Ma) :
                new ObjectParameter("Months_Ma", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertBillGenerateStaff_Track", year_MaParameter, months_MaParameter, statusParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertbillmonthlyindivusal(Nullable<int> studentid, string billHeading, Nullable<decimal> amount, ObjectParameter tranNo, string accountheading, string accountCode, string groupHeading, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid.HasValue ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(int));
    
            var billHeadingParameter = billHeading != null ?
                new ObjectParameter("billHeading", billHeading) :
                new ObjectParameter("billHeading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var accountheadingParameter = accountheading != null ?
                new ObjectParameter("Accountheading", accountheading) :
                new ObjectParameter("Accountheading", typeof(string));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var groupHeadingParameter = groupHeading != null ?
                new ObjectParameter("GroupHeading", groupHeading) :
                new ObjectParameter("GroupHeading", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertbillmonthlyindivusal", studentidParameter, billHeadingParameter, amountParameter, tranNo, accountheadingParameter, accountCodeParameter, groupHeadingParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertbillmonthlystudent(Nullable<int> studentid, string billheading, Nullable<decimal> amount, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid.HasValue ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(int));
    
            var billheadingParameter = billheading != null ?
                new ObjectParameter("billheading", billheading) :
                new ObjectParameter("billheading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertbillmonthlystudent", studentidParameter, billheadingParameter, amountParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertBillTraco(string year_Ma, string months_Ma, string status, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var year_MaParameter = year_Ma != null ?
                new ObjectParameter("Year_Ma", year_Ma) :
                new ObjectParameter("Year_Ma", typeof(string));
    
            var months_MaParameter = months_Ma != null ?
                new ObjectParameter("Months_Ma", months_Ma) :
                new ObjectParameter("Months_Ma", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertBillTraco", year_MaParameter, months_MaParameter, statusParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertCashIn_Out(Nullable<System.DateTime> dateValue, Nullable<System.DateTime> transctionTime, ObjectParameter total_Trans_Today, string accountHeading, Nullable<decimal> preBalance, Nullable<decimal> cashIn, Nullable<decimal> cahOut, Nullable<decimal> balanceCash, string userName, Nullable<int> trackId, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var dateValueParameter = dateValue.HasValue ?
                new ObjectParameter("DateValue", dateValue) :
                new ObjectParameter("DateValue", typeof(System.DateTime));
    
            var transctionTimeParameter = transctionTime.HasValue ?
                new ObjectParameter("transctionTime", transctionTime) :
                new ObjectParameter("transctionTime", typeof(System.DateTime));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var preBalanceParameter = preBalance.HasValue ?
                new ObjectParameter("PreBalance", preBalance) :
                new ObjectParameter("PreBalance", typeof(decimal));
    
            var cashInParameter = cashIn.HasValue ?
                new ObjectParameter("CashIn", cashIn) :
                new ObjectParameter("CashIn", typeof(decimal));
    
            var cahOutParameter = cahOut.HasValue ?
                new ObjectParameter("CahOut", cahOut) :
                new ObjectParameter("CahOut", typeof(decimal));
    
            var balanceCashParameter = balanceCash.HasValue ?
                new ObjectParameter("BalanceCash", balanceCash) :
                new ObjectParameter("BalanceCash", typeof(decimal));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var trackIdParameter = trackId.HasValue ?
                new ObjectParameter("TrackId", trackId) :
                new ObjectParameter("TrackId", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertCashIn_Out", dateValueParameter, transctionTimeParameter, total_Trans_Today, accountHeadingParameter, preBalanceParameter, cashInParameter, cahOutParameter, balanceCashParameter, userNameParameter, trackIdParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertCashIn_Out_PreYear(Nullable<System.DateTime> dateValue, Nullable<System.DateTime> transctionTime, Nullable<int> total_Trans_Today, string accountHeading, Nullable<decimal> preBalance, Nullable<decimal> cashIn, Nullable<decimal> cahOut, Nullable<decimal> balanceCash, string userName, Nullable<int> trackId, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var dateValueParameter = dateValue.HasValue ?
                new ObjectParameter("DateValue", dateValue) :
                new ObjectParameter("DateValue", typeof(System.DateTime));
    
            var transctionTimeParameter = transctionTime.HasValue ?
                new ObjectParameter("transctionTime", transctionTime) :
                new ObjectParameter("transctionTime", typeof(System.DateTime));
    
            var total_Trans_TodayParameter = total_Trans_Today.HasValue ?
                new ObjectParameter("Total_Trans_Today", total_Trans_Today) :
                new ObjectParameter("Total_Trans_Today", typeof(int));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var preBalanceParameter = preBalance.HasValue ?
                new ObjectParameter("PreBalance", preBalance) :
                new ObjectParameter("PreBalance", typeof(decimal));
    
            var cashInParameter = cashIn.HasValue ?
                new ObjectParameter("CashIn", cashIn) :
                new ObjectParameter("CashIn", typeof(decimal));
    
            var cahOutParameter = cahOut.HasValue ?
                new ObjectParameter("CahOut", cahOut) :
                new ObjectParameter("CahOut", typeof(decimal));
    
            var balanceCashParameter = balanceCash.HasValue ?
                new ObjectParameter("BalanceCash", balanceCash) :
                new ObjectParameter("BalanceCash", typeof(decimal));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var trackIdParameter = trackId.HasValue ?
                new ObjectParameter("TrackId", trackId) :
                new ObjectParameter("TrackId", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertCashIn_Out_PreYear", dateValueParameter, transctionTimeParameter, total_Trans_TodayParameter, accountHeadingParameter, preBalanceParameter, cashInParameter, cahOutParameter, balanceCashParameter, userNameParameter, trackIdParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertCashIn_Outforerror()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertCashIn_Outforerror");
        }
    
        public virtual int sp_insertclass_pre(ObjectParameter tranno, string classvalue, string prefix, string other, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var classvalueParameter = classvalue != null ?
                new ObjectParameter("Classvalue", classvalue) :
                new ObjectParameter("Classvalue", typeof(string));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("other", other) :
                new ObjectParameter("other", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertclass_pre", tranno, classvalueParameter, prefixParameter, otherParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertCustomercashTable(string studentid, Nullable<System.DateTime> datevalue, Nullable<decimal> totalAmount, Nullable<decimal> duePayment, Nullable<decimal> balanceDue, string selectMonths, ObjectParameter tranNo, string columntrack_1, string columntrack_2, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var datevalueParameter = datevalue.HasValue ?
                new ObjectParameter("Datevalue", datevalue) :
                new ObjectParameter("Datevalue", typeof(System.DateTime));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var duePaymentParameter = duePayment.HasValue ?
                new ObjectParameter("DuePayment", duePayment) :
                new ObjectParameter("DuePayment", typeof(decimal));
    
            var balanceDueParameter = balanceDue.HasValue ?
                new ObjectParameter("BalanceDue", balanceDue) :
                new ObjectParameter("BalanceDue", typeof(decimal));
    
            var selectMonthsParameter = selectMonths != null ?
                new ObjectParameter("SelectMonths", selectMonths) :
                new ObjectParameter("SelectMonths", typeof(string));
    
            var columntrack_1Parameter = columntrack_1 != null ?
                new ObjectParameter("Columntrack_1", columntrack_1) :
                new ObjectParameter("Columntrack_1", typeof(string));
    
            var columntrack_2Parameter = columntrack_2 != null ?
                new ObjectParameter("Columntrack_2", columntrack_2) :
                new ObjectParameter("Columntrack_2", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertCustomercashTable", studentidParameter, datevalueParameter, totalAmountParameter, duePaymentParameter, balanceDueParameter, selectMonthsParameter, tranNo, columntrack_1Parameter, columntrack_2Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertCustomerSalesBill(ObjectParameter tranNo, string customerId, string customerInvoiceNo, Nullable<System.DateTime> dateValue, string nepaDate, Nullable<decimal> totalBillAmount, Nullable<decimal> discountBill, Nullable<decimal> afterDiscount, Nullable<decimal> taxAmount, Nullable<decimal> amountWithTax, Nullable<decimal> preBalanceAmount, Nullable<decimal> newBalancecustomer, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var customerIdParameter = customerId != null ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(string));
    
            var customerInvoiceNoParameter = customerInvoiceNo != null ?
                new ObjectParameter("CustomerInvoiceNo", customerInvoiceNo) :
                new ObjectParameter("CustomerInvoiceNo", typeof(string));
    
            var dateValueParameter = dateValue.HasValue ?
                new ObjectParameter("DateValue", dateValue) :
                new ObjectParameter("DateValue", typeof(System.DateTime));
    
            var nepaDateParameter = nepaDate != null ?
                new ObjectParameter("NepaDate", nepaDate) :
                new ObjectParameter("NepaDate", typeof(string));
    
            var totalBillAmountParameter = totalBillAmount.HasValue ?
                new ObjectParameter("TotalBillAmount", totalBillAmount) :
                new ObjectParameter("TotalBillAmount", typeof(decimal));
    
            var discountBillParameter = discountBill.HasValue ?
                new ObjectParameter("DiscountBill", discountBill) :
                new ObjectParameter("DiscountBill", typeof(decimal));
    
            var afterDiscountParameter = afterDiscount.HasValue ?
                new ObjectParameter("AfterDiscount", afterDiscount) :
                new ObjectParameter("AfterDiscount", typeof(decimal));
    
            var taxAmountParameter = taxAmount.HasValue ?
                new ObjectParameter("TaxAmount", taxAmount) :
                new ObjectParameter("TaxAmount", typeof(decimal));
    
            var amountWithTaxParameter = amountWithTax.HasValue ?
                new ObjectParameter("AmountWithTax", amountWithTax) :
                new ObjectParameter("AmountWithTax", typeof(decimal));
    
            var preBalanceAmountParameter = preBalanceAmount.HasValue ?
                new ObjectParameter("PreBalanceAmount", preBalanceAmount) :
                new ObjectParameter("PreBalanceAmount", typeof(decimal));
    
            var newBalancecustomerParameter = newBalancecustomer.HasValue ?
                new ObjectParameter("NewBalancecustomer", newBalancecustomer) :
                new ObjectParameter("NewBalancecustomer", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertCustomerSalesBill", tranNo, customerIdParameter, customerInvoiceNoParameter, dateValueParameter, nepaDateParameter, totalBillAmountParameter, discountBillParameter, afterDiscountParameter, taxAmountParameter, amountWithTaxParameter, preBalanceAmountParameter, newBalancecustomerParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertdayconditiondetail(ObjectParameter transNo, string miti, Nullable<System.DateTime> datevalue, string dayCondition, string userName, Nullable<int> conditionCode, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var mitiParameter = miti != null ?
                new ObjectParameter("Miti", miti) :
                new ObjectParameter("Miti", typeof(string));
    
            var datevalueParameter = datevalue.HasValue ?
                new ObjectParameter("Datevalue", datevalue) :
                new ObjectParameter("Datevalue", typeof(System.DateTime));
    
            var dayConditionParameter = dayCondition != null ?
                new ObjectParameter("DayCondition", dayCondition) :
                new ObjectParameter("DayCondition", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var conditionCodeParameter = conditionCode.HasValue ?
                new ObjectParameter("ConditionCode", conditionCode) :
                new ObjectParameter("ConditionCode", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertdayconditiondetail", transNo, mitiParameter, datevalueParameter, dayConditionParameter, userNameParameter, conditionCodeParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertDayEnd(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> openingBalance, Nullable<decimal> cashIn, Nullable<decimal> cashOut, Nullable<decimal> balanceCash, Nullable<decimal> cashInvault, Nullable<decimal> cashInTailor, string remarks, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var openingBalanceParameter = openingBalance.HasValue ?
                new ObjectParameter("OpeningBalance", openingBalance) :
                new ObjectParameter("OpeningBalance", typeof(decimal));
    
            var cashInParameter = cashIn.HasValue ?
                new ObjectParameter("CashIn", cashIn) :
                new ObjectParameter("CashIn", typeof(decimal));
    
            var cashOutParameter = cashOut.HasValue ?
                new ObjectParameter("CashOut", cashOut) :
                new ObjectParameter("CashOut", typeof(decimal));
    
            var balanceCashParameter = balanceCash.HasValue ?
                new ObjectParameter("BalanceCash", balanceCash) :
                new ObjectParameter("BalanceCash", typeof(decimal));
    
            var cashInvaultParameter = cashInvault.HasValue ?
                new ObjectParameter("CashInvault", cashInvault) :
                new ObjectParameter("CashInvault", typeof(decimal));
    
            var cashInTailorParameter = cashInTailor.HasValue ?
                new ObjectParameter("CashInTailor", cashInTailor) :
                new ObjectParameter("CashInTailor", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertDayEnd", startDateParameter, endDateParameter, openingBalanceParameter, cashInParameter, cashOutParameter, balanceCashParameter, cashInvaultParameter, cashInTailorParameter, remarksParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertDayStart(Nullable<System.DateTime> startDate, Nullable<decimal> openingBalance, Nullable<decimal> cashInvault, Nullable<decimal> cashInTailor, string remarks, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var openingBalanceParameter = openingBalance.HasValue ?
                new ObjectParameter("OpeningBalance", openingBalance) :
                new ObjectParameter("OpeningBalance", typeof(decimal));
    
            var cashInvaultParameter = cashInvault.HasValue ?
                new ObjectParameter("CashInvault", cashInvault) :
                new ObjectParameter("CashInvault", typeof(decimal));
    
            var cashInTailorParameter = cashInTailor.HasValue ?
                new ObjectParameter("CashInTailor", cashInTailor) :
                new ObjectParameter("CashInTailor", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertDayStart", startDateParameter, openingBalanceParameter, cashInvaultParameter, cashInTailorParameter, remarksParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertEntryBook(ObjectParameter tranBokCode, string booksCode, string title, string author, string publication, string catagories, Nullable<System.DateTime> publshieddate, string edition, Nullable<decimal> unitprice, Nullable<int> quantity, Nullable<decimal> total, Nullable<int> totalbooks, Nullable<System.DateTime> purchaseDate, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var booksCodeParameter = booksCode != null ?
                new ObjectParameter("BooksCode", booksCode) :
                new ObjectParameter("BooksCode", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var authorParameter = author != null ?
                new ObjectParameter("Author", author) :
                new ObjectParameter("Author", typeof(string));
    
            var publicationParameter = publication != null ?
                new ObjectParameter("Publication", publication) :
                new ObjectParameter("Publication", typeof(string));
    
            var catagoriesParameter = catagories != null ?
                new ObjectParameter("Catagories", catagories) :
                new ObjectParameter("Catagories", typeof(string));
    
            var publshieddateParameter = publshieddate.HasValue ?
                new ObjectParameter("Publshieddate", publshieddate) :
                new ObjectParameter("Publshieddate", typeof(System.DateTime));
    
            var editionParameter = edition != null ?
                new ObjectParameter("Edition", edition) :
                new ObjectParameter("Edition", typeof(string));
    
            var unitpriceParameter = unitprice.HasValue ?
                new ObjectParameter("Unitprice", unitprice) :
                new ObjectParameter("Unitprice", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var totalbooksParameter = totalbooks.HasValue ?
                new ObjectParameter("totalbooks", totalbooks) :
                new ObjectParameter("totalbooks", typeof(int));
    
            var purchaseDateParameter = purchaseDate.HasValue ?
                new ObjectParameter("PurchaseDate", purchaseDate) :
                new ObjectParameter("PurchaseDate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertEntryBook", tranBokCode, booksCodeParameter, titleParameter, authorParameter, publicationParameter, catagoriesParameter, publshieddateParameter, editionParameter, unitpriceParameter, quantityParameter, totalParameter, totalbooksParameter, purchaseDateParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertExamFinal(string studentId, string namefield, string class_stu, string roll, string sectionfield, string subject1, string subject2, string subject3, string subject4, string subject5, string subject6, string subject7, string subject8, string subject9, string subject10, string subject11, string subject12, string subject13, string subject14, string subject15, string subject16, string subject17, string subject18, string subject19, string subject20, Nullable<decimal> totalMarksObtain, string pratical1, string pratical2, string pratical3, string pratical4, string pratical5, string pratical6, string pratical7, string pratical8, string pratical9, string pratical10, string pratical11, string pratical12, string pratical13, string pratical14, string pratical15, string pratical16, string pratical17, string pratical18, string pratical19, string pratical20, Nullable<decimal> totalpratical, Nullable<decimal> totalobtainmarks1, Nullable<decimal> totalobtainmarks2, Nullable<decimal> totalobtainmarks3, Nullable<decimal> totalobtainmarks4, Nullable<decimal> totalobtainmarks5, Nullable<decimal> totalobtainmarks6, Nullable<decimal> totalobtainmarks7, Nullable<decimal> totalobtainmarks8, Nullable<decimal> totalobtainmarks9, Nullable<decimal> totalobtainmarks10, Nullable<decimal> totalobtainmarks11, Nullable<decimal> totalobtainmarks12, Nullable<decimal> totalobtainmarks13, Nullable<decimal> totalobtainmarks14, Nullable<decimal> totalobtainmarks15, Nullable<decimal> totalobtainmarks16, Nullable<decimal> totalobtainmarks17, Nullable<decimal> totalobtainmarks18, Nullable<decimal> totalobtainmarks19, Nullable<decimal> totalobtainmarks20, Nullable<decimal> tatalobtainmarks, Nullable<decimal> totalWorkingDay, Nullable<decimal> totalPresentDay, Nullable<decimal> totalAbsentDay, string writting, string speaking, string conduct, string neatness, string musicDance, string currentUser, string passFail, Nullable<decimal> percentage, string division, string examterm, string year_B_C, Nullable<int> rank, string col1, string col2, string col3, string col4, string col5, string col6, string col7, string col8, string col9, string col10, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var namefieldParameter = namefield != null ?
                new ObjectParameter("Namefield", namefield) :
                new ObjectParameter("Namefield", typeof(string));
    
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("Class_stu", class_stu) :
                new ObjectParameter("Class_stu", typeof(string));
    
            var rollParameter = roll != null ?
                new ObjectParameter("Roll", roll) :
                new ObjectParameter("Roll", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("Sectionfield", sectionfield) :
                new ObjectParameter("Sectionfield", typeof(string));
    
            var subject1Parameter = subject1 != null ?
                new ObjectParameter("Subject1", subject1) :
                new ObjectParameter("Subject1", typeof(string));
    
            var subject2Parameter = subject2 != null ?
                new ObjectParameter("Subject2", subject2) :
                new ObjectParameter("Subject2", typeof(string));
    
            var subject3Parameter = subject3 != null ?
                new ObjectParameter("Subject3", subject3) :
                new ObjectParameter("Subject3", typeof(string));
    
            var subject4Parameter = subject4 != null ?
                new ObjectParameter("Subject4", subject4) :
                new ObjectParameter("Subject4", typeof(string));
    
            var subject5Parameter = subject5 != null ?
                new ObjectParameter("Subject5", subject5) :
                new ObjectParameter("Subject5", typeof(string));
    
            var subject6Parameter = subject6 != null ?
                new ObjectParameter("Subject6", subject6) :
                new ObjectParameter("Subject6", typeof(string));
    
            var subject7Parameter = subject7 != null ?
                new ObjectParameter("Subject7", subject7) :
                new ObjectParameter("Subject7", typeof(string));
    
            var subject8Parameter = subject8 != null ?
                new ObjectParameter("Subject8", subject8) :
                new ObjectParameter("Subject8", typeof(string));
    
            var subject9Parameter = subject9 != null ?
                new ObjectParameter("Subject9", subject9) :
                new ObjectParameter("Subject9", typeof(string));
    
            var subject10Parameter = subject10 != null ?
                new ObjectParameter("Subject10", subject10) :
                new ObjectParameter("Subject10", typeof(string));
    
            var subject11Parameter = subject11 != null ?
                new ObjectParameter("Subject11", subject11) :
                new ObjectParameter("Subject11", typeof(string));
    
            var subject12Parameter = subject12 != null ?
                new ObjectParameter("Subject12", subject12) :
                new ObjectParameter("Subject12", typeof(string));
    
            var subject13Parameter = subject13 != null ?
                new ObjectParameter("Subject13", subject13) :
                new ObjectParameter("Subject13", typeof(string));
    
            var subject14Parameter = subject14 != null ?
                new ObjectParameter("Subject14", subject14) :
                new ObjectParameter("Subject14", typeof(string));
    
            var subject15Parameter = subject15 != null ?
                new ObjectParameter("Subject15", subject15) :
                new ObjectParameter("Subject15", typeof(string));
    
            var subject16Parameter = subject16 != null ?
                new ObjectParameter("Subject16", subject16) :
                new ObjectParameter("Subject16", typeof(string));
    
            var subject17Parameter = subject17 != null ?
                new ObjectParameter("Subject17", subject17) :
                new ObjectParameter("Subject17", typeof(string));
    
            var subject18Parameter = subject18 != null ?
                new ObjectParameter("Subject18", subject18) :
                new ObjectParameter("Subject18", typeof(string));
    
            var subject19Parameter = subject19 != null ?
                new ObjectParameter("Subject19", subject19) :
                new ObjectParameter("Subject19", typeof(string));
    
            var subject20Parameter = subject20 != null ?
                new ObjectParameter("Subject20", subject20) :
                new ObjectParameter("Subject20", typeof(string));
    
            var totalMarksObtainParameter = totalMarksObtain.HasValue ?
                new ObjectParameter("TotalMarksObtain", totalMarksObtain) :
                new ObjectParameter("TotalMarksObtain", typeof(decimal));
    
            var pratical1Parameter = pratical1 != null ?
                new ObjectParameter("pratical1", pratical1) :
                new ObjectParameter("pratical1", typeof(string));
    
            var pratical2Parameter = pratical2 != null ?
                new ObjectParameter("pratical2", pratical2) :
                new ObjectParameter("pratical2", typeof(string));
    
            var pratical3Parameter = pratical3 != null ?
                new ObjectParameter("pratical3", pratical3) :
                new ObjectParameter("pratical3", typeof(string));
    
            var pratical4Parameter = pratical4 != null ?
                new ObjectParameter("pratical4", pratical4) :
                new ObjectParameter("pratical4", typeof(string));
    
            var pratical5Parameter = pratical5 != null ?
                new ObjectParameter("pratical5", pratical5) :
                new ObjectParameter("pratical5", typeof(string));
    
            var pratical6Parameter = pratical6 != null ?
                new ObjectParameter("pratical6", pratical6) :
                new ObjectParameter("pratical6", typeof(string));
    
            var pratical7Parameter = pratical7 != null ?
                new ObjectParameter("pratical7", pratical7) :
                new ObjectParameter("pratical7", typeof(string));
    
            var pratical8Parameter = pratical8 != null ?
                new ObjectParameter("pratical8", pratical8) :
                new ObjectParameter("pratical8", typeof(string));
    
            var pratical9Parameter = pratical9 != null ?
                new ObjectParameter("pratical9", pratical9) :
                new ObjectParameter("pratical9", typeof(string));
    
            var pratical10Parameter = pratical10 != null ?
                new ObjectParameter("pratical10", pratical10) :
                new ObjectParameter("pratical10", typeof(string));
    
            var pratical11Parameter = pratical11 != null ?
                new ObjectParameter("pratical11", pratical11) :
                new ObjectParameter("pratical11", typeof(string));
    
            var pratical12Parameter = pratical12 != null ?
                new ObjectParameter("pratical12", pratical12) :
                new ObjectParameter("pratical12", typeof(string));
    
            var pratical13Parameter = pratical13 != null ?
                new ObjectParameter("pratical13", pratical13) :
                new ObjectParameter("pratical13", typeof(string));
    
            var pratical14Parameter = pratical14 != null ?
                new ObjectParameter("pratical14", pratical14) :
                new ObjectParameter("pratical14", typeof(string));
    
            var pratical15Parameter = pratical15 != null ?
                new ObjectParameter("pratical15", pratical15) :
                new ObjectParameter("pratical15", typeof(string));
    
            var pratical16Parameter = pratical16 != null ?
                new ObjectParameter("pratical16", pratical16) :
                new ObjectParameter("pratical16", typeof(string));
    
            var pratical17Parameter = pratical17 != null ?
                new ObjectParameter("pratical17", pratical17) :
                new ObjectParameter("pratical17", typeof(string));
    
            var pratical18Parameter = pratical18 != null ?
                new ObjectParameter("pratical18", pratical18) :
                new ObjectParameter("pratical18", typeof(string));
    
            var pratical19Parameter = pratical19 != null ?
                new ObjectParameter("pratical19", pratical19) :
                new ObjectParameter("pratical19", typeof(string));
    
            var pratical20Parameter = pratical20 != null ?
                new ObjectParameter("pratical20", pratical20) :
                new ObjectParameter("pratical20", typeof(string));
    
            var totalpraticalParameter = totalpratical.HasValue ?
                new ObjectParameter("totalpratical", totalpratical) :
                new ObjectParameter("totalpratical", typeof(decimal));
    
            var totalobtainmarks1Parameter = totalobtainmarks1.HasValue ?
                new ObjectParameter("totalobtainmarks1", totalobtainmarks1) :
                new ObjectParameter("totalobtainmarks1", typeof(decimal));
    
            var totalobtainmarks2Parameter = totalobtainmarks2.HasValue ?
                new ObjectParameter("totalobtainmarks2", totalobtainmarks2) :
                new ObjectParameter("totalobtainmarks2", typeof(decimal));
    
            var totalobtainmarks3Parameter = totalobtainmarks3.HasValue ?
                new ObjectParameter("totalobtainmarks3", totalobtainmarks3) :
                new ObjectParameter("totalobtainmarks3", typeof(decimal));
    
            var totalobtainmarks4Parameter = totalobtainmarks4.HasValue ?
                new ObjectParameter("totalobtainmarks4", totalobtainmarks4) :
                new ObjectParameter("totalobtainmarks4", typeof(decimal));
    
            var totalobtainmarks5Parameter = totalobtainmarks5.HasValue ?
                new ObjectParameter("totalobtainmarks5", totalobtainmarks5) :
                new ObjectParameter("totalobtainmarks5", typeof(decimal));
    
            var totalobtainmarks6Parameter = totalobtainmarks6.HasValue ?
                new ObjectParameter("totalobtainmarks6", totalobtainmarks6) :
                new ObjectParameter("totalobtainmarks6", typeof(decimal));
    
            var totalobtainmarks7Parameter = totalobtainmarks7.HasValue ?
                new ObjectParameter("totalobtainmarks7", totalobtainmarks7) :
                new ObjectParameter("totalobtainmarks7", typeof(decimal));
    
            var totalobtainmarks8Parameter = totalobtainmarks8.HasValue ?
                new ObjectParameter("totalobtainmarks8", totalobtainmarks8) :
                new ObjectParameter("totalobtainmarks8", typeof(decimal));
    
            var totalobtainmarks9Parameter = totalobtainmarks9.HasValue ?
                new ObjectParameter("totalobtainmarks9", totalobtainmarks9) :
                new ObjectParameter("totalobtainmarks9", typeof(decimal));
    
            var totalobtainmarks10Parameter = totalobtainmarks10.HasValue ?
                new ObjectParameter("totalobtainmarks10", totalobtainmarks10) :
                new ObjectParameter("totalobtainmarks10", typeof(decimal));
    
            var totalobtainmarks11Parameter = totalobtainmarks11.HasValue ?
                new ObjectParameter("totalobtainmarks11", totalobtainmarks11) :
                new ObjectParameter("totalobtainmarks11", typeof(decimal));
    
            var totalobtainmarks12Parameter = totalobtainmarks12.HasValue ?
                new ObjectParameter("totalobtainmarks12", totalobtainmarks12) :
                new ObjectParameter("totalobtainmarks12", typeof(decimal));
    
            var totalobtainmarks13Parameter = totalobtainmarks13.HasValue ?
                new ObjectParameter("totalobtainmarks13", totalobtainmarks13) :
                new ObjectParameter("totalobtainmarks13", typeof(decimal));
    
            var totalobtainmarks14Parameter = totalobtainmarks14.HasValue ?
                new ObjectParameter("totalobtainmarks14", totalobtainmarks14) :
                new ObjectParameter("totalobtainmarks14", typeof(decimal));
    
            var totalobtainmarks15Parameter = totalobtainmarks15.HasValue ?
                new ObjectParameter("totalobtainmarks15", totalobtainmarks15) :
                new ObjectParameter("totalobtainmarks15", typeof(decimal));
    
            var totalobtainmarks16Parameter = totalobtainmarks16.HasValue ?
                new ObjectParameter("totalobtainmarks16", totalobtainmarks16) :
                new ObjectParameter("totalobtainmarks16", typeof(decimal));
    
            var totalobtainmarks17Parameter = totalobtainmarks17.HasValue ?
                new ObjectParameter("totalobtainmarks17", totalobtainmarks17) :
                new ObjectParameter("totalobtainmarks17", typeof(decimal));
    
            var totalobtainmarks18Parameter = totalobtainmarks18.HasValue ?
                new ObjectParameter("totalobtainmarks18", totalobtainmarks18) :
                new ObjectParameter("totalobtainmarks18", typeof(decimal));
    
            var totalobtainmarks19Parameter = totalobtainmarks19.HasValue ?
                new ObjectParameter("totalobtainmarks19", totalobtainmarks19) :
                new ObjectParameter("totalobtainmarks19", typeof(decimal));
    
            var totalobtainmarks20Parameter = totalobtainmarks20.HasValue ?
                new ObjectParameter("totalobtainmarks20", totalobtainmarks20) :
                new ObjectParameter("totalobtainmarks20", typeof(decimal));
    
            var tatalobtainmarksParameter = tatalobtainmarks.HasValue ?
                new ObjectParameter("tatalobtainmarks", tatalobtainmarks) :
                new ObjectParameter("tatalobtainmarks", typeof(decimal));
    
            var totalWorkingDayParameter = totalWorkingDay.HasValue ?
                new ObjectParameter("TotalWorkingDay", totalWorkingDay) :
                new ObjectParameter("TotalWorkingDay", typeof(decimal));
    
            var totalPresentDayParameter = totalPresentDay.HasValue ?
                new ObjectParameter("totalPresentDay", totalPresentDay) :
                new ObjectParameter("totalPresentDay", typeof(decimal));
    
            var totalAbsentDayParameter = totalAbsentDay.HasValue ?
                new ObjectParameter("totalAbsentDay", totalAbsentDay) :
                new ObjectParameter("totalAbsentDay", typeof(decimal));
    
            var writtingParameter = writting != null ?
                new ObjectParameter("Writting", writting) :
                new ObjectParameter("Writting", typeof(string));
    
            var speakingParameter = speaking != null ?
                new ObjectParameter("Speaking", speaking) :
                new ObjectParameter("Speaking", typeof(string));
    
            var conductParameter = conduct != null ?
                new ObjectParameter("Conduct", conduct) :
                new ObjectParameter("Conduct", typeof(string));
    
            var neatnessParameter = neatness != null ?
                new ObjectParameter("Neatness", neatness) :
                new ObjectParameter("Neatness", typeof(string));
    
            var musicDanceParameter = musicDance != null ?
                new ObjectParameter("MusicDance", musicDance) :
                new ObjectParameter("MusicDance", typeof(string));
    
            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));
    
            var passFailParameter = passFail != null ?
                new ObjectParameter("PassFail", passFail) :
                new ObjectParameter("PassFail", typeof(string));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("Percentage", percentage) :
                new ObjectParameter("Percentage", typeof(decimal));
    
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var examtermParameter = examterm != null ?
                new ObjectParameter("Examterm", examterm) :
                new ObjectParameter("Examterm", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var rankParameter = rank.HasValue ?
                new ObjectParameter("Rank", rank) :
                new ObjectParameter("Rank", typeof(int));
    
            var col1Parameter = col1 != null ?
                new ObjectParameter("Col1", col1) :
                new ObjectParameter("Col1", typeof(string));
    
            var col2Parameter = col2 != null ?
                new ObjectParameter("Col2", col2) :
                new ObjectParameter("Col2", typeof(string));
    
            var col3Parameter = col3 != null ?
                new ObjectParameter("Col3", col3) :
                new ObjectParameter("Col3", typeof(string));
    
            var col4Parameter = col4 != null ?
                new ObjectParameter("Col4", col4) :
                new ObjectParameter("Col4", typeof(string));
    
            var col5Parameter = col5 != null ?
                new ObjectParameter("Col5", col5) :
                new ObjectParameter("Col5", typeof(string));
    
            var col6Parameter = col6 != null ?
                new ObjectParameter("Col6", col6) :
                new ObjectParameter("Col6", typeof(string));
    
            var col7Parameter = col7 != null ?
                new ObjectParameter("Col7", col7) :
                new ObjectParameter("Col7", typeof(string));
    
            var col8Parameter = col8 != null ?
                new ObjectParameter("Col8", col8) :
                new ObjectParameter("Col8", typeof(string));
    
            var col9Parameter = col9 != null ?
                new ObjectParameter("Col9", col9) :
                new ObjectParameter("Col9", typeof(string));
    
            var col10Parameter = col10 != null ?
                new ObjectParameter("Col10", col10) :
                new ObjectParameter("Col10", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertExamFinal", studentIdParameter, namefieldParameter, class_stuParameter, rollParameter, sectionfieldParameter, subject1Parameter, subject2Parameter, subject3Parameter, subject4Parameter, subject5Parameter, subject6Parameter, subject7Parameter, subject8Parameter, subject9Parameter, subject10Parameter, subject11Parameter, subject12Parameter, subject13Parameter, subject14Parameter, subject15Parameter, subject16Parameter, subject17Parameter, subject18Parameter, subject19Parameter, subject20Parameter, totalMarksObtainParameter, pratical1Parameter, pratical2Parameter, pratical3Parameter, pratical4Parameter, pratical5Parameter, pratical6Parameter, pratical7Parameter, pratical8Parameter, pratical9Parameter, pratical10Parameter, pratical11Parameter, pratical12Parameter, pratical13Parameter, pratical14Parameter, pratical15Parameter, pratical16Parameter, pratical17Parameter, pratical18Parameter, pratical19Parameter, pratical20Parameter, totalpraticalParameter, totalobtainmarks1Parameter, totalobtainmarks2Parameter, totalobtainmarks3Parameter, totalobtainmarks4Parameter, totalobtainmarks5Parameter, totalobtainmarks6Parameter, totalobtainmarks7Parameter, totalobtainmarks8Parameter, totalobtainmarks9Parameter, totalobtainmarks10Parameter, totalobtainmarks11Parameter, totalobtainmarks12Parameter, totalobtainmarks13Parameter, totalobtainmarks14Parameter, totalobtainmarks15Parameter, totalobtainmarks16Parameter, totalobtainmarks17Parameter, totalobtainmarks18Parameter, totalobtainmarks19Parameter, totalobtainmarks20Parameter, tatalobtainmarksParameter, totalWorkingDayParameter, totalPresentDayParameter, totalAbsentDayParameter, writtingParameter, speakingParameter, conductParameter, neatnessParameter, musicDanceParameter, currentUserParameter, passFailParameter, percentageParameter, divisionParameter, examtermParameter, year_B_CParameter, rankParameter, col1Parameter, col2Parameter, col3Parameter, col4Parameter, col5Parameter, col6Parameter, col7Parameter, col8Parameter, col9Parameter, col10Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertExamShedule(ObjectParameter tranNo, string calss_Student, string subject, string timeTable, string examShift, string examTerm, string examYear, string remarks, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var calss_StudentParameter = calss_Student != null ?
                new ObjectParameter("Calss_Student", calss_Student) :
                new ObjectParameter("Calss_Student", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var timeTableParameter = timeTable != null ?
                new ObjectParameter("TimeTable", timeTable) :
                new ObjectParameter("TimeTable", typeof(string));
    
            var examShiftParameter = examShift != null ?
                new ObjectParameter("ExamShift", examShift) :
                new ObjectParameter("ExamShift", typeof(string));
    
            var examTermParameter = examTerm != null ?
                new ObjectParameter("ExamTerm", examTerm) :
                new ObjectParameter("ExamTerm", typeof(string));
    
            var examYearParameter = examYear != null ?
                new ObjectParameter("ExamYear", examYear) :
                new ObjectParameter("ExamYear", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertExamShedule", tranNo, calss_StudentParameter, subjectParameter, timeTableParameter, examShiftParameter, examTermParameter, examYearParameter, remarksParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertExamTerm(ObjectParameter tranno, string examTerm, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var examTermParameter = examTerm != null ?
                new ObjectParameter("ExamTerm", examTerm) :
                new ObjectParameter("ExamTerm", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertExamTerm", tranno, examTermParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertexpendituredetail(Nullable<System.DateTime> dateFiled, ObjectParameter vn, string accountCode, string accountHeading, Nullable<decimal> amount, string groupHeading, Nullable<int> trackid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var dateFiledParameter = dateFiled.HasValue ?
                new ObjectParameter("DateFiled", dateFiled) :
                new ObjectParameter("DateFiled", typeof(System.DateTime));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var groupHeadingParameter = groupHeading != null ?
                new ObjectParameter("GroupHeading", groupHeading) :
                new ObjectParameter("GroupHeading", typeof(string));
    
            var trackidParameter = trackid.HasValue ?
                new ObjectParameter("trackid", trackid) :
                new ObjectParameter("trackid", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertexpendituredetail", dateFiledParameter, vn, accountCodeParameter, accountHeadingParameter, amountParameter, groupHeadingParameter, trackidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertFeeHeading(string accountcode, string accountheading, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var accountcodeParameter = accountcode != null ?
                new ObjectParameter("accountcode", accountcode) :
                new ObjectParameter("accountcode", typeof(string));
    
            var accountheadingParameter = accountheading != null ?
                new ObjectParameter("accountheading", accountheading) :
                new ObjectParameter("accountheading", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertFeeHeading", accountcodeParameter, accountheadingParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertfeeStructure_Table(ObjectParameter feeCode, string accountHeading, Nullable<decimal> amount, string class_Stu, string academicYear, string accountCode, string accountGroup, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("Class_Stu", class_Stu) :
                new ObjectParameter("Class_Stu", typeof(string));
    
            var academicYearParameter = academicYear != null ?
                new ObjectParameter("AcademicYear", academicYear) :
                new ObjectParameter("AcademicYear", typeof(string));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountGroupParameter = accountGroup != null ?
                new ObjectParameter("AccountGroup", accountGroup) :
                new ObjectParameter("AccountGroup", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertfeeStructure_Table", feeCode, accountHeadingParameter, amountParameter, class_StuParameter, academicYearParameter, accountCodeParameter, accountGroupParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertFinalAcAssets(ObjectParameter transNo, Nullable<System.DateTime> datefield, string accountCode, string accountHeading, Nullable<decimal> preAmount, Nullable<decimal> newAmount, Nullable<decimal> balanceAmount, string remarks, string customer, Nullable<System.DateTime> dateFiled, Nullable<decimal> amount, string groupHeading, Nullable<System.DateTime> dateValue, Nullable<System.DateTime> transctionTime, Nullable<decimal> preBalance, Nullable<decimal> cashIn, Nullable<decimal> cahOut, Nullable<decimal> balanceCash, string userName, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var datefieldParameter = datefield.HasValue ?
                new ObjectParameter("Datefield", datefield) :
                new ObjectParameter("Datefield", typeof(System.DateTime));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var preAmountParameter = preAmount.HasValue ?
                new ObjectParameter("PreAmount", preAmount) :
                new ObjectParameter("PreAmount", typeof(decimal));
    
            var newAmountParameter = newAmount.HasValue ?
                new ObjectParameter("NewAmount", newAmount) :
                new ObjectParameter("NewAmount", typeof(decimal));
    
            var balanceAmountParameter = balanceAmount.HasValue ?
                new ObjectParameter("BalanceAmount", balanceAmount) :
                new ObjectParameter("BalanceAmount", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var dateFiledParameter = dateFiled.HasValue ?
                new ObjectParameter("DateFiled", dateFiled) :
                new ObjectParameter("DateFiled", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var groupHeadingParameter = groupHeading != null ?
                new ObjectParameter("GroupHeading", groupHeading) :
                new ObjectParameter("GroupHeading", typeof(string));
    
            var dateValueParameter = dateValue.HasValue ?
                new ObjectParameter("DateValue", dateValue) :
                new ObjectParameter("DateValue", typeof(System.DateTime));
    
            var transctionTimeParameter = transctionTime.HasValue ?
                new ObjectParameter("transctionTime", transctionTime) :
                new ObjectParameter("transctionTime", typeof(System.DateTime));
    
            var preBalanceParameter = preBalance.HasValue ?
                new ObjectParameter("PreBalance", preBalance) :
                new ObjectParameter("PreBalance", typeof(decimal));
    
            var cashInParameter = cashIn.HasValue ?
                new ObjectParameter("CashIn", cashIn) :
                new ObjectParameter("CashIn", typeof(decimal));
    
            var cahOutParameter = cahOut.HasValue ?
                new ObjectParameter("CahOut", cahOut) :
                new ObjectParameter("CahOut", typeof(decimal));
    
            var balanceCashParameter = balanceCash.HasValue ?
                new ObjectParameter("BalanceCash", balanceCash) :
                new ObjectParameter("BalanceCash", typeof(decimal));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertFinalAcAssets", transNo, datefieldParameter, accountCodeParameter, accountHeadingParameter, preAmountParameter, newAmountParameter, balanceAmountParameter, remarksParameter, customerParameter, dateFiledParameter, amountParameter, groupHeadingParameter, dateValueParameter, transctionTimeParameter, preBalanceParameter, cashInParameter, cahOutParameter, balanceCashParameter, userNameParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertFinalAcExpenditure(ObjectParameter transNo, Nullable<System.DateTime> datefield, string accountCode, string accountHeading, Nullable<decimal> preAmount, Nullable<decimal> newAmount, Nullable<decimal> balanceAmount, string remarks, string customer, Nullable<System.DateTime> dateFiled, Nullable<decimal> amount, string groupHeading, Nullable<System.DateTime> dateValue, Nullable<System.DateTime> transctionTime, Nullable<decimal> preBalance, Nullable<decimal> cashIn, Nullable<decimal> cahOut, Nullable<decimal> balanceCash, string userName, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var datefieldParameter = datefield.HasValue ?
                new ObjectParameter("Datefield", datefield) :
                new ObjectParameter("Datefield", typeof(System.DateTime));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var preAmountParameter = preAmount.HasValue ?
                new ObjectParameter("PreAmount", preAmount) :
                new ObjectParameter("PreAmount", typeof(decimal));
    
            var newAmountParameter = newAmount.HasValue ?
                new ObjectParameter("NewAmount", newAmount) :
                new ObjectParameter("NewAmount", typeof(decimal));
    
            var balanceAmountParameter = balanceAmount.HasValue ?
                new ObjectParameter("BalanceAmount", balanceAmount) :
                new ObjectParameter("BalanceAmount", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var dateFiledParameter = dateFiled.HasValue ?
                new ObjectParameter("DateFiled", dateFiled) :
                new ObjectParameter("DateFiled", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var groupHeadingParameter = groupHeading != null ?
                new ObjectParameter("GroupHeading", groupHeading) :
                new ObjectParameter("GroupHeading", typeof(string));
    
            var dateValueParameter = dateValue.HasValue ?
                new ObjectParameter("DateValue", dateValue) :
                new ObjectParameter("DateValue", typeof(System.DateTime));
    
            var transctionTimeParameter = transctionTime.HasValue ?
                new ObjectParameter("transctionTime", transctionTime) :
                new ObjectParameter("transctionTime", typeof(System.DateTime));
    
            var preBalanceParameter = preBalance.HasValue ?
                new ObjectParameter("PreBalance", preBalance) :
                new ObjectParameter("PreBalance", typeof(decimal));
    
            var cashInParameter = cashIn.HasValue ?
                new ObjectParameter("CashIn", cashIn) :
                new ObjectParameter("CashIn", typeof(decimal));
    
            var cahOutParameter = cahOut.HasValue ?
                new ObjectParameter("CahOut", cahOut) :
                new ObjectParameter("CahOut", typeof(decimal));
    
            var balanceCashParameter = balanceCash.HasValue ?
                new ObjectParameter("BalanceCash", balanceCash) :
                new ObjectParameter("BalanceCash", typeof(decimal));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertFinalAcExpenditure", transNo, datefieldParameter, accountCodeParameter, accountHeadingParameter, preAmountParameter, newAmountParameter, balanceAmountParameter, remarksParameter, customerParameter, dateFiledParameter, amountParameter, groupHeadingParameter, dateValueParameter, transctionTimeParameter, preBalanceParameter, cashInParameter, cahOutParameter, balanceCashParameter, userNameParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertFinalAcIncome(ObjectParameter transNo, Nullable<System.DateTime> datefield, string accountCode, string accountHeading, Nullable<decimal> preAmount, Nullable<decimal> newAmount, Nullable<decimal> balanceAmount, string remarks, string customer, Nullable<System.DateTime> dateFiled, Nullable<decimal> amount, string groupHeading, Nullable<System.DateTime> dateValue, Nullable<System.DateTime> transctionTime, Nullable<decimal> preBalance, Nullable<decimal> cashIn, Nullable<decimal> cahOut, Nullable<decimal> balanceCash, string userName, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var datefieldParameter = datefield.HasValue ?
                new ObjectParameter("Datefield", datefield) :
                new ObjectParameter("Datefield", typeof(System.DateTime));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var preAmountParameter = preAmount.HasValue ?
                new ObjectParameter("PreAmount", preAmount) :
                new ObjectParameter("PreAmount", typeof(decimal));
    
            var newAmountParameter = newAmount.HasValue ?
                new ObjectParameter("NewAmount", newAmount) :
                new ObjectParameter("NewAmount", typeof(decimal));
    
            var balanceAmountParameter = balanceAmount.HasValue ?
                new ObjectParameter("BalanceAmount", balanceAmount) :
                new ObjectParameter("BalanceAmount", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var dateFiledParameter = dateFiled.HasValue ?
                new ObjectParameter("DateFiled", dateFiled) :
                new ObjectParameter("DateFiled", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var groupHeadingParameter = groupHeading != null ?
                new ObjectParameter("GroupHeading", groupHeading) :
                new ObjectParameter("GroupHeading", typeof(string));
    
            var dateValueParameter = dateValue.HasValue ?
                new ObjectParameter("DateValue", dateValue) :
                new ObjectParameter("DateValue", typeof(System.DateTime));
    
            var transctionTimeParameter = transctionTime.HasValue ?
                new ObjectParameter("transctionTime", transctionTime) :
                new ObjectParameter("transctionTime", typeof(System.DateTime));
    
            var preBalanceParameter = preBalance.HasValue ?
                new ObjectParameter("PreBalance", preBalance) :
                new ObjectParameter("PreBalance", typeof(decimal));
    
            var cashInParameter = cashIn.HasValue ?
                new ObjectParameter("CashIn", cashIn) :
                new ObjectParameter("CashIn", typeof(decimal));
    
            var cahOutParameter = cahOut.HasValue ?
                new ObjectParameter("CahOut", cahOut) :
                new ObjectParameter("CahOut", typeof(decimal));
    
            var balanceCashParameter = balanceCash.HasValue ?
                new ObjectParameter("BalanceCash", balanceCash) :
                new ObjectParameter("BalanceCash", typeof(decimal));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertFinalAcIncome", transNo, datefieldParameter, accountCodeParameter, accountHeadingParameter, preAmountParameter, newAmountParameter, balanceAmountParameter, remarksParameter, customerParameter, dateFiledParameter, amountParameter, groupHeadingParameter, dateValueParameter, transctionTimeParameter, preBalanceParameter, cashInParameter, cahOutParameter, balanceCashParameter, userNameParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertFinalAcLiabilities(ObjectParameter transNo, Nullable<System.DateTime> datefield, string accountCode, string accountHeading, Nullable<decimal> preAmount, Nullable<decimal> newAmount, Nullable<decimal> balanceAmount, string remarks, string customer, Nullable<System.DateTime> dateFiled, Nullable<decimal> amount, string groupHeading, Nullable<System.DateTime> dateValue, Nullable<System.DateTime> transctionTime, Nullable<decimal> preBalance, Nullable<decimal> cashIn, Nullable<decimal> cahOut, Nullable<decimal> balanceCash, string userName, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var datefieldParameter = datefield.HasValue ?
                new ObjectParameter("Datefield", datefield) :
                new ObjectParameter("Datefield", typeof(System.DateTime));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var preAmountParameter = preAmount.HasValue ?
                new ObjectParameter("PreAmount", preAmount) :
                new ObjectParameter("PreAmount", typeof(decimal));
    
            var newAmountParameter = newAmount.HasValue ?
                new ObjectParameter("NewAmount", newAmount) :
                new ObjectParameter("NewAmount", typeof(decimal));
    
            var balanceAmountParameter = balanceAmount.HasValue ?
                new ObjectParameter("BalanceAmount", balanceAmount) :
                new ObjectParameter("BalanceAmount", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var dateFiledParameter = dateFiled.HasValue ?
                new ObjectParameter("DateFiled", dateFiled) :
                new ObjectParameter("DateFiled", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var groupHeadingParameter = groupHeading != null ?
                new ObjectParameter("GroupHeading", groupHeading) :
                new ObjectParameter("GroupHeading", typeof(string));
    
            var dateValueParameter = dateValue.HasValue ?
                new ObjectParameter("DateValue", dateValue) :
                new ObjectParameter("DateValue", typeof(System.DateTime));
    
            var transctionTimeParameter = transctionTime.HasValue ?
                new ObjectParameter("transctionTime", transctionTime) :
                new ObjectParameter("transctionTime", typeof(System.DateTime));
    
            var preBalanceParameter = preBalance.HasValue ?
                new ObjectParameter("PreBalance", preBalance) :
                new ObjectParameter("PreBalance", typeof(decimal));
    
            var cashInParameter = cashIn.HasValue ?
                new ObjectParameter("CashIn", cashIn) :
                new ObjectParameter("CashIn", typeof(decimal));
    
            var cahOutParameter = cahOut.HasValue ?
                new ObjectParameter("CahOut", cahOut) :
                new ObjectParameter("CahOut", typeof(decimal));
    
            var balanceCashParameter = balanceCash.HasValue ?
                new ObjectParameter("BalanceCash", balanceCash) :
                new ObjectParameter("BalanceCash", typeof(decimal));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertFinalAcLiabilities", transNo, datefieldParameter, accountCodeParameter, accountHeadingParameter, preAmountParameter, newAmountParameter, balanceAmountParameter, remarksParameter, customerParameter, dateFiledParameter, amountParameter, groupHeadingParameter, dateValueParameter, transctionTimeParameter, preBalanceParameter, cashInParameter, cahOutParameter, balanceCashParameter, userNameParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertGroupAc(string groupHead, string acountType, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var groupHeadParameter = groupHead != null ?
                new ObjectParameter("GroupHead", groupHead) :
                new ObjectParameter("GroupHead", typeof(string));
    
            var acountTypeParameter = acountType != null ?
                new ObjectParameter("AcountType", acountType) :
                new ObjectParameter("AcountType", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertGroupAc", groupHeadParameter, acountTypeParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertGroupBook(ObjectParameter tranno, string bookGroup, string bookGDiscription, string bookOtherdiscription, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var bookGroupParameter = bookGroup != null ?
                new ObjectParameter("BookGroup", bookGroup) :
                new ObjectParameter("BookGroup", typeof(string));
    
            var bookGDiscriptionParameter = bookGDiscription != null ?
                new ObjectParameter("BookGDiscription", bookGDiscription) :
                new ObjectParameter("BookGDiscription", typeof(string));
    
            var bookOtherdiscriptionParameter = bookOtherdiscription != null ?
                new ObjectParameter("BookOtherdiscription", bookOtherdiscription) :
                new ObjectParameter("BookOtherdiscription", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertGroupBook", tranno, bookGroupParameter, bookGDiscriptionParameter, bookOtherdiscriptionParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertincomedetail(Nullable<System.DateTime> dateFiled, ObjectParameter vn, string accountCode, string accountHeading, Nullable<decimal> amount, string groupHeading, Nullable<int> trackid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var dateFiledParameter = dateFiled.HasValue ?
                new ObjectParameter("DateFiled", dateFiled) :
                new ObjectParameter("DateFiled", typeof(System.DateTime));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var groupHeadingParameter = groupHeading != null ?
                new ObjectParameter("GroupHeading", groupHeading) :
                new ObjectParameter("GroupHeading", typeof(string));
    
            var trackidParameter = trackid.HasValue ?
                new ObjectParameter("trackid", trackid) :
                new ObjectParameter("trackid", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertincomedetail", dateFiledParameter, vn, accountCodeParameter, accountHeadingParameter, amountParameter, groupHeadingParameter, trackidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_insertintoNumberofworkingday(ObjectParameter transNo, string engMonths, Nullable<decimal> workingdays, Nullable<System.DateTime> startDate, Nullable<System.DateTime> enddate, string nepalistart, string nepaliEnd, string sal, Nullable<decimal> actualWorkedDays, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var engMonthsParameter = engMonths != null ?
                new ObjectParameter("EngMonths", engMonths) :
                new ObjectParameter("EngMonths", typeof(string));
    
            var workingdaysParameter = workingdays.HasValue ?
                new ObjectParameter("Workingdays", workingdays) :
                new ObjectParameter("Workingdays", typeof(decimal));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("Enddate", enddate) :
                new ObjectParameter("Enddate", typeof(System.DateTime));
    
            var nepalistartParameter = nepalistart != null ?
                new ObjectParameter("Nepalistart", nepalistart) :
                new ObjectParameter("Nepalistart", typeof(string));
    
            var nepaliEndParameter = nepaliEnd != null ?
                new ObjectParameter("NepaliEnd", nepaliEnd) :
                new ObjectParameter("NepaliEnd", typeof(string));
    
            var salParameter = sal != null ?
                new ObjectParameter("Sal", sal) :
                new ObjectParameter("Sal", typeof(string));
    
            var actualWorkedDaysParameter = actualWorkedDays.HasValue ?
                new ObjectParameter("ActualWorkedDays", actualWorkedDays) :
                new ObjectParameter("ActualWorkedDays", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertintoNumberofworkingday", transNo, engMonthsParameter, workingdaysParameter, startDateParameter, enddateParameter, nepalistartParameter, nepaliEndParameter, salParameter, actualWorkedDaysParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertissuebillmonthly(string studentId, Nullable<decimal> total, Nullable<System.DateTime> billdate, ObjectParameter transno, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            var billdateParameter = billdate.HasValue ?
                new ObjectParameter("Billdate", billdate) :
                new ObjectParameter("Billdate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertissuebillmonthly", studentIdParameter, totalParameter, billdateParameter, transno, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertissuebooksrecord(ObjectParameter trans, string studentID, string namefield, string class_Student, string roll, string telephone, string bookscode, string title, Nullable<int> bookstaken, Nullable<decimal> price, Nullable<System.DateTime> issuedate, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIDParameter = studentID != null ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(string));
    
            var namefieldParameter = namefield != null ?
                new ObjectParameter("Namefield", namefield) :
                new ObjectParameter("Namefield", typeof(string));
    
            var class_StudentParameter = class_Student != null ?
                new ObjectParameter("class_Student", class_Student) :
                new ObjectParameter("class_Student", typeof(string));
    
            var rollParameter = roll != null ?
                new ObjectParameter("Roll", roll) :
                new ObjectParameter("Roll", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var bookscodeParameter = bookscode != null ?
                new ObjectParameter("Bookscode", bookscode) :
                new ObjectParameter("Bookscode", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var bookstakenParameter = bookstaken.HasValue ?
                new ObjectParameter("Bookstaken", bookstaken) :
                new ObjectParameter("Bookstaken", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var issuedateParameter = issuedate.HasValue ?
                new ObjectParameter("issuedate", issuedate) :
                new ObjectParameter("issuedate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertissuebooksrecord", trans, studentIDParameter, namefieldParameter, class_StudentParameter, rollParameter, telephoneParameter, bookscodeParameter, titleParameter, bookstakenParameter, priceParameter, issuedateParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertissuestock(string booksCode, Nullable<int> quantity, Nullable<int> totalbooks, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var booksCodeParameter = booksCode != null ?
                new ObjectParameter("BooksCode", booksCode) :
                new ObjectParameter("BooksCode", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var totalbooksParameter = totalbooks.HasValue ?
                new ObjectParameter("totalbooks", totalbooks) :
                new ObjectParameter("totalbooks", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertissuestock", booksCodeParameter, quantityParameter, totalbooksParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertJVoucher(ObjectParameter vn, Nullable<System.DateTime> datefield, string mainAccHead, string accountHead, Nullable<decimal> amount, string narration, string accountCode, string useName, string vType, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var datefieldParameter = datefield.HasValue ?
                new ObjectParameter("Datefield", datefield) :
                new ObjectParameter("Datefield", typeof(System.DateTime));
    
            var mainAccHeadParameter = mainAccHead != null ?
                new ObjectParameter("MainAccHead", mainAccHead) :
                new ObjectParameter("MainAccHead", typeof(string));
    
            var accountHeadParameter = accountHead != null ?
                new ObjectParameter("AccountHead", accountHead) :
                new ObjectParameter("AccountHead", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var narrationParameter = narration != null ?
                new ObjectParameter("Narration", narration) :
                new ObjectParameter("Narration", typeof(string));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("accountCode", accountCode) :
                new ObjectParameter("accountCode", typeof(string));
    
            var useNameParameter = useName != null ?
                new ObjectParameter("useName", useName) :
                new ObjectParameter("useName", typeof(string));
    
            var vTypeParameter = vType != null ?
                new ObjectParameter("vType", vType) :
                new ObjectParameter("vType", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertJVoucher", vn, datefieldParameter, mainAccHeadParameter, accountHeadParameter, amountParameter, narrationParameter, accountCodeParameter, useNameParameter, vTypeParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertJVoucher_PreYear(Nullable<int> vn, Nullable<System.DateTime> datefield, string mainAccHead, string accountHead, Nullable<decimal> amount, string narration, string accountCode, string useName, string vType, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var vnParameter = vn.HasValue ?
                new ObjectParameter("Vn", vn) :
                new ObjectParameter("Vn", typeof(int));
    
            var datefieldParameter = datefield.HasValue ?
                new ObjectParameter("Datefield", datefield) :
                new ObjectParameter("Datefield", typeof(System.DateTime));
    
            var mainAccHeadParameter = mainAccHead != null ?
                new ObjectParameter("MainAccHead", mainAccHead) :
                new ObjectParameter("MainAccHead", typeof(string));
    
            var accountHeadParameter = accountHead != null ?
                new ObjectParameter("AccountHead", accountHead) :
                new ObjectParameter("AccountHead", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var narrationParameter = narration != null ?
                new ObjectParameter("Narration", narration) :
                new ObjectParameter("Narration", typeof(string));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("accountCode", accountCode) :
                new ObjectParameter("accountCode", typeof(string));
    
            var useNameParameter = useName != null ?
                new ObjectParameter("useName", useName) :
                new ObjectParameter("useName", typeof(string));
    
            var vTypeParameter = vType != null ?
                new ObjectParameter("vType", vType) :
                new ObjectParameter("vType", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertJVoucher_PreYear", vnParameter, datefieldParameter, mainAccHeadParameter, accountHeadParameter, amountParameter, narrationParameter, accountCodeParameter, useNameParameter, vTypeParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int SP_InsertLeftSchool(Nullable<System.DateTime> todayDate, string studentId, string name_Student, string class_Left, Nullable<decimal> balance_Amount, Nullable<decimal> booksLeft, string father_Name, string mother_Name, string enrollment_Batch, string left_batch, string schoolView_Coments, string parentView_Coments, string withdrawnBy, string name_WithDrawn, string school_Remarks, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var todayDateParameter = todayDate.HasValue ?
                new ObjectParameter("TodayDate", todayDate) :
                new ObjectParameter("TodayDate", typeof(System.DateTime));
    
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var name_StudentParameter = name_Student != null ?
                new ObjectParameter("Name_Student", name_Student) :
                new ObjectParameter("Name_Student", typeof(string));
    
            var class_LeftParameter = class_Left != null ?
                new ObjectParameter("Class_Left", class_Left) :
                new ObjectParameter("Class_Left", typeof(string));
    
            var balance_AmountParameter = balance_Amount.HasValue ?
                new ObjectParameter("Balance_Amount", balance_Amount) :
                new ObjectParameter("Balance_Amount", typeof(decimal));
    
            var booksLeftParameter = booksLeft.HasValue ?
                new ObjectParameter("BooksLeft", booksLeft) :
                new ObjectParameter("BooksLeft", typeof(decimal));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var mother_NameParameter = mother_Name != null ?
                new ObjectParameter("Mother_Name", mother_Name) :
                new ObjectParameter("Mother_Name", typeof(string));
    
            var enrollment_BatchParameter = enrollment_Batch != null ?
                new ObjectParameter("Enrollment_Batch", enrollment_Batch) :
                new ObjectParameter("Enrollment_Batch", typeof(string));
    
            var left_batchParameter = left_batch != null ?
                new ObjectParameter("Left_batch", left_batch) :
                new ObjectParameter("Left_batch", typeof(string));
    
            var schoolView_ComentsParameter = schoolView_Coments != null ?
                new ObjectParameter("SchoolView_Coments", schoolView_Coments) :
                new ObjectParameter("SchoolView_Coments", typeof(string));
    
            var parentView_ComentsParameter = parentView_Coments != null ?
                new ObjectParameter("ParentView_Coments", parentView_Coments) :
                new ObjectParameter("ParentView_Coments", typeof(string));
    
            var withdrawnByParameter = withdrawnBy != null ?
                new ObjectParameter("WithdrawnBy", withdrawnBy) :
                new ObjectParameter("WithdrawnBy", typeof(string));
    
            var name_WithDrawnParameter = name_WithDrawn != null ?
                new ObjectParameter("Name_WithDrawn", name_WithDrawn) :
                new ObjectParameter("Name_WithDrawn", typeof(string));
    
            var school_RemarksParameter = school_Remarks != null ?
                new ObjectParameter("School_Remarks", school_Remarks) :
                new ObjectParameter("School_Remarks", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertLeftSchool", todayDateParameter, studentIdParameter, name_StudentParameter, class_LeftParameter, balance_AmountParameter, booksLeftParameter, father_NameParameter, mother_NameParameter, enrollment_BatchParameter, left_batchParameter, schoolView_ComentsParameter, parentView_ComentsParameter, withdrawnByParameter, name_WithDrawnParameter, school_RemarksParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertliabilitesdetail(Nullable<System.DateTime> dateFiled, ObjectParameter vn, string accountCode, string accountHeading, Nullable<decimal> amount, string groupHeading, Nullable<int> trackid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var dateFiledParameter = dateFiled.HasValue ?
                new ObjectParameter("DateFiled", dateFiled) :
                new ObjectParameter("DateFiled", typeof(System.DateTime));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var groupHeadingParameter = groupHeading != null ?
                new ObjectParameter("GroupHeading", groupHeading) :
                new ObjectParameter("GroupHeading", typeof(string));
    
            var trackidParameter = trackid.HasValue ?
                new ObjectParameter("trackid", trackid) :
                new ObjectParameter("trackid", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertliabilitesdetail", dateFiledParameter, vn, accountCodeParameter, accountHeadingParameter, amountParameter, groupHeadingParameter, trackidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertLiabilitesdetail_PreYear(Nullable<System.DateTime> dateFiled, Nullable<int> vn, string accountCode, string accountHeading, Nullable<decimal> amount, string groupHeading, string acYear, Nullable<int> trackid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var dateFiledParameter = dateFiled.HasValue ?
                new ObjectParameter("DateFiled", dateFiled) :
                new ObjectParameter("DateFiled", typeof(System.DateTime));
    
            var vnParameter = vn.HasValue ?
                new ObjectParameter("Vn", vn) :
                new ObjectParameter("Vn", typeof(int));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var groupHeadingParameter = groupHeading != null ?
                new ObjectParameter("GroupHeading", groupHeading) :
                new ObjectParameter("GroupHeading", typeof(string));
    
            var acYearParameter = acYear != null ?
                new ObjectParameter("AcYear", acYear) :
                new ObjectParameter("AcYear", typeof(string));
    
            var trackidParameter = trackid.HasValue ?
                new ObjectParameter("trackid", trackid) :
                new ObjectParameter("trackid", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertLiabilitesdetail_PreYear", dateFiledParameter, vnParameter, accountCodeParameter, accountHeadingParameter, amountParameter, groupHeadingParameter, acYearParameter, trackidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertLoginName(string potha, string jhal, Nullable<System.DateTime> whattime, Nullable<System.DateTime> whatdate, ObjectParameter transNo, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var pothaParameter = potha != null ?
                new ObjectParameter("Potha", potha) :
                new ObjectParameter("Potha", typeof(string));
    
            var jhalParameter = jhal != null ?
                new ObjectParameter("Jhal", jhal) :
                new ObjectParameter("Jhal", typeof(string));
    
            var whattimeParameter = whattime.HasValue ?
                new ObjectParameter("whattime", whattime) :
                new ObjectParameter("whattime", typeof(System.DateTime));
    
            var whatdateParameter = whatdate.HasValue ?
                new ObjectParameter("whatdate", whatdate) :
                new ObjectParameter("whatdate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertLoginName", pothaParameter, jhalParameter, whattimeParameter, whatdateParameter, transNo, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_insertmahbhukmpa2072(ObjectParameter tranno, string namevictim, string familymember, string district, string vDc, string municipalities, string wardno, string tole, Nullable<int> numberofdeath, Nullable<int> maledeath, Nullable<int> femaledeath, Nullable<int> numberinkury, Nullable<int> maleinjury, Nullable<int> femaleinjury, Nullable<int> housedamageNo, Nullable<int> houseconcreatNo, string houseconcreatedamagetype, Nullable<decimal> houseconcreatedamageamount, Nullable<int> houseDamageNormal, string houseDamagenormaltyp, Nullable<decimal> houseDamageNormalAmount, string animalsInjuryno, string foodDamage, string other, string other1, string other2, string other3, string other4, string other5)
        {
            var namevictimParameter = namevictim != null ?
                new ObjectParameter("namevictim", namevictim) :
                new ObjectParameter("namevictim", typeof(string));
    
            var familymemberParameter = familymember != null ?
                new ObjectParameter("familymember", familymember) :
                new ObjectParameter("familymember", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(string));
    
            var vDcParameter = vDc != null ?
                new ObjectParameter("VDc", vDc) :
                new ObjectParameter("VDc", typeof(string));
    
            var municipalitiesParameter = municipalities != null ?
                new ObjectParameter("Municipalities", municipalities) :
                new ObjectParameter("Municipalities", typeof(string));
    
            var wardnoParameter = wardno != null ?
                new ObjectParameter("Wardno", wardno) :
                new ObjectParameter("Wardno", typeof(string));
    
            var toleParameter = tole != null ?
                new ObjectParameter("Tole", tole) :
                new ObjectParameter("Tole", typeof(string));
    
            var numberofdeathParameter = numberofdeath.HasValue ?
                new ObjectParameter("Numberofdeath", numberofdeath) :
                new ObjectParameter("Numberofdeath", typeof(int));
    
            var maledeathParameter = maledeath.HasValue ?
                new ObjectParameter("Maledeath", maledeath) :
                new ObjectParameter("Maledeath", typeof(int));
    
            var femaledeathParameter = femaledeath.HasValue ?
                new ObjectParameter("femaledeath", femaledeath) :
                new ObjectParameter("femaledeath", typeof(int));
    
            var numberinkuryParameter = numberinkury.HasValue ?
                new ObjectParameter("Numberinkury", numberinkury) :
                new ObjectParameter("Numberinkury", typeof(int));
    
            var maleinjuryParameter = maleinjury.HasValue ?
                new ObjectParameter("maleinjury", maleinjury) :
                new ObjectParameter("maleinjury", typeof(int));
    
            var femaleinjuryParameter = femaleinjury.HasValue ?
                new ObjectParameter("femaleinjury", femaleinjury) :
                new ObjectParameter("femaleinjury", typeof(int));
    
            var housedamageNoParameter = housedamageNo.HasValue ?
                new ObjectParameter("housedamageNo", housedamageNo) :
                new ObjectParameter("housedamageNo", typeof(int));
    
            var houseconcreatNoParameter = houseconcreatNo.HasValue ?
                new ObjectParameter("houseconcreatNo", houseconcreatNo) :
                new ObjectParameter("houseconcreatNo", typeof(int));
    
            var houseconcreatedamagetypeParameter = houseconcreatedamagetype != null ?
                new ObjectParameter("houseconcreatedamagetype", houseconcreatedamagetype) :
                new ObjectParameter("houseconcreatedamagetype", typeof(string));
    
            var houseconcreatedamageamountParameter = houseconcreatedamageamount.HasValue ?
                new ObjectParameter("houseconcreatedamageamount", houseconcreatedamageamount) :
                new ObjectParameter("houseconcreatedamageamount", typeof(decimal));
    
            var houseDamageNormalParameter = houseDamageNormal.HasValue ?
                new ObjectParameter("HouseDamageNormal", houseDamageNormal) :
                new ObjectParameter("HouseDamageNormal", typeof(int));
    
            var houseDamagenormaltypParameter = houseDamagenormaltyp != null ?
                new ObjectParameter("HouseDamagenormaltyp", houseDamagenormaltyp) :
                new ObjectParameter("HouseDamagenormaltyp", typeof(string));
    
            var houseDamageNormalAmountParameter = houseDamageNormalAmount.HasValue ?
                new ObjectParameter("HouseDamageNormalAmount", houseDamageNormalAmount) :
                new ObjectParameter("HouseDamageNormalAmount", typeof(decimal));
    
            var animalsInjurynoParameter = animalsInjuryno != null ?
                new ObjectParameter("AnimalsInjuryno", animalsInjuryno) :
                new ObjectParameter("AnimalsInjuryno", typeof(string));
    
            var foodDamageParameter = foodDamage != null ?
                new ObjectParameter("FoodDamage", foodDamage) :
                new ObjectParameter("FoodDamage", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("Other", other) :
                new ObjectParameter("Other", typeof(string));
    
            var other1Parameter = other1 != null ?
                new ObjectParameter("other1", other1) :
                new ObjectParameter("other1", typeof(string));
    
            var other2Parameter = other2 != null ?
                new ObjectParameter("other2", other2) :
                new ObjectParameter("other2", typeof(string));
    
            var other3Parameter = other3 != null ?
                new ObjectParameter("other3", other3) :
                new ObjectParameter("other3", typeof(string));
    
            var other4Parameter = other4 != null ?
                new ObjectParameter("other4", other4) :
                new ObjectParameter("other4", typeof(string));
    
            var other5Parameter = other5 != null ?
                new ObjectParameter("other5", other5) :
                new ObjectParameter("other5", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertmahbhukmpa2072", tranno, namevictimParameter, familymemberParameter, districtParameter, vDcParameter, municipalitiesParameter, wardnoParameter, toleParameter, numberofdeathParameter, maledeathParameter, femaledeathParameter, numberinkuryParameter, maleinjuryParameter, femaleinjuryParameter, housedamageNoParameter, houseconcreatNoParameter, houseconcreatedamagetypeParameter, houseconcreatedamageamountParameter, houseDamageNormalParameter, houseDamagenormaltypParameter, houseDamageNormalAmountParameter, animalsInjurynoParameter, foodDamageParameter, otherParameter, other1Parameter, other2Parameter, other3Parameter, other4Parameter, other5Parameter);
        }
    
        public virtual int sp_InsertMangetermfinal(ObjectParameter tranNo, string termValue, Nullable<decimal> manageValue, string year_Value, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var termValueParameter = termValue != null ?
                new ObjectParameter("TermValue", termValue) :
                new ObjectParameter("TermValue", typeof(string));
    
            var manageValueParameter = manageValue.HasValue ?
                new ObjectParameter("ManageValue", manageValue) :
                new ObjectParameter("ManageValue", typeof(decimal));
    
            var year_ValueParameter = year_Value != null ?
                new ObjectParameter("Year_Value", year_Value) :
                new ObjectParameter("Year_Value", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertMangetermfinal", tranNo, termValueParameter, manageValueParameter, year_ValueParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_insertmangetermfinal1(string termvalue, Nullable<decimal> managevalue, string year_Value, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var termvalueParameter = termvalue != null ?
                new ObjectParameter("termvalue", termvalue) :
                new ObjectParameter("termvalue", typeof(string));
    
            var managevalueParameter = managevalue.HasValue ?
                new ObjectParameter("managevalue", managevalue) :
                new ObjectParameter("managevalue", typeof(decimal));
    
            var year_ValueParameter = year_Value != null ?
                new ObjectParameter("Year_Value", year_Value) :
                new ObjectParameter("Year_Value", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_insertmangetermfinal1", termvalueParameter, managevalueParameter, year_ValueParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_insertmergeexamterm(string examterm, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var examtermParameter = examterm != null ?
                new ObjectParameter("examterm", examterm) :
                new ObjectParameter("examterm", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertmergeexamterm", examtermParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertMidfirstterm(string studentId, string namefield, string class_stu, string roll, string sectionfield, string subject1, string subject2, string subject3, string subject4, string subject5, string subject6, string subject7, string subject8, string subject9, string subject10, string subject11, string subject12, string subject13, string subject14, string subject15, string subject16, string subject17, string subject18, string subject19, string subject20, Nullable<decimal> totalMarksObtain, string pratical1, string pratical2, string pratical3, string pratical4, string pratical5, string pratical6, string pratical7, string pratical8, string pratical9, string pratical10, string pratical11, string pratical12, string pratical13, string pratical14, string pratical15, string pratical16, string pratical17, string pratical18, string pratical19, string pratical20, Nullable<decimal> totalpratical, Nullable<decimal> totalobtainmarks1, Nullable<decimal> totalobtainmarks2, Nullable<decimal> totalobtainmarks3, Nullable<decimal> totalobtainmarks4, Nullable<decimal> totalobtainmarks5, Nullable<decimal> totalobtainmarks6, Nullable<decimal> totalobtainmarks7, Nullable<decimal> totalobtainmarks8, Nullable<decimal> totalobtainmarks9, Nullable<decimal> totalobtainmarks10, Nullable<decimal> totalobtainmarks11, Nullable<decimal> totalobtainmarks12, Nullable<decimal> totalobtainmarks13, Nullable<decimal> totalobtainmarks14, Nullable<decimal> totalobtainmarks15, Nullable<decimal> totalobtainmarks16, Nullable<decimal> totalobtainmarks17, Nullable<decimal> totalobtainmarks18, Nullable<decimal> totalobtainmarks19, Nullable<decimal> totalobtainmarks20, Nullable<decimal> tatalobtainmarks, Nullable<decimal> totalWorkingDay, Nullable<decimal> totalPresentDay, Nullable<decimal> totalAbsentDay, string writting, string speaking, string conduct, string neatness, string musicDance, string currentUser, string passFail, Nullable<decimal> percentage, string division, string examterm, string year_B_C, Nullable<int> rank, string col1, string col2, string col3, string col4, string col5, string col6, string col7, string col8, string col9, string col10, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var namefieldParameter = namefield != null ?
                new ObjectParameter("Namefield", namefield) :
                new ObjectParameter("Namefield", typeof(string));
    
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("Class_stu", class_stu) :
                new ObjectParameter("Class_stu", typeof(string));
    
            var rollParameter = roll != null ?
                new ObjectParameter("Roll", roll) :
                new ObjectParameter("Roll", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("Sectionfield", sectionfield) :
                new ObjectParameter("Sectionfield", typeof(string));
    
            var subject1Parameter = subject1 != null ?
                new ObjectParameter("Subject1", subject1) :
                new ObjectParameter("Subject1", typeof(string));
    
            var subject2Parameter = subject2 != null ?
                new ObjectParameter("Subject2", subject2) :
                new ObjectParameter("Subject2", typeof(string));
    
            var subject3Parameter = subject3 != null ?
                new ObjectParameter("Subject3", subject3) :
                new ObjectParameter("Subject3", typeof(string));
    
            var subject4Parameter = subject4 != null ?
                new ObjectParameter("Subject4", subject4) :
                new ObjectParameter("Subject4", typeof(string));
    
            var subject5Parameter = subject5 != null ?
                new ObjectParameter("Subject5", subject5) :
                new ObjectParameter("Subject5", typeof(string));
    
            var subject6Parameter = subject6 != null ?
                new ObjectParameter("Subject6", subject6) :
                new ObjectParameter("Subject6", typeof(string));
    
            var subject7Parameter = subject7 != null ?
                new ObjectParameter("Subject7", subject7) :
                new ObjectParameter("Subject7", typeof(string));
    
            var subject8Parameter = subject8 != null ?
                new ObjectParameter("Subject8", subject8) :
                new ObjectParameter("Subject8", typeof(string));
    
            var subject9Parameter = subject9 != null ?
                new ObjectParameter("Subject9", subject9) :
                new ObjectParameter("Subject9", typeof(string));
    
            var subject10Parameter = subject10 != null ?
                new ObjectParameter("Subject10", subject10) :
                new ObjectParameter("Subject10", typeof(string));
    
            var subject11Parameter = subject11 != null ?
                new ObjectParameter("Subject11", subject11) :
                new ObjectParameter("Subject11", typeof(string));
    
            var subject12Parameter = subject12 != null ?
                new ObjectParameter("Subject12", subject12) :
                new ObjectParameter("Subject12", typeof(string));
    
            var subject13Parameter = subject13 != null ?
                new ObjectParameter("Subject13", subject13) :
                new ObjectParameter("Subject13", typeof(string));
    
            var subject14Parameter = subject14 != null ?
                new ObjectParameter("Subject14", subject14) :
                new ObjectParameter("Subject14", typeof(string));
    
            var subject15Parameter = subject15 != null ?
                new ObjectParameter("Subject15", subject15) :
                new ObjectParameter("Subject15", typeof(string));
    
            var subject16Parameter = subject16 != null ?
                new ObjectParameter("Subject16", subject16) :
                new ObjectParameter("Subject16", typeof(string));
    
            var subject17Parameter = subject17 != null ?
                new ObjectParameter("Subject17", subject17) :
                new ObjectParameter("Subject17", typeof(string));
    
            var subject18Parameter = subject18 != null ?
                new ObjectParameter("Subject18", subject18) :
                new ObjectParameter("Subject18", typeof(string));
    
            var subject19Parameter = subject19 != null ?
                new ObjectParameter("Subject19", subject19) :
                new ObjectParameter("Subject19", typeof(string));
    
            var subject20Parameter = subject20 != null ?
                new ObjectParameter("Subject20", subject20) :
                new ObjectParameter("Subject20", typeof(string));
    
            var totalMarksObtainParameter = totalMarksObtain.HasValue ?
                new ObjectParameter("TotalMarksObtain", totalMarksObtain) :
                new ObjectParameter("TotalMarksObtain", typeof(decimal));
    
            var pratical1Parameter = pratical1 != null ?
                new ObjectParameter("pratical1", pratical1) :
                new ObjectParameter("pratical1", typeof(string));
    
            var pratical2Parameter = pratical2 != null ?
                new ObjectParameter("pratical2", pratical2) :
                new ObjectParameter("pratical2", typeof(string));
    
            var pratical3Parameter = pratical3 != null ?
                new ObjectParameter("pratical3", pratical3) :
                new ObjectParameter("pratical3", typeof(string));
    
            var pratical4Parameter = pratical4 != null ?
                new ObjectParameter("pratical4", pratical4) :
                new ObjectParameter("pratical4", typeof(string));
    
            var pratical5Parameter = pratical5 != null ?
                new ObjectParameter("pratical5", pratical5) :
                new ObjectParameter("pratical5", typeof(string));
    
            var pratical6Parameter = pratical6 != null ?
                new ObjectParameter("pratical6", pratical6) :
                new ObjectParameter("pratical6", typeof(string));
    
            var pratical7Parameter = pratical7 != null ?
                new ObjectParameter("pratical7", pratical7) :
                new ObjectParameter("pratical7", typeof(string));
    
            var pratical8Parameter = pratical8 != null ?
                new ObjectParameter("pratical8", pratical8) :
                new ObjectParameter("pratical8", typeof(string));
    
            var pratical9Parameter = pratical9 != null ?
                new ObjectParameter("pratical9", pratical9) :
                new ObjectParameter("pratical9", typeof(string));
    
            var pratical10Parameter = pratical10 != null ?
                new ObjectParameter("pratical10", pratical10) :
                new ObjectParameter("pratical10", typeof(string));
    
            var pratical11Parameter = pratical11 != null ?
                new ObjectParameter("pratical11", pratical11) :
                new ObjectParameter("pratical11", typeof(string));
    
            var pratical12Parameter = pratical12 != null ?
                new ObjectParameter("pratical12", pratical12) :
                new ObjectParameter("pratical12", typeof(string));
    
            var pratical13Parameter = pratical13 != null ?
                new ObjectParameter("pratical13", pratical13) :
                new ObjectParameter("pratical13", typeof(string));
    
            var pratical14Parameter = pratical14 != null ?
                new ObjectParameter("pratical14", pratical14) :
                new ObjectParameter("pratical14", typeof(string));
    
            var pratical15Parameter = pratical15 != null ?
                new ObjectParameter("pratical15", pratical15) :
                new ObjectParameter("pratical15", typeof(string));
    
            var pratical16Parameter = pratical16 != null ?
                new ObjectParameter("pratical16", pratical16) :
                new ObjectParameter("pratical16", typeof(string));
    
            var pratical17Parameter = pratical17 != null ?
                new ObjectParameter("pratical17", pratical17) :
                new ObjectParameter("pratical17", typeof(string));
    
            var pratical18Parameter = pratical18 != null ?
                new ObjectParameter("pratical18", pratical18) :
                new ObjectParameter("pratical18", typeof(string));
    
            var pratical19Parameter = pratical19 != null ?
                new ObjectParameter("pratical19", pratical19) :
                new ObjectParameter("pratical19", typeof(string));
    
            var pratical20Parameter = pratical20 != null ?
                new ObjectParameter("pratical20", pratical20) :
                new ObjectParameter("pratical20", typeof(string));
    
            var totalpraticalParameter = totalpratical.HasValue ?
                new ObjectParameter("totalpratical", totalpratical) :
                new ObjectParameter("totalpratical", typeof(decimal));
    
            var totalobtainmarks1Parameter = totalobtainmarks1.HasValue ?
                new ObjectParameter("totalobtainmarks1", totalobtainmarks1) :
                new ObjectParameter("totalobtainmarks1", typeof(decimal));
    
            var totalobtainmarks2Parameter = totalobtainmarks2.HasValue ?
                new ObjectParameter("totalobtainmarks2", totalobtainmarks2) :
                new ObjectParameter("totalobtainmarks2", typeof(decimal));
    
            var totalobtainmarks3Parameter = totalobtainmarks3.HasValue ?
                new ObjectParameter("totalobtainmarks3", totalobtainmarks3) :
                new ObjectParameter("totalobtainmarks3", typeof(decimal));
    
            var totalobtainmarks4Parameter = totalobtainmarks4.HasValue ?
                new ObjectParameter("totalobtainmarks4", totalobtainmarks4) :
                new ObjectParameter("totalobtainmarks4", typeof(decimal));
    
            var totalobtainmarks5Parameter = totalobtainmarks5.HasValue ?
                new ObjectParameter("totalobtainmarks5", totalobtainmarks5) :
                new ObjectParameter("totalobtainmarks5", typeof(decimal));
    
            var totalobtainmarks6Parameter = totalobtainmarks6.HasValue ?
                new ObjectParameter("totalobtainmarks6", totalobtainmarks6) :
                new ObjectParameter("totalobtainmarks6", typeof(decimal));
    
            var totalobtainmarks7Parameter = totalobtainmarks7.HasValue ?
                new ObjectParameter("totalobtainmarks7", totalobtainmarks7) :
                new ObjectParameter("totalobtainmarks7", typeof(decimal));
    
            var totalobtainmarks8Parameter = totalobtainmarks8.HasValue ?
                new ObjectParameter("totalobtainmarks8", totalobtainmarks8) :
                new ObjectParameter("totalobtainmarks8", typeof(decimal));
    
            var totalobtainmarks9Parameter = totalobtainmarks9.HasValue ?
                new ObjectParameter("totalobtainmarks9", totalobtainmarks9) :
                new ObjectParameter("totalobtainmarks9", typeof(decimal));
    
            var totalobtainmarks10Parameter = totalobtainmarks10.HasValue ?
                new ObjectParameter("totalobtainmarks10", totalobtainmarks10) :
                new ObjectParameter("totalobtainmarks10", typeof(decimal));
    
            var totalobtainmarks11Parameter = totalobtainmarks11.HasValue ?
                new ObjectParameter("totalobtainmarks11", totalobtainmarks11) :
                new ObjectParameter("totalobtainmarks11", typeof(decimal));
    
            var totalobtainmarks12Parameter = totalobtainmarks12.HasValue ?
                new ObjectParameter("totalobtainmarks12", totalobtainmarks12) :
                new ObjectParameter("totalobtainmarks12", typeof(decimal));
    
            var totalobtainmarks13Parameter = totalobtainmarks13.HasValue ?
                new ObjectParameter("totalobtainmarks13", totalobtainmarks13) :
                new ObjectParameter("totalobtainmarks13", typeof(decimal));
    
            var totalobtainmarks14Parameter = totalobtainmarks14.HasValue ?
                new ObjectParameter("totalobtainmarks14", totalobtainmarks14) :
                new ObjectParameter("totalobtainmarks14", typeof(decimal));
    
            var totalobtainmarks15Parameter = totalobtainmarks15.HasValue ?
                new ObjectParameter("totalobtainmarks15", totalobtainmarks15) :
                new ObjectParameter("totalobtainmarks15", typeof(decimal));
    
            var totalobtainmarks16Parameter = totalobtainmarks16.HasValue ?
                new ObjectParameter("totalobtainmarks16", totalobtainmarks16) :
                new ObjectParameter("totalobtainmarks16", typeof(decimal));
    
            var totalobtainmarks17Parameter = totalobtainmarks17.HasValue ?
                new ObjectParameter("totalobtainmarks17", totalobtainmarks17) :
                new ObjectParameter("totalobtainmarks17", typeof(decimal));
    
            var totalobtainmarks18Parameter = totalobtainmarks18.HasValue ?
                new ObjectParameter("totalobtainmarks18", totalobtainmarks18) :
                new ObjectParameter("totalobtainmarks18", typeof(decimal));
    
            var totalobtainmarks19Parameter = totalobtainmarks19.HasValue ?
                new ObjectParameter("totalobtainmarks19", totalobtainmarks19) :
                new ObjectParameter("totalobtainmarks19", typeof(decimal));
    
            var totalobtainmarks20Parameter = totalobtainmarks20.HasValue ?
                new ObjectParameter("totalobtainmarks20", totalobtainmarks20) :
                new ObjectParameter("totalobtainmarks20", typeof(decimal));
    
            var tatalobtainmarksParameter = tatalobtainmarks.HasValue ?
                new ObjectParameter("tatalobtainmarks", tatalobtainmarks) :
                new ObjectParameter("tatalobtainmarks", typeof(decimal));
    
            var totalWorkingDayParameter = totalWorkingDay.HasValue ?
                new ObjectParameter("TotalWorkingDay", totalWorkingDay) :
                new ObjectParameter("TotalWorkingDay", typeof(decimal));
    
            var totalPresentDayParameter = totalPresentDay.HasValue ?
                new ObjectParameter("totalPresentDay", totalPresentDay) :
                new ObjectParameter("totalPresentDay", typeof(decimal));
    
            var totalAbsentDayParameter = totalAbsentDay.HasValue ?
                new ObjectParameter("totalAbsentDay", totalAbsentDay) :
                new ObjectParameter("totalAbsentDay", typeof(decimal));
    
            var writtingParameter = writting != null ?
                new ObjectParameter("Writting", writting) :
                new ObjectParameter("Writting", typeof(string));
    
            var speakingParameter = speaking != null ?
                new ObjectParameter("Speaking", speaking) :
                new ObjectParameter("Speaking", typeof(string));
    
            var conductParameter = conduct != null ?
                new ObjectParameter("Conduct", conduct) :
                new ObjectParameter("Conduct", typeof(string));
    
            var neatnessParameter = neatness != null ?
                new ObjectParameter("Neatness", neatness) :
                new ObjectParameter("Neatness", typeof(string));
    
            var musicDanceParameter = musicDance != null ?
                new ObjectParameter("MusicDance", musicDance) :
                new ObjectParameter("MusicDance", typeof(string));
    
            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));
    
            var passFailParameter = passFail != null ?
                new ObjectParameter("PassFail", passFail) :
                new ObjectParameter("PassFail", typeof(string));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("Percentage", percentage) :
                new ObjectParameter("Percentage", typeof(decimal));
    
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var examtermParameter = examterm != null ?
                new ObjectParameter("Examterm", examterm) :
                new ObjectParameter("Examterm", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var rankParameter = rank.HasValue ?
                new ObjectParameter("Rank", rank) :
                new ObjectParameter("Rank", typeof(int));
    
            var col1Parameter = col1 != null ?
                new ObjectParameter("Col1", col1) :
                new ObjectParameter("Col1", typeof(string));
    
            var col2Parameter = col2 != null ?
                new ObjectParameter("Col2", col2) :
                new ObjectParameter("Col2", typeof(string));
    
            var col3Parameter = col3 != null ?
                new ObjectParameter("Col3", col3) :
                new ObjectParameter("Col3", typeof(string));
    
            var col4Parameter = col4 != null ?
                new ObjectParameter("Col4", col4) :
                new ObjectParameter("Col4", typeof(string));
    
            var col5Parameter = col5 != null ?
                new ObjectParameter("Col5", col5) :
                new ObjectParameter("Col5", typeof(string));
    
            var col6Parameter = col6 != null ?
                new ObjectParameter("Col6", col6) :
                new ObjectParameter("Col6", typeof(string));
    
            var col7Parameter = col7 != null ?
                new ObjectParameter("Col7", col7) :
                new ObjectParameter("Col7", typeof(string));
    
            var col8Parameter = col8 != null ?
                new ObjectParameter("Col8", col8) :
                new ObjectParameter("Col8", typeof(string));
    
            var col9Parameter = col9 != null ?
                new ObjectParameter("Col9", col9) :
                new ObjectParameter("Col9", typeof(string));
    
            var col10Parameter = col10 != null ?
                new ObjectParameter("Col10", col10) :
                new ObjectParameter("Col10", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertMidfirstterm", studentIdParameter, namefieldParameter, class_stuParameter, rollParameter, sectionfieldParameter, subject1Parameter, subject2Parameter, subject3Parameter, subject4Parameter, subject5Parameter, subject6Parameter, subject7Parameter, subject8Parameter, subject9Parameter, subject10Parameter, subject11Parameter, subject12Parameter, subject13Parameter, subject14Parameter, subject15Parameter, subject16Parameter, subject17Parameter, subject18Parameter, subject19Parameter, subject20Parameter, totalMarksObtainParameter, pratical1Parameter, pratical2Parameter, pratical3Parameter, pratical4Parameter, pratical5Parameter, pratical6Parameter, pratical7Parameter, pratical8Parameter, pratical9Parameter, pratical10Parameter, pratical11Parameter, pratical12Parameter, pratical13Parameter, pratical14Parameter, pratical15Parameter, pratical16Parameter, pratical17Parameter, pratical18Parameter, pratical19Parameter, pratical20Parameter, totalpraticalParameter, totalobtainmarks1Parameter, totalobtainmarks2Parameter, totalobtainmarks3Parameter, totalobtainmarks4Parameter, totalobtainmarks5Parameter, totalobtainmarks6Parameter, totalobtainmarks7Parameter, totalobtainmarks8Parameter, totalobtainmarks9Parameter, totalobtainmarks10Parameter, totalobtainmarks11Parameter, totalobtainmarks12Parameter, totalobtainmarks13Parameter, totalobtainmarks14Parameter, totalobtainmarks15Parameter, totalobtainmarks16Parameter, totalobtainmarks17Parameter, totalobtainmarks18Parameter, totalobtainmarks19Parameter, totalobtainmarks20Parameter, tatalobtainmarksParameter, totalWorkingDayParameter, totalPresentDayParameter, totalAbsentDayParameter, writtingParameter, speakingParameter, conductParameter, neatnessParameter, musicDanceParameter, currentUserParameter, passFailParameter, percentageParameter, divisionParameter, examtermParameter, year_B_CParameter, rankParameter, col1Parameter, col2Parameter, col3Parameter, col4Parameter, col5Parameter, col6Parameter, col7Parameter, col8Parameter, col9Parameter, col10Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertMidfirstterm_1(string studentId, string namefield, string class_stu, string roll, string sectionfield, string subject1, string subject2, string subject3, string subject4, string subject5, string subject6, string subject7, string subject8, string subject9, string subject10, string subject11, string subject12, string subject13, string subject14, string subject15, string subject16, string subject17, string subject18, string subject19, string subject20, Nullable<decimal> totalMarksObtain, string pratical1, string pratical2, string pratical3, string pratical4, string pratical5, string pratical6, string pratical7, string pratical8, string pratical9, string pratical10, string pratical11, string pratical12, string pratical13, string pratical14, string pratical15, string pratical16, string pratical17, string pratical18, string pratical19, string pratical20, Nullable<decimal> totalpratical, Nullable<decimal> totalobtainmarks1, Nullable<decimal> totalobtainmarks2, Nullable<decimal> totalobtainmarks3, Nullable<decimal> totalobtainmarks4, Nullable<decimal> totalobtainmarks5, Nullable<decimal> totalobtainmarks6, Nullable<decimal> totalobtainmarks7, Nullable<decimal> totalobtainmarks8, Nullable<decimal> totalobtainmarks9, Nullable<decimal> totalobtainmarks10, Nullable<decimal> totalobtainmarks11, Nullable<decimal> totalobtainmarks12, Nullable<decimal> totalobtainmarks13, Nullable<decimal> totalobtainmarks14, Nullable<decimal> totalobtainmarks15, Nullable<decimal> totalobtainmarks16, Nullable<decimal> totalobtainmarks17, Nullable<decimal> totalobtainmarks18, Nullable<decimal> totalobtainmarks19, Nullable<decimal> totalobtainmarks20, Nullable<decimal> tatalobtainmarks, Nullable<decimal> totalWorkingDay, Nullable<decimal> totalPresentDay, Nullable<decimal> totalAbsentDay, string writting, string speaking, string conduct, string neatness, string musicDance, string currentUser, string passFail, Nullable<decimal> percentage, string division, string examterm, string year_B_C, Nullable<int> rank, string col1, string col2, string col3, string col4, string col5, string col6, string col7, string col8, string col9, string col10, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var namefieldParameter = namefield != null ?
                new ObjectParameter("Namefield", namefield) :
                new ObjectParameter("Namefield", typeof(string));
    
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("Class_stu", class_stu) :
                new ObjectParameter("Class_stu", typeof(string));
    
            var rollParameter = roll != null ?
                new ObjectParameter("Roll", roll) :
                new ObjectParameter("Roll", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("Sectionfield", sectionfield) :
                new ObjectParameter("Sectionfield", typeof(string));
    
            var subject1Parameter = subject1 != null ?
                new ObjectParameter("Subject1", subject1) :
                new ObjectParameter("Subject1", typeof(string));
    
            var subject2Parameter = subject2 != null ?
                new ObjectParameter("Subject2", subject2) :
                new ObjectParameter("Subject2", typeof(string));
    
            var subject3Parameter = subject3 != null ?
                new ObjectParameter("Subject3", subject3) :
                new ObjectParameter("Subject3", typeof(string));
    
            var subject4Parameter = subject4 != null ?
                new ObjectParameter("Subject4", subject4) :
                new ObjectParameter("Subject4", typeof(string));
    
            var subject5Parameter = subject5 != null ?
                new ObjectParameter("Subject5", subject5) :
                new ObjectParameter("Subject5", typeof(string));
    
            var subject6Parameter = subject6 != null ?
                new ObjectParameter("Subject6", subject6) :
                new ObjectParameter("Subject6", typeof(string));
    
            var subject7Parameter = subject7 != null ?
                new ObjectParameter("Subject7", subject7) :
                new ObjectParameter("Subject7", typeof(string));
    
            var subject8Parameter = subject8 != null ?
                new ObjectParameter("Subject8", subject8) :
                new ObjectParameter("Subject8", typeof(string));
    
            var subject9Parameter = subject9 != null ?
                new ObjectParameter("Subject9", subject9) :
                new ObjectParameter("Subject9", typeof(string));
    
            var subject10Parameter = subject10 != null ?
                new ObjectParameter("Subject10", subject10) :
                new ObjectParameter("Subject10", typeof(string));
    
            var subject11Parameter = subject11 != null ?
                new ObjectParameter("Subject11", subject11) :
                new ObjectParameter("Subject11", typeof(string));
    
            var subject12Parameter = subject12 != null ?
                new ObjectParameter("Subject12", subject12) :
                new ObjectParameter("Subject12", typeof(string));
    
            var subject13Parameter = subject13 != null ?
                new ObjectParameter("Subject13", subject13) :
                new ObjectParameter("Subject13", typeof(string));
    
            var subject14Parameter = subject14 != null ?
                new ObjectParameter("Subject14", subject14) :
                new ObjectParameter("Subject14", typeof(string));
    
            var subject15Parameter = subject15 != null ?
                new ObjectParameter("Subject15", subject15) :
                new ObjectParameter("Subject15", typeof(string));
    
            var subject16Parameter = subject16 != null ?
                new ObjectParameter("Subject16", subject16) :
                new ObjectParameter("Subject16", typeof(string));
    
            var subject17Parameter = subject17 != null ?
                new ObjectParameter("Subject17", subject17) :
                new ObjectParameter("Subject17", typeof(string));
    
            var subject18Parameter = subject18 != null ?
                new ObjectParameter("Subject18", subject18) :
                new ObjectParameter("Subject18", typeof(string));
    
            var subject19Parameter = subject19 != null ?
                new ObjectParameter("Subject19", subject19) :
                new ObjectParameter("Subject19", typeof(string));
    
            var subject20Parameter = subject20 != null ?
                new ObjectParameter("Subject20", subject20) :
                new ObjectParameter("Subject20", typeof(string));
    
            var totalMarksObtainParameter = totalMarksObtain.HasValue ?
                new ObjectParameter("TotalMarksObtain", totalMarksObtain) :
                new ObjectParameter("TotalMarksObtain", typeof(decimal));
    
            var pratical1Parameter = pratical1 != null ?
                new ObjectParameter("pratical1", pratical1) :
                new ObjectParameter("pratical1", typeof(string));
    
            var pratical2Parameter = pratical2 != null ?
                new ObjectParameter("pratical2", pratical2) :
                new ObjectParameter("pratical2", typeof(string));
    
            var pratical3Parameter = pratical3 != null ?
                new ObjectParameter("pratical3", pratical3) :
                new ObjectParameter("pratical3", typeof(string));
    
            var pratical4Parameter = pratical4 != null ?
                new ObjectParameter("pratical4", pratical4) :
                new ObjectParameter("pratical4", typeof(string));
    
            var pratical5Parameter = pratical5 != null ?
                new ObjectParameter("pratical5", pratical5) :
                new ObjectParameter("pratical5", typeof(string));
    
            var pratical6Parameter = pratical6 != null ?
                new ObjectParameter("pratical6", pratical6) :
                new ObjectParameter("pratical6", typeof(string));
    
            var pratical7Parameter = pratical7 != null ?
                new ObjectParameter("pratical7", pratical7) :
                new ObjectParameter("pratical7", typeof(string));
    
            var pratical8Parameter = pratical8 != null ?
                new ObjectParameter("pratical8", pratical8) :
                new ObjectParameter("pratical8", typeof(string));
    
            var pratical9Parameter = pratical9 != null ?
                new ObjectParameter("pratical9", pratical9) :
                new ObjectParameter("pratical9", typeof(string));
    
            var pratical10Parameter = pratical10 != null ?
                new ObjectParameter("pratical10", pratical10) :
                new ObjectParameter("pratical10", typeof(string));
    
            var pratical11Parameter = pratical11 != null ?
                new ObjectParameter("pratical11", pratical11) :
                new ObjectParameter("pratical11", typeof(string));
    
            var pratical12Parameter = pratical12 != null ?
                new ObjectParameter("pratical12", pratical12) :
                new ObjectParameter("pratical12", typeof(string));
    
            var pratical13Parameter = pratical13 != null ?
                new ObjectParameter("pratical13", pratical13) :
                new ObjectParameter("pratical13", typeof(string));
    
            var pratical14Parameter = pratical14 != null ?
                new ObjectParameter("pratical14", pratical14) :
                new ObjectParameter("pratical14", typeof(string));
    
            var pratical15Parameter = pratical15 != null ?
                new ObjectParameter("pratical15", pratical15) :
                new ObjectParameter("pratical15", typeof(string));
    
            var pratical16Parameter = pratical16 != null ?
                new ObjectParameter("pratical16", pratical16) :
                new ObjectParameter("pratical16", typeof(string));
    
            var pratical17Parameter = pratical17 != null ?
                new ObjectParameter("pratical17", pratical17) :
                new ObjectParameter("pratical17", typeof(string));
    
            var pratical18Parameter = pratical18 != null ?
                new ObjectParameter("pratical18", pratical18) :
                new ObjectParameter("pratical18", typeof(string));
    
            var pratical19Parameter = pratical19 != null ?
                new ObjectParameter("pratical19", pratical19) :
                new ObjectParameter("pratical19", typeof(string));
    
            var pratical20Parameter = pratical20 != null ?
                new ObjectParameter("pratical20", pratical20) :
                new ObjectParameter("pratical20", typeof(string));
    
            var totalpraticalParameter = totalpratical.HasValue ?
                new ObjectParameter("totalpratical", totalpratical) :
                new ObjectParameter("totalpratical", typeof(decimal));
    
            var totalobtainmarks1Parameter = totalobtainmarks1.HasValue ?
                new ObjectParameter("totalobtainmarks1", totalobtainmarks1) :
                new ObjectParameter("totalobtainmarks1", typeof(decimal));
    
            var totalobtainmarks2Parameter = totalobtainmarks2.HasValue ?
                new ObjectParameter("totalobtainmarks2", totalobtainmarks2) :
                new ObjectParameter("totalobtainmarks2", typeof(decimal));
    
            var totalobtainmarks3Parameter = totalobtainmarks3.HasValue ?
                new ObjectParameter("totalobtainmarks3", totalobtainmarks3) :
                new ObjectParameter("totalobtainmarks3", typeof(decimal));
    
            var totalobtainmarks4Parameter = totalobtainmarks4.HasValue ?
                new ObjectParameter("totalobtainmarks4", totalobtainmarks4) :
                new ObjectParameter("totalobtainmarks4", typeof(decimal));
    
            var totalobtainmarks5Parameter = totalobtainmarks5.HasValue ?
                new ObjectParameter("totalobtainmarks5", totalobtainmarks5) :
                new ObjectParameter("totalobtainmarks5", typeof(decimal));
    
            var totalobtainmarks6Parameter = totalobtainmarks6.HasValue ?
                new ObjectParameter("totalobtainmarks6", totalobtainmarks6) :
                new ObjectParameter("totalobtainmarks6", typeof(decimal));
    
            var totalobtainmarks7Parameter = totalobtainmarks7.HasValue ?
                new ObjectParameter("totalobtainmarks7", totalobtainmarks7) :
                new ObjectParameter("totalobtainmarks7", typeof(decimal));
    
            var totalobtainmarks8Parameter = totalobtainmarks8.HasValue ?
                new ObjectParameter("totalobtainmarks8", totalobtainmarks8) :
                new ObjectParameter("totalobtainmarks8", typeof(decimal));
    
            var totalobtainmarks9Parameter = totalobtainmarks9.HasValue ?
                new ObjectParameter("totalobtainmarks9", totalobtainmarks9) :
                new ObjectParameter("totalobtainmarks9", typeof(decimal));
    
            var totalobtainmarks10Parameter = totalobtainmarks10.HasValue ?
                new ObjectParameter("totalobtainmarks10", totalobtainmarks10) :
                new ObjectParameter("totalobtainmarks10", typeof(decimal));
    
            var totalobtainmarks11Parameter = totalobtainmarks11.HasValue ?
                new ObjectParameter("totalobtainmarks11", totalobtainmarks11) :
                new ObjectParameter("totalobtainmarks11", typeof(decimal));
    
            var totalobtainmarks12Parameter = totalobtainmarks12.HasValue ?
                new ObjectParameter("totalobtainmarks12", totalobtainmarks12) :
                new ObjectParameter("totalobtainmarks12", typeof(decimal));
    
            var totalobtainmarks13Parameter = totalobtainmarks13.HasValue ?
                new ObjectParameter("totalobtainmarks13", totalobtainmarks13) :
                new ObjectParameter("totalobtainmarks13", typeof(decimal));
    
            var totalobtainmarks14Parameter = totalobtainmarks14.HasValue ?
                new ObjectParameter("totalobtainmarks14", totalobtainmarks14) :
                new ObjectParameter("totalobtainmarks14", typeof(decimal));
    
            var totalobtainmarks15Parameter = totalobtainmarks15.HasValue ?
                new ObjectParameter("totalobtainmarks15", totalobtainmarks15) :
                new ObjectParameter("totalobtainmarks15", typeof(decimal));
    
            var totalobtainmarks16Parameter = totalobtainmarks16.HasValue ?
                new ObjectParameter("totalobtainmarks16", totalobtainmarks16) :
                new ObjectParameter("totalobtainmarks16", typeof(decimal));
    
            var totalobtainmarks17Parameter = totalobtainmarks17.HasValue ?
                new ObjectParameter("totalobtainmarks17", totalobtainmarks17) :
                new ObjectParameter("totalobtainmarks17", typeof(decimal));
    
            var totalobtainmarks18Parameter = totalobtainmarks18.HasValue ?
                new ObjectParameter("totalobtainmarks18", totalobtainmarks18) :
                new ObjectParameter("totalobtainmarks18", typeof(decimal));
    
            var totalobtainmarks19Parameter = totalobtainmarks19.HasValue ?
                new ObjectParameter("totalobtainmarks19", totalobtainmarks19) :
                new ObjectParameter("totalobtainmarks19", typeof(decimal));
    
            var totalobtainmarks20Parameter = totalobtainmarks20.HasValue ?
                new ObjectParameter("totalobtainmarks20", totalobtainmarks20) :
                new ObjectParameter("totalobtainmarks20", typeof(decimal));
    
            var tatalobtainmarksParameter = tatalobtainmarks.HasValue ?
                new ObjectParameter("tatalobtainmarks", tatalobtainmarks) :
                new ObjectParameter("tatalobtainmarks", typeof(decimal));
    
            var totalWorkingDayParameter = totalWorkingDay.HasValue ?
                new ObjectParameter("TotalWorkingDay", totalWorkingDay) :
                new ObjectParameter("TotalWorkingDay", typeof(decimal));
    
            var totalPresentDayParameter = totalPresentDay.HasValue ?
                new ObjectParameter("totalPresentDay", totalPresentDay) :
                new ObjectParameter("totalPresentDay", typeof(decimal));
    
            var totalAbsentDayParameter = totalAbsentDay.HasValue ?
                new ObjectParameter("totalAbsentDay", totalAbsentDay) :
                new ObjectParameter("totalAbsentDay", typeof(decimal));
    
            var writtingParameter = writting != null ?
                new ObjectParameter("Writting", writting) :
                new ObjectParameter("Writting", typeof(string));
    
            var speakingParameter = speaking != null ?
                new ObjectParameter("Speaking", speaking) :
                new ObjectParameter("Speaking", typeof(string));
    
            var conductParameter = conduct != null ?
                new ObjectParameter("Conduct", conduct) :
                new ObjectParameter("Conduct", typeof(string));
    
            var neatnessParameter = neatness != null ?
                new ObjectParameter("Neatness", neatness) :
                new ObjectParameter("Neatness", typeof(string));
    
            var musicDanceParameter = musicDance != null ?
                new ObjectParameter("MusicDance", musicDance) :
                new ObjectParameter("MusicDance", typeof(string));
    
            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));
    
            var passFailParameter = passFail != null ?
                new ObjectParameter("PassFail", passFail) :
                new ObjectParameter("PassFail", typeof(string));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("Percentage", percentage) :
                new ObjectParameter("Percentage", typeof(decimal));
    
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var examtermParameter = examterm != null ?
                new ObjectParameter("Examterm", examterm) :
                new ObjectParameter("Examterm", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var rankParameter = rank.HasValue ?
                new ObjectParameter("Rank", rank) :
                new ObjectParameter("Rank", typeof(int));
    
            var col1Parameter = col1 != null ?
                new ObjectParameter("Col1", col1) :
                new ObjectParameter("Col1", typeof(string));
    
            var col2Parameter = col2 != null ?
                new ObjectParameter("Col2", col2) :
                new ObjectParameter("Col2", typeof(string));
    
            var col3Parameter = col3 != null ?
                new ObjectParameter("Col3", col3) :
                new ObjectParameter("Col3", typeof(string));
    
            var col4Parameter = col4 != null ?
                new ObjectParameter("Col4", col4) :
                new ObjectParameter("Col4", typeof(string));
    
            var col5Parameter = col5 != null ?
                new ObjectParameter("Col5", col5) :
                new ObjectParameter("Col5", typeof(string));
    
            var col6Parameter = col6 != null ?
                new ObjectParameter("Col6", col6) :
                new ObjectParameter("Col6", typeof(string));
    
            var col7Parameter = col7 != null ?
                new ObjectParameter("Col7", col7) :
                new ObjectParameter("Col7", typeof(string));
    
            var col8Parameter = col8 != null ?
                new ObjectParameter("Col8", col8) :
                new ObjectParameter("Col8", typeof(string));
    
            var col9Parameter = col9 != null ?
                new ObjectParameter("Col9", col9) :
                new ObjectParameter("Col9", typeof(string));
    
            var col10Parameter = col10 != null ?
                new ObjectParameter("Col10", col10) :
                new ObjectParameter("Col10", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertMidfirstterm_1", studentIdParameter, namefieldParameter, class_stuParameter, rollParameter, sectionfieldParameter, subject1Parameter, subject2Parameter, subject3Parameter, subject4Parameter, subject5Parameter, subject6Parameter, subject7Parameter, subject8Parameter, subject9Parameter, subject10Parameter, subject11Parameter, subject12Parameter, subject13Parameter, subject14Parameter, subject15Parameter, subject16Parameter, subject17Parameter, subject18Parameter, subject19Parameter, subject20Parameter, totalMarksObtainParameter, pratical1Parameter, pratical2Parameter, pratical3Parameter, pratical4Parameter, pratical5Parameter, pratical6Parameter, pratical7Parameter, pratical8Parameter, pratical9Parameter, pratical10Parameter, pratical11Parameter, pratical12Parameter, pratical13Parameter, pratical14Parameter, pratical15Parameter, pratical16Parameter, pratical17Parameter, pratical18Parameter, pratical19Parameter, pratical20Parameter, totalpraticalParameter, totalobtainmarks1Parameter, totalobtainmarks2Parameter, totalobtainmarks3Parameter, totalobtainmarks4Parameter, totalobtainmarks5Parameter, totalobtainmarks6Parameter, totalobtainmarks7Parameter, totalobtainmarks8Parameter, totalobtainmarks9Parameter, totalobtainmarks10Parameter, totalobtainmarks11Parameter, totalobtainmarks12Parameter, totalobtainmarks13Parameter, totalobtainmarks14Parameter, totalobtainmarks15Parameter, totalobtainmarks16Parameter, totalobtainmarks17Parameter, totalobtainmarks18Parameter, totalobtainmarks19Parameter, totalobtainmarks20Parameter, tatalobtainmarksParameter, totalWorkingDayParameter, totalPresentDayParameter, totalAbsentDayParameter, writtingParameter, speakingParameter, conductParameter, neatnessParameter, musicDanceParameter, currentUserParameter, passFailParameter, percentageParameter, divisionParameter, examtermParameter, year_B_CParameter, rankParameter, col1Parameter, col2Parameter, col3Parameter, col4Parameter, col5Parameter, col6Parameter, col7Parameter, col8Parameter, col9Parameter, col10Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertMidfirstterm_2(string studentId, string namefield, string class_stu, string roll, string sectionfield, string subject1, string subject2, string subject3, string subject4, string subject5, string subject6, string subject7, string subject8, string subject9, string subject10, string subject11, string subject12, string subject13, string subject14, string subject15, string subject16, string subject17, string subject18, string subject19, string subject20, Nullable<decimal> totalMarksObtain, string pratical1, string pratical2, string pratical3, string pratical4, string pratical5, string pratical6, string pratical7, string pratical8, string pratical9, string pratical10, string pratical11, string pratical12, string pratical13, string pratical14, string pratical15, string pratical16, string pratical17, string pratical18, string pratical19, string pratical20, Nullable<decimal> totalpratical, Nullable<decimal> totalobtainmarks1, Nullable<decimal> totalobtainmarks2, Nullable<decimal> totalobtainmarks3, Nullable<decimal> totalobtainmarks4, Nullable<decimal> totalobtainmarks5, Nullable<decimal> totalobtainmarks6, Nullable<decimal> totalobtainmarks7, Nullable<decimal> totalobtainmarks8, Nullable<decimal> totalobtainmarks9, Nullable<decimal> totalobtainmarks10, Nullable<decimal> totalobtainmarks11, Nullable<decimal> totalobtainmarks12, Nullable<decimal> totalobtainmarks13, Nullable<decimal> totalobtainmarks14, Nullable<decimal> totalobtainmarks15, Nullable<decimal> totalobtainmarks16, Nullable<decimal> totalobtainmarks17, Nullable<decimal> totalobtainmarks18, Nullable<decimal> totalobtainmarks19, Nullable<decimal> totalobtainmarks20, Nullable<decimal> tatalobtainmarks, Nullable<decimal> totalWorkingDay, Nullable<decimal> totalPresentDay, Nullable<decimal> totalAbsentDay, string writting, string speaking, string conduct, string neatness, string musicDance, string currentUser, string passFail, Nullable<decimal> percentage, string division, string examterm, string year_B_C, Nullable<int> rank, string col1, string col2, string col3, string col4, string col5, string col6, string col7, string col8, string col9, string col10, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var namefieldParameter = namefield != null ?
                new ObjectParameter("Namefield", namefield) :
                new ObjectParameter("Namefield", typeof(string));
    
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("Class_stu", class_stu) :
                new ObjectParameter("Class_stu", typeof(string));
    
            var rollParameter = roll != null ?
                new ObjectParameter("Roll", roll) :
                new ObjectParameter("Roll", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("Sectionfield", sectionfield) :
                new ObjectParameter("Sectionfield", typeof(string));
    
            var subject1Parameter = subject1 != null ?
                new ObjectParameter("Subject1", subject1) :
                new ObjectParameter("Subject1", typeof(string));
    
            var subject2Parameter = subject2 != null ?
                new ObjectParameter("Subject2", subject2) :
                new ObjectParameter("Subject2", typeof(string));
    
            var subject3Parameter = subject3 != null ?
                new ObjectParameter("Subject3", subject3) :
                new ObjectParameter("Subject3", typeof(string));
    
            var subject4Parameter = subject4 != null ?
                new ObjectParameter("Subject4", subject4) :
                new ObjectParameter("Subject4", typeof(string));
    
            var subject5Parameter = subject5 != null ?
                new ObjectParameter("Subject5", subject5) :
                new ObjectParameter("Subject5", typeof(string));
    
            var subject6Parameter = subject6 != null ?
                new ObjectParameter("Subject6", subject6) :
                new ObjectParameter("Subject6", typeof(string));
    
            var subject7Parameter = subject7 != null ?
                new ObjectParameter("Subject7", subject7) :
                new ObjectParameter("Subject7", typeof(string));
    
            var subject8Parameter = subject8 != null ?
                new ObjectParameter("Subject8", subject8) :
                new ObjectParameter("Subject8", typeof(string));
    
            var subject9Parameter = subject9 != null ?
                new ObjectParameter("Subject9", subject9) :
                new ObjectParameter("Subject9", typeof(string));
    
            var subject10Parameter = subject10 != null ?
                new ObjectParameter("Subject10", subject10) :
                new ObjectParameter("Subject10", typeof(string));
    
            var subject11Parameter = subject11 != null ?
                new ObjectParameter("Subject11", subject11) :
                new ObjectParameter("Subject11", typeof(string));
    
            var subject12Parameter = subject12 != null ?
                new ObjectParameter("Subject12", subject12) :
                new ObjectParameter("Subject12", typeof(string));
    
            var subject13Parameter = subject13 != null ?
                new ObjectParameter("Subject13", subject13) :
                new ObjectParameter("Subject13", typeof(string));
    
            var subject14Parameter = subject14 != null ?
                new ObjectParameter("Subject14", subject14) :
                new ObjectParameter("Subject14", typeof(string));
    
            var subject15Parameter = subject15 != null ?
                new ObjectParameter("Subject15", subject15) :
                new ObjectParameter("Subject15", typeof(string));
    
            var subject16Parameter = subject16 != null ?
                new ObjectParameter("Subject16", subject16) :
                new ObjectParameter("Subject16", typeof(string));
    
            var subject17Parameter = subject17 != null ?
                new ObjectParameter("Subject17", subject17) :
                new ObjectParameter("Subject17", typeof(string));
    
            var subject18Parameter = subject18 != null ?
                new ObjectParameter("Subject18", subject18) :
                new ObjectParameter("Subject18", typeof(string));
    
            var subject19Parameter = subject19 != null ?
                new ObjectParameter("Subject19", subject19) :
                new ObjectParameter("Subject19", typeof(string));
    
            var subject20Parameter = subject20 != null ?
                new ObjectParameter("Subject20", subject20) :
                new ObjectParameter("Subject20", typeof(string));
    
            var totalMarksObtainParameter = totalMarksObtain.HasValue ?
                new ObjectParameter("TotalMarksObtain", totalMarksObtain) :
                new ObjectParameter("TotalMarksObtain", typeof(decimal));
    
            var pratical1Parameter = pratical1 != null ?
                new ObjectParameter("pratical1", pratical1) :
                new ObjectParameter("pratical1", typeof(string));
    
            var pratical2Parameter = pratical2 != null ?
                new ObjectParameter("pratical2", pratical2) :
                new ObjectParameter("pratical2", typeof(string));
    
            var pratical3Parameter = pratical3 != null ?
                new ObjectParameter("pratical3", pratical3) :
                new ObjectParameter("pratical3", typeof(string));
    
            var pratical4Parameter = pratical4 != null ?
                new ObjectParameter("pratical4", pratical4) :
                new ObjectParameter("pratical4", typeof(string));
    
            var pratical5Parameter = pratical5 != null ?
                new ObjectParameter("pratical5", pratical5) :
                new ObjectParameter("pratical5", typeof(string));
    
            var pratical6Parameter = pratical6 != null ?
                new ObjectParameter("pratical6", pratical6) :
                new ObjectParameter("pratical6", typeof(string));
    
            var pratical7Parameter = pratical7 != null ?
                new ObjectParameter("pratical7", pratical7) :
                new ObjectParameter("pratical7", typeof(string));
    
            var pratical8Parameter = pratical8 != null ?
                new ObjectParameter("pratical8", pratical8) :
                new ObjectParameter("pratical8", typeof(string));
    
            var pratical9Parameter = pratical9 != null ?
                new ObjectParameter("pratical9", pratical9) :
                new ObjectParameter("pratical9", typeof(string));
    
            var pratical10Parameter = pratical10 != null ?
                new ObjectParameter("pratical10", pratical10) :
                new ObjectParameter("pratical10", typeof(string));
    
            var pratical11Parameter = pratical11 != null ?
                new ObjectParameter("pratical11", pratical11) :
                new ObjectParameter("pratical11", typeof(string));
    
            var pratical12Parameter = pratical12 != null ?
                new ObjectParameter("pratical12", pratical12) :
                new ObjectParameter("pratical12", typeof(string));
    
            var pratical13Parameter = pratical13 != null ?
                new ObjectParameter("pratical13", pratical13) :
                new ObjectParameter("pratical13", typeof(string));
    
            var pratical14Parameter = pratical14 != null ?
                new ObjectParameter("pratical14", pratical14) :
                new ObjectParameter("pratical14", typeof(string));
    
            var pratical15Parameter = pratical15 != null ?
                new ObjectParameter("pratical15", pratical15) :
                new ObjectParameter("pratical15", typeof(string));
    
            var pratical16Parameter = pratical16 != null ?
                new ObjectParameter("pratical16", pratical16) :
                new ObjectParameter("pratical16", typeof(string));
    
            var pratical17Parameter = pratical17 != null ?
                new ObjectParameter("pratical17", pratical17) :
                new ObjectParameter("pratical17", typeof(string));
    
            var pratical18Parameter = pratical18 != null ?
                new ObjectParameter("pratical18", pratical18) :
                new ObjectParameter("pratical18", typeof(string));
    
            var pratical19Parameter = pratical19 != null ?
                new ObjectParameter("pratical19", pratical19) :
                new ObjectParameter("pratical19", typeof(string));
    
            var pratical20Parameter = pratical20 != null ?
                new ObjectParameter("pratical20", pratical20) :
                new ObjectParameter("pratical20", typeof(string));
    
            var totalpraticalParameter = totalpratical.HasValue ?
                new ObjectParameter("totalpratical", totalpratical) :
                new ObjectParameter("totalpratical", typeof(decimal));
    
            var totalobtainmarks1Parameter = totalobtainmarks1.HasValue ?
                new ObjectParameter("totalobtainmarks1", totalobtainmarks1) :
                new ObjectParameter("totalobtainmarks1", typeof(decimal));
    
            var totalobtainmarks2Parameter = totalobtainmarks2.HasValue ?
                new ObjectParameter("totalobtainmarks2", totalobtainmarks2) :
                new ObjectParameter("totalobtainmarks2", typeof(decimal));
    
            var totalobtainmarks3Parameter = totalobtainmarks3.HasValue ?
                new ObjectParameter("totalobtainmarks3", totalobtainmarks3) :
                new ObjectParameter("totalobtainmarks3", typeof(decimal));
    
            var totalobtainmarks4Parameter = totalobtainmarks4.HasValue ?
                new ObjectParameter("totalobtainmarks4", totalobtainmarks4) :
                new ObjectParameter("totalobtainmarks4", typeof(decimal));
    
            var totalobtainmarks5Parameter = totalobtainmarks5.HasValue ?
                new ObjectParameter("totalobtainmarks5", totalobtainmarks5) :
                new ObjectParameter("totalobtainmarks5", typeof(decimal));
    
            var totalobtainmarks6Parameter = totalobtainmarks6.HasValue ?
                new ObjectParameter("totalobtainmarks6", totalobtainmarks6) :
                new ObjectParameter("totalobtainmarks6", typeof(decimal));
    
            var totalobtainmarks7Parameter = totalobtainmarks7.HasValue ?
                new ObjectParameter("totalobtainmarks7", totalobtainmarks7) :
                new ObjectParameter("totalobtainmarks7", typeof(decimal));
    
            var totalobtainmarks8Parameter = totalobtainmarks8.HasValue ?
                new ObjectParameter("totalobtainmarks8", totalobtainmarks8) :
                new ObjectParameter("totalobtainmarks8", typeof(decimal));
    
            var totalobtainmarks9Parameter = totalobtainmarks9.HasValue ?
                new ObjectParameter("totalobtainmarks9", totalobtainmarks9) :
                new ObjectParameter("totalobtainmarks9", typeof(decimal));
    
            var totalobtainmarks10Parameter = totalobtainmarks10.HasValue ?
                new ObjectParameter("totalobtainmarks10", totalobtainmarks10) :
                new ObjectParameter("totalobtainmarks10", typeof(decimal));
    
            var totalobtainmarks11Parameter = totalobtainmarks11.HasValue ?
                new ObjectParameter("totalobtainmarks11", totalobtainmarks11) :
                new ObjectParameter("totalobtainmarks11", typeof(decimal));
    
            var totalobtainmarks12Parameter = totalobtainmarks12.HasValue ?
                new ObjectParameter("totalobtainmarks12", totalobtainmarks12) :
                new ObjectParameter("totalobtainmarks12", typeof(decimal));
    
            var totalobtainmarks13Parameter = totalobtainmarks13.HasValue ?
                new ObjectParameter("totalobtainmarks13", totalobtainmarks13) :
                new ObjectParameter("totalobtainmarks13", typeof(decimal));
    
            var totalobtainmarks14Parameter = totalobtainmarks14.HasValue ?
                new ObjectParameter("totalobtainmarks14", totalobtainmarks14) :
                new ObjectParameter("totalobtainmarks14", typeof(decimal));
    
            var totalobtainmarks15Parameter = totalobtainmarks15.HasValue ?
                new ObjectParameter("totalobtainmarks15", totalobtainmarks15) :
                new ObjectParameter("totalobtainmarks15", typeof(decimal));
    
            var totalobtainmarks16Parameter = totalobtainmarks16.HasValue ?
                new ObjectParameter("totalobtainmarks16", totalobtainmarks16) :
                new ObjectParameter("totalobtainmarks16", typeof(decimal));
    
            var totalobtainmarks17Parameter = totalobtainmarks17.HasValue ?
                new ObjectParameter("totalobtainmarks17", totalobtainmarks17) :
                new ObjectParameter("totalobtainmarks17", typeof(decimal));
    
            var totalobtainmarks18Parameter = totalobtainmarks18.HasValue ?
                new ObjectParameter("totalobtainmarks18", totalobtainmarks18) :
                new ObjectParameter("totalobtainmarks18", typeof(decimal));
    
            var totalobtainmarks19Parameter = totalobtainmarks19.HasValue ?
                new ObjectParameter("totalobtainmarks19", totalobtainmarks19) :
                new ObjectParameter("totalobtainmarks19", typeof(decimal));
    
            var totalobtainmarks20Parameter = totalobtainmarks20.HasValue ?
                new ObjectParameter("totalobtainmarks20", totalobtainmarks20) :
                new ObjectParameter("totalobtainmarks20", typeof(decimal));
    
            var tatalobtainmarksParameter = tatalobtainmarks.HasValue ?
                new ObjectParameter("tatalobtainmarks", tatalobtainmarks) :
                new ObjectParameter("tatalobtainmarks", typeof(decimal));
    
            var totalWorkingDayParameter = totalWorkingDay.HasValue ?
                new ObjectParameter("TotalWorkingDay", totalWorkingDay) :
                new ObjectParameter("TotalWorkingDay", typeof(decimal));
    
            var totalPresentDayParameter = totalPresentDay.HasValue ?
                new ObjectParameter("totalPresentDay", totalPresentDay) :
                new ObjectParameter("totalPresentDay", typeof(decimal));
    
            var totalAbsentDayParameter = totalAbsentDay.HasValue ?
                new ObjectParameter("totalAbsentDay", totalAbsentDay) :
                new ObjectParameter("totalAbsentDay", typeof(decimal));
    
            var writtingParameter = writting != null ?
                new ObjectParameter("Writting", writting) :
                new ObjectParameter("Writting", typeof(string));
    
            var speakingParameter = speaking != null ?
                new ObjectParameter("Speaking", speaking) :
                new ObjectParameter("Speaking", typeof(string));
    
            var conductParameter = conduct != null ?
                new ObjectParameter("Conduct", conduct) :
                new ObjectParameter("Conduct", typeof(string));
    
            var neatnessParameter = neatness != null ?
                new ObjectParameter("Neatness", neatness) :
                new ObjectParameter("Neatness", typeof(string));
    
            var musicDanceParameter = musicDance != null ?
                new ObjectParameter("MusicDance", musicDance) :
                new ObjectParameter("MusicDance", typeof(string));
    
            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));
    
            var passFailParameter = passFail != null ?
                new ObjectParameter("PassFail", passFail) :
                new ObjectParameter("PassFail", typeof(string));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("Percentage", percentage) :
                new ObjectParameter("Percentage", typeof(decimal));
    
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var examtermParameter = examterm != null ?
                new ObjectParameter("Examterm", examterm) :
                new ObjectParameter("Examterm", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var rankParameter = rank.HasValue ?
                new ObjectParameter("Rank", rank) :
                new ObjectParameter("Rank", typeof(int));
    
            var col1Parameter = col1 != null ?
                new ObjectParameter("Col1", col1) :
                new ObjectParameter("Col1", typeof(string));
    
            var col2Parameter = col2 != null ?
                new ObjectParameter("Col2", col2) :
                new ObjectParameter("Col2", typeof(string));
    
            var col3Parameter = col3 != null ?
                new ObjectParameter("Col3", col3) :
                new ObjectParameter("Col3", typeof(string));
    
            var col4Parameter = col4 != null ?
                new ObjectParameter("Col4", col4) :
                new ObjectParameter("Col4", typeof(string));
    
            var col5Parameter = col5 != null ?
                new ObjectParameter("Col5", col5) :
                new ObjectParameter("Col5", typeof(string));
    
            var col6Parameter = col6 != null ?
                new ObjectParameter("Col6", col6) :
                new ObjectParameter("Col6", typeof(string));
    
            var col7Parameter = col7 != null ?
                new ObjectParameter("Col7", col7) :
                new ObjectParameter("Col7", typeof(string));
    
            var col8Parameter = col8 != null ?
                new ObjectParameter("Col8", col8) :
                new ObjectParameter("Col8", typeof(string));
    
            var col9Parameter = col9 != null ?
                new ObjectParameter("Col9", col9) :
                new ObjectParameter("Col9", typeof(string));
    
            var col10Parameter = col10 != null ?
                new ObjectParameter("Col10", col10) :
                new ObjectParameter("Col10", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertMidfirstterm_2", studentIdParameter, namefieldParameter, class_stuParameter, rollParameter, sectionfieldParameter, subject1Parameter, subject2Parameter, subject3Parameter, subject4Parameter, subject5Parameter, subject6Parameter, subject7Parameter, subject8Parameter, subject9Parameter, subject10Parameter, subject11Parameter, subject12Parameter, subject13Parameter, subject14Parameter, subject15Parameter, subject16Parameter, subject17Parameter, subject18Parameter, subject19Parameter, subject20Parameter, totalMarksObtainParameter, pratical1Parameter, pratical2Parameter, pratical3Parameter, pratical4Parameter, pratical5Parameter, pratical6Parameter, pratical7Parameter, pratical8Parameter, pratical9Parameter, pratical10Parameter, pratical11Parameter, pratical12Parameter, pratical13Parameter, pratical14Parameter, pratical15Parameter, pratical16Parameter, pratical17Parameter, pratical18Parameter, pratical19Parameter, pratical20Parameter, totalpraticalParameter, totalobtainmarks1Parameter, totalobtainmarks2Parameter, totalobtainmarks3Parameter, totalobtainmarks4Parameter, totalobtainmarks5Parameter, totalobtainmarks6Parameter, totalobtainmarks7Parameter, totalobtainmarks8Parameter, totalobtainmarks9Parameter, totalobtainmarks10Parameter, totalobtainmarks11Parameter, totalobtainmarks12Parameter, totalobtainmarks13Parameter, totalobtainmarks14Parameter, totalobtainmarks15Parameter, totalobtainmarks16Parameter, totalobtainmarks17Parameter, totalobtainmarks18Parameter, totalobtainmarks19Parameter, totalobtainmarks20Parameter, tatalobtainmarksParameter, totalWorkingDayParameter, totalPresentDayParameter, totalAbsentDayParameter, writtingParameter, speakingParameter, conductParameter, neatnessParameter, musicDanceParameter, currentUserParameter, passFailParameter, percentageParameter, divisionParameter, examtermParameter, year_B_CParameter, rankParameter, col1Parameter, col2Parameter, col3Parameter, col4Parameter, col5Parameter, col6Parameter, col7Parameter, col8Parameter, col9Parameter, col10Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertMidfirstterm_sum(string studentId, string namefield, string class_stu, string roll, string sectionfield, Nullable<decimal> subject1, Nullable<decimal> subject2, Nullable<decimal> subject3, Nullable<decimal> subject4, Nullable<decimal> subject5, Nullable<decimal> subject6, Nullable<decimal> subject7, Nullable<decimal> subject8, Nullable<decimal> subject9, Nullable<decimal> subject10, Nullable<decimal> subject11, Nullable<decimal> subject12, Nullable<decimal> subject13, Nullable<decimal> subject14, Nullable<decimal> subject15, Nullable<decimal> subject16, Nullable<decimal> subject17, Nullable<decimal> subject18, Nullable<decimal> subject19, Nullable<decimal> subject20, Nullable<decimal> totalMarksObtain, Nullable<decimal> pratical1, Nullable<decimal> pratical2, Nullable<decimal> pratical3, Nullable<decimal> pratical4, Nullable<decimal> pratical5, Nullable<decimal> pratical6, Nullable<decimal> pratical7, Nullable<decimal> pratical8, Nullable<decimal> pratical9, Nullable<decimal> pratical10, Nullable<decimal> pratical11, Nullable<decimal> pratical12, Nullable<decimal> pratical13, string pratical14, string pratical15, string pratical16, string pratical17, string pratical18, string pratical19, string pratical20, Nullable<decimal> totalpratical, Nullable<decimal> totalobtainmarks1, Nullable<decimal> totalobtainmarks2, Nullable<decimal> totalobtainmarks3, Nullable<decimal> totalobtainmarks4, Nullable<decimal> totalobtainmarks5, Nullable<decimal> totalobtainmarks6, Nullable<decimal> totalobtainmarks7, Nullable<decimal> totalobtainmarks8, Nullable<decimal> totalobtainmarks9, Nullable<decimal> totalobtainmarks10, Nullable<decimal> totalobtainmarks11, Nullable<decimal> totalobtainmarks12, Nullable<decimal> totalobtainmarks13, Nullable<decimal> totalobtainmarks14, Nullable<decimal> totalobtainmarks15, Nullable<decimal> totalobtainmarks16, Nullable<decimal> totalobtainmarks17, Nullable<decimal> totalobtainmarks18, Nullable<decimal> totalobtainmarks19, Nullable<decimal> totalobtainmarks20, Nullable<decimal> tatalobtainmarks, Nullable<decimal> totalWorkingDay, Nullable<decimal> totalPresentDay, Nullable<decimal> totalAbsentDay, string writting, string speaking, string conduct, string neatness, string musicDance, string currentUser, string passFail, Nullable<decimal> percentage, string division, string examterm, string year_B_C, Nullable<int> rank, string col1, string col2, string col3, string col4, string col5, string col6, string col7, string col8, string col9, string col10, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var namefieldParameter = namefield != null ?
                new ObjectParameter("Namefield", namefield) :
                new ObjectParameter("Namefield", typeof(string));
    
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("Class_stu", class_stu) :
                new ObjectParameter("Class_stu", typeof(string));
    
            var rollParameter = roll != null ?
                new ObjectParameter("Roll", roll) :
                new ObjectParameter("Roll", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("Sectionfield", sectionfield) :
                new ObjectParameter("Sectionfield", typeof(string));
    
            var subject1Parameter = subject1.HasValue ?
                new ObjectParameter("Subject1", subject1) :
                new ObjectParameter("Subject1", typeof(decimal));
    
            var subject2Parameter = subject2.HasValue ?
                new ObjectParameter("Subject2", subject2) :
                new ObjectParameter("Subject2", typeof(decimal));
    
            var subject3Parameter = subject3.HasValue ?
                new ObjectParameter("Subject3", subject3) :
                new ObjectParameter("Subject3", typeof(decimal));
    
            var subject4Parameter = subject4.HasValue ?
                new ObjectParameter("Subject4", subject4) :
                new ObjectParameter("Subject4", typeof(decimal));
    
            var subject5Parameter = subject5.HasValue ?
                new ObjectParameter("Subject5", subject5) :
                new ObjectParameter("Subject5", typeof(decimal));
    
            var subject6Parameter = subject6.HasValue ?
                new ObjectParameter("Subject6", subject6) :
                new ObjectParameter("Subject6", typeof(decimal));
    
            var subject7Parameter = subject7.HasValue ?
                new ObjectParameter("Subject7", subject7) :
                new ObjectParameter("Subject7", typeof(decimal));
    
            var subject8Parameter = subject8.HasValue ?
                new ObjectParameter("Subject8", subject8) :
                new ObjectParameter("Subject8", typeof(decimal));
    
            var subject9Parameter = subject9.HasValue ?
                new ObjectParameter("Subject9", subject9) :
                new ObjectParameter("Subject9", typeof(decimal));
    
            var subject10Parameter = subject10.HasValue ?
                new ObjectParameter("Subject10", subject10) :
                new ObjectParameter("Subject10", typeof(decimal));
    
            var subject11Parameter = subject11.HasValue ?
                new ObjectParameter("Subject11", subject11) :
                new ObjectParameter("Subject11", typeof(decimal));
    
            var subject12Parameter = subject12.HasValue ?
                new ObjectParameter("Subject12", subject12) :
                new ObjectParameter("Subject12", typeof(decimal));
    
            var subject13Parameter = subject13.HasValue ?
                new ObjectParameter("Subject13", subject13) :
                new ObjectParameter("Subject13", typeof(decimal));
    
            var subject14Parameter = subject14.HasValue ?
                new ObjectParameter("Subject14", subject14) :
                new ObjectParameter("Subject14", typeof(decimal));
    
            var subject15Parameter = subject15.HasValue ?
                new ObjectParameter("Subject15", subject15) :
                new ObjectParameter("Subject15", typeof(decimal));
    
            var subject16Parameter = subject16.HasValue ?
                new ObjectParameter("Subject16", subject16) :
                new ObjectParameter("Subject16", typeof(decimal));
    
            var subject17Parameter = subject17.HasValue ?
                new ObjectParameter("Subject17", subject17) :
                new ObjectParameter("Subject17", typeof(decimal));
    
            var subject18Parameter = subject18.HasValue ?
                new ObjectParameter("Subject18", subject18) :
                new ObjectParameter("Subject18", typeof(decimal));
    
            var subject19Parameter = subject19.HasValue ?
                new ObjectParameter("Subject19", subject19) :
                new ObjectParameter("Subject19", typeof(decimal));
    
            var subject20Parameter = subject20.HasValue ?
                new ObjectParameter("Subject20", subject20) :
                new ObjectParameter("Subject20", typeof(decimal));
    
            var totalMarksObtainParameter = totalMarksObtain.HasValue ?
                new ObjectParameter("TotalMarksObtain", totalMarksObtain) :
                new ObjectParameter("TotalMarksObtain", typeof(decimal));
    
            var pratical1Parameter = pratical1.HasValue ?
                new ObjectParameter("pratical1", pratical1) :
                new ObjectParameter("pratical1", typeof(decimal));
    
            var pratical2Parameter = pratical2.HasValue ?
                new ObjectParameter("pratical2", pratical2) :
                new ObjectParameter("pratical2", typeof(decimal));
    
            var pratical3Parameter = pratical3.HasValue ?
                new ObjectParameter("pratical3", pratical3) :
                new ObjectParameter("pratical3", typeof(decimal));
    
            var pratical4Parameter = pratical4.HasValue ?
                new ObjectParameter("pratical4", pratical4) :
                new ObjectParameter("pratical4", typeof(decimal));
    
            var pratical5Parameter = pratical5.HasValue ?
                new ObjectParameter("pratical5", pratical5) :
                new ObjectParameter("pratical5", typeof(decimal));
    
            var pratical6Parameter = pratical6.HasValue ?
                new ObjectParameter("pratical6", pratical6) :
                new ObjectParameter("pratical6", typeof(decimal));
    
            var pratical7Parameter = pratical7.HasValue ?
                new ObjectParameter("pratical7", pratical7) :
                new ObjectParameter("pratical7", typeof(decimal));
    
            var pratical8Parameter = pratical8.HasValue ?
                new ObjectParameter("pratical8", pratical8) :
                new ObjectParameter("pratical8", typeof(decimal));
    
            var pratical9Parameter = pratical9.HasValue ?
                new ObjectParameter("pratical9", pratical9) :
                new ObjectParameter("pratical9", typeof(decimal));
    
            var pratical10Parameter = pratical10.HasValue ?
                new ObjectParameter("pratical10", pratical10) :
                new ObjectParameter("pratical10", typeof(decimal));
    
            var pratical11Parameter = pratical11.HasValue ?
                new ObjectParameter("pratical11", pratical11) :
                new ObjectParameter("pratical11", typeof(decimal));
    
            var pratical12Parameter = pratical12.HasValue ?
                new ObjectParameter("pratical12", pratical12) :
                new ObjectParameter("pratical12", typeof(decimal));
    
            var pratical13Parameter = pratical13.HasValue ?
                new ObjectParameter("pratical13", pratical13) :
                new ObjectParameter("pratical13", typeof(decimal));
    
            var pratical14Parameter = pratical14 != null ?
                new ObjectParameter("pratical14", pratical14) :
                new ObjectParameter("pratical14", typeof(string));
    
            var pratical15Parameter = pratical15 != null ?
                new ObjectParameter("pratical15", pratical15) :
                new ObjectParameter("pratical15", typeof(string));
    
            var pratical16Parameter = pratical16 != null ?
                new ObjectParameter("pratical16", pratical16) :
                new ObjectParameter("pratical16", typeof(string));
    
            var pratical17Parameter = pratical17 != null ?
                new ObjectParameter("pratical17", pratical17) :
                new ObjectParameter("pratical17", typeof(string));
    
            var pratical18Parameter = pratical18 != null ?
                new ObjectParameter("pratical18", pratical18) :
                new ObjectParameter("pratical18", typeof(string));
    
            var pratical19Parameter = pratical19 != null ?
                new ObjectParameter("pratical19", pratical19) :
                new ObjectParameter("pratical19", typeof(string));
    
            var pratical20Parameter = pratical20 != null ?
                new ObjectParameter("pratical20", pratical20) :
                new ObjectParameter("pratical20", typeof(string));
    
            var totalpraticalParameter = totalpratical.HasValue ?
                new ObjectParameter("totalpratical", totalpratical) :
                new ObjectParameter("totalpratical", typeof(decimal));
    
            var totalobtainmarks1Parameter = totalobtainmarks1.HasValue ?
                new ObjectParameter("totalobtainmarks1", totalobtainmarks1) :
                new ObjectParameter("totalobtainmarks1", typeof(decimal));
    
            var totalobtainmarks2Parameter = totalobtainmarks2.HasValue ?
                new ObjectParameter("totalobtainmarks2", totalobtainmarks2) :
                new ObjectParameter("totalobtainmarks2", typeof(decimal));
    
            var totalobtainmarks3Parameter = totalobtainmarks3.HasValue ?
                new ObjectParameter("totalobtainmarks3", totalobtainmarks3) :
                new ObjectParameter("totalobtainmarks3", typeof(decimal));
    
            var totalobtainmarks4Parameter = totalobtainmarks4.HasValue ?
                new ObjectParameter("totalobtainmarks4", totalobtainmarks4) :
                new ObjectParameter("totalobtainmarks4", typeof(decimal));
    
            var totalobtainmarks5Parameter = totalobtainmarks5.HasValue ?
                new ObjectParameter("totalobtainmarks5", totalobtainmarks5) :
                new ObjectParameter("totalobtainmarks5", typeof(decimal));
    
            var totalobtainmarks6Parameter = totalobtainmarks6.HasValue ?
                new ObjectParameter("totalobtainmarks6", totalobtainmarks6) :
                new ObjectParameter("totalobtainmarks6", typeof(decimal));
    
            var totalobtainmarks7Parameter = totalobtainmarks7.HasValue ?
                new ObjectParameter("totalobtainmarks7", totalobtainmarks7) :
                new ObjectParameter("totalobtainmarks7", typeof(decimal));
    
            var totalobtainmarks8Parameter = totalobtainmarks8.HasValue ?
                new ObjectParameter("totalobtainmarks8", totalobtainmarks8) :
                new ObjectParameter("totalobtainmarks8", typeof(decimal));
    
            var totalobtainmarks9Parameter = totalobtainmarks9.HasValue ?
                new ObjectParameter("totalobtainmarks9", totalobtainmarks9) :
                new ObjectParameter("totalobtainmarks9", typeof(decimal));
    
            var totalobtainmarks10Parameter = totalobtainmarks10.HasValue ?
                new ObjectParameter("totalobtainmarks10", totalobtainmarks10) :
                new ObjectParameter("totalobtainmarks10", typeof(decimal));
    
            var totalobtainmarks11Parameter = totalobtainmarks11.HasValue ?
                new ObjectParameter("totalobtainmarks11", totalobtainmarks11) :
                new ObjectParameter("totalobtainmarks11", typeof(decimal));
    
            var totalobtainmarks12Parameter = totalobtainmarks12.HasValue ?
                new ObjectParameter("totalobtainmarks12", totalobtainmarks12) :
                new ObjectParameter("totalobtainmarks12", typeof(decimal));
    
            var totalobtainmarks13Parameter = totalobtainmarks13.HasValue ?
                new ObjectParameter("totalobtainmarks13", totalobtainmarks13) :
                new ObjectParameter("totalobtainmarks13", typeof(decimal));
    
            var totalobtainmarks14Parameter = totalobtainmarks14.HasValue ?
                new ObjectParameter("totalobtainmarks14", totalobtainmarks14) :
                new ObjectParameter("totalobtainmarks14", typeof(decimal));
    
            var totalobtainmarks15Parameter = totalobtainmarks15.HasValue ?
                new ObjectParameter("totalobtainmarks15", totalobtainmarks15) :
                new ObjectParameter("totalobtainmarks15", typeof(decimal));
    
            var totalobtainmarks16Parameter = totalobtainmarks16.HasValue ?
                new ObjectParameter("totalobtainmarks16", totalobtainmarks16) :
                new ObjectParameter("totalobtainmarks16", typeof(decimal));
    
            var totalobtainmarks17Parameter = totalobtainmarks17.HasValue ?
                new ObjectParameter("totalobtainmarks17", totalobtainmarks17) :
                new ObjectParameter("totalobtainmarks17", typeof(decimal));
    
            var totalobtainmarks18Parameter = totalobtainmarks18.HasValue ?
                new ObjectParameter("totalobtainmarks18", totalobtainmarks18) :
                new ObjectParameter("totalobtainmarks18", typeof(decimal));
    
            var totalobtainmarks19Parameter = totalobtainmarks19.HasValue ?
                new ObjectParameter("totalobtainmarks19", totalobtainmarks19) :
                new ObjectParameter("totalobtainmarks19", typeof(decimal));
    
            var totalobtainmarks20Parameter = totalobtainmarks20.HasValue ?
                new ObjectParameter("totalobtainmarks20", totalobtainmarks20) :
                new ObjectParameter("totalobtainmarks20", typeof(decimal));
    
            var tatalobtainmarksParameter = tatalobtainmarks.HasValue ?
                new ObjectParameter("tatalobtainmarks", tatalobtainmarks) :
                new ObjectParameter("tatalobtainmarks", typeof(decimal));
    
            var totalWorkingDayParameter = totalWorkingDay.HasValue ?
                new ObjectParameter("TotalWorkingDay", totalWorkingDay) :
                new ObjectParameter("TotalWorkingDay", typeof(decimal));
    
            var totalPresentDayParameter = totalPresentDay.HasValue ?
                new ObjectParameter("totalPresentDay", totalPresentDay) :
                new ObjectParameter("totalPresentDay", typeof(decimal));
    
            var totalAbsentDayParameter = totalAbsentDay.HasValue ?
                new ObjectParameter("totalAbsentDay", totalAbsentDay) :
                new ObjectParameter("totalAbsentDay", typeof(decimal));
    
            var writtingParameter = writting != null ?
                new ObjectParameter("Writting", writting) :
                new ObjectParameter("Writting", typeof(string));
    
            var speakingParameter = speaking != null ?
                new ObjectParameter("Speaking", speaking) :
                new ObjectParameter("Speaking", typeof(string));
    
            var conductParameter = conduct != null ?
                new ObjectParameter("Conduct", conduct) :
                new ObjectParameter("Conduct", typeof(string));
    
            var neatnessParameter = neatness != null ?
                new ObjectParameter("Neatness", neatness) :
                new ObjectParameter("Neatness", typeof(string));
    
            var musicDanceParameter = musicDance != null ?
                new ObjectParameter("MusicDance", musicDance) :
                new ObjectParameter("MusicDance", typeof(string));
    
            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));
    
            var passFailParameter = passFail != null ?
                new ObjectParameter("PassFail", passFail) :
                new ObjectParameter("PassFail", typeof(string));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("Percentage", percentage) :
                new ObjectParameter("Percentage", typeof(decimal));
    
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var examtermParameter = examterm != null ?
                new ObjectParameter("Examterm", examterm) :
                new ObjectParameter("Examterm", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var rankParameter = rank.HasValue ?
                new ObjectParameter("Rank", rank) :
                new ObjectParameter("Rank", typeof(int));
    
            var col1Parameter = col1 != null ?
                new ObjectParameter("Col1", col1) :
                new ObjectParameter("Col1", typeof(string));
    
            var col2Parameter = col2 != null ?
                new ObjectParameter("Col2", col2) :
                new ObjectParameter("Col2", typeof(string));
    
            var col3Parameter = col3 != null ?
                new ObjectParameter("Col3", col3) :
                new ObjectParameter("Col3", typeof(string));
    
            var col4Parameter = col4 != null ?
                new ObjectParameter("Col4", col4) :
                new ObjectParameter("Col4", typeof(string));
    
            var col5Parameter = col5 != null ?
                new ObjectParameter("Col5", col5) :
                new ObjectParameter("Col5", typeof(string));
    
            var col6Parameter = col6 != null ?
                new ObjectParameter("Col6", col6) :
                new ObjectParameter("Col6", typeof(string));
    
            var col7Parameter = col7 != null ?
                new ObjectParameter("Col7", col7) :
                new ObjectParameter("Col7", typeof(string));
    
            var col8Parameter = col8 != null ?
                new ObjectParameter("Col8", col8) :
                new ObjectParameter("Col8", typeof(string));
    
            var col9Parameter = col9 != null ?
                new ObjectParameter("Col9", col9) :
                new ObjectParameter("Col9", typeof(string));
    
            var col10Parameter = col10 != null ?
                new ObjectParameter("Col10", col10) :
                new ObjectParameter("Col10", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertMidfirstterm_sum", studentIdParameter, namefieldParameter, class_stuParameter, rollParameter, sectionfieldParameter, subject1Parameter, subject2Parameter, subject3Parameter, subject4Parameter, subject5Parameter, subject6Parameter, subject7Parameter, subject8Parameter, subject9Parameter, subject10Parameter, subject11Parameter, subject12Parameter, subject13Parameter, subject14Parameter, subject15Parameter, subject16Parameter, subject17Parameter, subject18Parameter, subject19Parameter, subject20Parameter, totalMarksObtainParameter, pratical1Parameter, pratical2Parameter, pratical3Parameter, pratical4Parameter, pratical5Parameter, pratical6Parameter, pratical7Parameter, pratical8Parameter, pratical9Parameter, pratical10Parameter, pratical11Parameter, pratical12Parameter, pratical13Parameter, pratical14Parameter, pratical15Parameter, pratical16Parameter, pratical17Parameter, pratical18Parameter, pratical19Parameter, pratical20Parameter, totalpraticalParameter, totalobtainmarks1Parameter, totalobtainmarks2Parameter, totalobtainmarks3Parameter, totalobtainmarks4Parameter, totalobtainmarks5Parameter, totalobtainmarks6Parameter, totalobtainmarks7Parameter, totalobtainmarks8Parameter, totalobtainmarks9Parameter, totalobtainmarks10Parameter, totalobtainmarks11Parameter, totalobtainmarks12Parameter, totalobtainmarks13Parameter, totalobtainmarks14Parameter, totalobtainmarks15Parameter, totalobtainmarks16Parameter, totalobtainmarks17Parameter, totalobtainmarks18Parameter, totalobtainmarks19Parameter, totalobtainmarks20Parameter, tatalobtainmarksParameter, totalWorkingDayParameter, totalPresentDayParameter, totalAbsentDayParameter, writtingParameter, speakingParameter, conductParameter, neatnessParameter, musicDanceParameter, currentUserParameter, passFailParameter, percentageParameter, divisionParameter, examtermParameter, year_B_CParameter, rankParameter, col1Parameter, col2Parameter, col3Parameter, col4Parameter, col5Parameter, col6Parameter, col7Parameter, col8Parameter, col9Parameter, col10Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertMidfirsttermOnlineView(string studentId, string namefield, string class_stu, string roll, string sectionfield, string subject1, string subject2, string subject3, string subject4, string subject5, string subject6, string subject7, string subject8, string subject9, string subject10, string subject11, string subject12, string subject13, string subject14, string subject15, string subject16, string subject17, string subject18, string subject19, string subject20, Nullable<decimal> totalMarksObtain, string pratical1, string pratical2, string pratical3, string pratical4, string pratical5, string pratical6, string pratical7, string pratical8, string pratical9, string pratical10, string pratical11, string pratical12, string pratical13, string pratical14, string pratical15, string pratical16, string pratical17, string pratical18, string pratical19, string pratical20, Nullable<decimal> totalpratical, Nullable<decimal> totalobtainmarks1, Nullable<decimal> totalobtainmarks2, Nullable<decimal> totalobtainmarks3, Nullable<decimal> totalobtainmarks4, Nullable<decimal> totalobtainmarks5, Nullable<decimal> totalobtainmarks6, Nullable<decimal> totalobtainmarks7, Nullable<decimal> totalobtainmarks8, Nullable<decimal> totalobtainmarks9, Nullable<decimal> totalobtainmarks10, Nullable<decimal> totalobtainmarks11, Nullable<decimal> totalobtainmarks12, Nullable<decimal> totalobtainmarks13, Nullable<decimal> totalobtainmarks14, Nullable<decimal> totalobtainmarks15, Nullable<decimal> totalobtainmarks16, Nullable<decimal> totalobtainmarks17, Nullable<decimal> totalobtainmarks18, Nullable<decimal> totalobtainmarks19, Nullable<decimal> totalobtainmarks20, Nullable<decimal> tatalobtainmarks, Nullable<decimal> totalWorkingDay, Nullable<decimal> totalPresentDay, Nullable<decimal> totalAbsentDay, string writting, string speaking, string conduct, string neatness, string musicDance, string currentUser, string passFail, Nullable<decimal> percentage, string division, string examterm, string year_B_C, Nullable<int> rank, string col1, string col2, string col3, string col4, string col5, string col6, string col7, string col8, string col9, string col10, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var namefieldParameter = namefield != null ?
                new ObjectParameter("Namefield", namefield) :
                new ObjectParameter("Namefield", typeof(string));
    
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("Class_stu", class_stu) :
                new ObjectParameter("Class_stu", typeof(string));
    
            var rollParameter = roll != null ?
                new ObjectParameter("Roll", roll) :
                new ObjectParameter("Roll", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("Sectionfield", sectionfield) :
                new ObjectParameter("Sectionfield", typeof(string));
    
            var subject1Parameter = subject1 != null ?
                new ObjectParameter("Subject1", subject1) :
                new ObjectParameter("Subject1", typeof(string));
    
            var subject2Parameter = subject2 != null ?
                new ObjectParameter("Subject2", subject2) :
                new ObjectParameter("Subject2", typeof(string));
    
            var subject3Parameter = subject3 != null ?
                new ObjectParameter("Subject3", subject3) :
                new ObjectParameter("Subject3", typeof(string));
    
            var subject4Parameter = subject4 != null ?
                new ObjectParameter("Subject4", subject4) :
                new ObjectParameter("Subject4", typeof(string));
    
            var subject5Parameter = subject5 != null ?
                new ObjectParameter("Subject5", subject5) :
                new ObjectParameter("Subject5", typeof(string));
    
            var subject6Parameter = subject6 != null ?
                new ObjectParameter("Subject6", subject6) :
                new ObjectParameter("Subject6", typeof(string));
    
            var subject7Parameter = subject7 != null ?
                new ObjectParameter("Subject7", subject7) :
                new ObjectParameter("Subject7", typeof(string));
    
            var subject8Parameter = subject8 != null ?
                new ObjectParameter("Subject8", subject8) :
                new ObjectParameter("Subject8", typeof(string));
    
            var subject9Parameter = subject9 != null ?
                new ObjectParameter("Subject9", subject9) :
                new ObjectParameter("Subject9", typeof(string));
    
            var subject10Parameter = subject10 != null ?
                new ObjectParameter("Subject10", subject10) :
                new ObjectParameter("Subject10", typeof(string));
    
            var subject11Parameter = subject11 != null ?
                new ObjectParameter("Subject11", subject11) :
                new ObjectParameter("Subject11", typeof(string));
    
            var subject12Parameter = subject12 != null ?
                new ObjectParameter("Subject12", subject12) :
                new ObjectParameter("Subject12", typeof(string));
    
            var subject13Parameter = subject13 != null ?
                new ObjectParameter("Subject13", subject13) :
                new ObjectParameter("Subject13", typeof(string));
    
            var subject14Parameter = subject14 != null ?
                new ObjectParameter("Subject14", subject14) :
                new ObjectParameter("Subject14", typeof(string));
    
            var subject15Parameter = subject15 != null ?
                new ObjectParameter("Subject15", subject15) :
                new ObjectParameter("Subject15", typeof(string));
    
            var subject16Parameter = subject16 != null ?
                new ObjectParameter("Subject16", subject16) :
                new ObjectParameter("Subject16", typeof(string));
    
            var subject17Parameter = subject17 != null ?
                new ObjectParameter("Subject17", subject17) :
                new ObjectParameter("Subject17", typeof(string));
    
            var subject18Parameter = subject18 != null ?
                new ObjectParameter("Subject18", subject18) :
                new ObjectParameter("Subject18", typeof(string));
    
            var subject19Parameter = subject19 != null ?
                new ObjectParameter("Subject19", subject19) :
                new ObjectParameter("Subject19", typeof(string));
    
            var subject20Parameter = subject20 != null ?
                new ObjectParameter("Subject20", subject20) :
                new ObjectParameter("Subject20", typeof(string));
    
            var totalMarksObtainParameter = totalMarksObtain.HasValue ?
                new ObjectParameter("TotalMarksObtain", totalMarksObtain) :
                new ObjectParameter("TotalMarksObtain", typeof(decimal));
    
            var pratical1Parameter = pratical1 != null ?
                new ObjectParameter("pratical1", pratical1) :
                new ObjectParameter("pratical1", typeof(string));
    
            var pratical2Parameter = pratical2 != null ?
                new ObjectParameter("pratical2", pratical2) :
                new ObjectParameter("pratical2", typeof(string));
    
            var pratical3Parameter = pratical3 != null ?
                new ObjectParameter("pratical3", pratical3) :
                new ObjectParameter("pratical3", typeof(string));
    
            var pratical4Parameter = pratical4 != null ?
                new ObjectParameter("pratical4", pratical4) :
                new ObjectParameter("pratical4", typeof(string));
    
            var pratical5Parameter = pratical5 != null ?
                new ObjectParameter("pratical5", pratical5) :
                new ObjectParameter("pratical5", typeof(string));
    
            var pratical6Parameter = pratical6 != null ?
                new ObjectParameter("pratical6", pratical6) :
                new ObjectParameter("pratical6", typeof(string));
    
            var pratical7Parameter = pratical7 != null ?
                new ObjectParameter("pratical7", pratical7) :
                new ObjectParameter("pratical7", typeof(string));
    
            var pratical8Parameter = pratical8 != null ?
                new ObjectParameter("pratical8", pratical8) :
                new ObjectParameter("pratical8", typeof(string));
    
            var pratical9Parameter = pratical9 != null ?
                new ObjectParameter("pratical9", pratical9) :
                new ObjectParameter("pratical9", typeof(string));
    
            var pratical10Parameter = pratical10 != null ?
                new ObjectParameter("pratical10", pratical10) :
                new ObjectParameter("pratical10", typeof(string));
    
            var pratical11Parameter = pratical11 != null ?
                new ObjectParameter("pratical11", pratical11) :
                new ObjectParameter("pratical11", typeof(string));
    
            var pratical12Parameter = pratical12 != null ?
                new ObjectParameter("pratical12", pratical12) :
                new ObjectParameter("pratical12", typeof(string));
    
            var pratical13Parameter = pratical13 != null ?
                new ObjectParameter("pratical13", pratical13) :
                new ObjectParameter("pratical13", typeof(string));
    
            var pratical14Parameter = pratical14 != null ?
                new ObjectParameter("pratical14", pratical14) :
                new ObjectParameter("pratical14", typeof(string));
    
            var pratical15Parameter = pratical15 != null ?
                new ObjectParameter("pratical15", pratical15) :
                new ObjectParameter("pratical15", typeof(string));
    
            var pratical16Parameter = pratical16 != null ?
                new ObjectParameter("pratical16", pratical16) :
                new ObjectParameter("pratical16", typeof(string));
    
            var pratical17Parameter = pratical17 != null ?
                new ObjectParameter("pratical17", pratical17) :
                new ObjectParameter("pratical17", typeof(string));
    
            var pratical18Parameter = pratical18 != null ?
                new ObjectParameter("pratical18", pratical18) :
                new ObjectParameter("pratical18", typeof(string));
    
            var pratical19Parameter = pratical19 != null ?
                new ObjectParameter("pratical19", pratical19) :
                new ObjectParameter("pratical19", typeof(string));
    
            var pratical20Parameter = pratical20 != null ?
                new ObjectParameter("pratical20", pratical20) :
                new ObjectParameter("pratical20", typeof(string));
    
            var totalpraticalParameter = totalpratical.HasValue ?
                new ObjectParameter("totalpratical", totalpratical) :
                new ObjectParameter("totalpratical", typeof(decimal));
    
            var totalobtainmarks1Parameter = totalobtainmarks1.HasValue ?
                new ObjectParameter("totalobtainmarks1", totalobtainmarks1) :
                new ObjectParameter("totalobtainmarks1", typeof(decimal));
    
            var totalobtainmarks2Parameter = totalobtainmarks2.HasValue ?
                new ObjectParameter("totalobtainmarks2", totalobtainmarks2) :
                new ObjectParameter("totalobtainmarks2", typeof(decimal));
    
            var totalobtainmarks3Parameter = totalobtainmarks3.HasValue ?
                new ObjectParameter("totalobtainmarks3", totalobtainmarks3) :
                new ObjectParameter("totalobtainmarks3", typeof(decimal));
    
            var totalobtainmarks4Parameter = totalobtainmarks4.HasValue ?
                new ObjectParameter("totalobtainmarks4", totalobtainmarks4) :
                new ObjectParameter("totalobtainmarks4", typeof(decimal));
    
            var totalobtainmarks5Parameter = totalobtainmarks5.HasValue ?
                new ObjectParameter("totalobtainmarks5", totalobtainmarks5) :
                new ObjectParameter("totalobtainmarks5", typeof(decimal));
    
            var totalobtainmarks6Parameter = totalobtainmarks6.HasValue ?
                new ObjectParameter("totalobtainmarks6", totalobtainmarks6) :
                new ObjectParameter("totalobtainmarks6", typeof(decimal));
    
            var totalobtainmarks7Parameter = totalobtainmarks7.HasValue ?
                new ObjectParameter("totalobtainmarks7", totalobtainmarks7) :
                new ObjectParameter("totalobtainmarks7", typeof(decimal));
    
            var totalobtainmarks8Parameter = totalobtainmarks8.HasValue ?
                new ObjectParameter("totalobtainmarks8", totalobtainmarks8) :
                new ObjectParameter("totalobtainmarks8", typeof(decimal));
    
            var totalobtainmarks9Parameter = totalobtainmarks9.HasValue ?
                new ObjectParameter("totalobtainmarks9", totalobtainmarks9) :
                new ObjectParameter("totalobtainmarks9", typeof(decimal));
    
            var totalobtainmarks10Parameter = totalobtainmarks10.HasValue ?
                new ObjectParameter("totalobtainmarks10", totalobtainmarks10) :
                new ObjectParameter("totalobtainmarks10", typeof(decimal));
    
            var totalobtainmarks11Parameter = totalobtainmarks11.HasValue ?
                new ObjectParameter("totalobtainmarks11", totalobtainmarks11) :
                new ObjectParameter("totalobtainmarks11", typeof(decimal));
    
            var totalobtainmarks12Parameter = totalobtainmarks12.HasValue ?
                new ObjectParameter("totalobtainmarks12", totalobtainmarks12) :
                new ObjectParameter("totalobtainmarks12", typeof(decimal));
    
            var totalobtainmarks13Parameter = totalobtainmarks13.HasValue ?
                new ObjectParameter("totalobtainmarks13", totalobtainmarks13) :
                new ObjectParameter("totalobtainmarks13", typeof(decimal));
    
            var totalobtainmarks14Parameter = totalobtainmarks14.HasValue ?
                new ObjectParameter("totalobtainmarks14", totalobtainmarks14) :
                new ObjectParameter("totalobtainmarks14", typeof(decimal));
    
            var totalobtainmarks15Parameter = totalobtainmarks15.HasValue ?
                new ObjectParameter("totalobtainmarks15", totalobtainmarks15) :
                new ObjectParameter("totalobtainmarks15", typeof(decimal));
    
            var totalobtainmarks16Parameter = totalobtainmarks16.HasValue ?
                new ObjectParameter("totalobtainmarks16", totalobtainmarks16) :
                new ObjectParameter("totalobtainmarks16", typeof(decimal));
    
            var totalobtainmarks17Parameter = totalobtainmarks17.HasValue ?
                new ObjectParameter("totalobtainmarks17", totalobtainmarks17) :
                new ObjectParameter("totalobtainmarks17", typeof(decimal));
    
            var totalobtainmarks18Parameter = totalobtainmarks18.HasValue ?
                new ObjectParameter("totalobtainmarks18", totalobtainmarks18) :
                new ObjectParameter("totalobtainmarks18", typeof(decimal));
    
            var totalobtainmarks19Parameter = totalobtainmarks19.HasValue ?
                new ObjectParameter("totalobtainmarks19", totalobtainmarks19) :
                new ObjectParameter("totalobtainmarks19", typeof(decimal));
    
            var totalobtainmarks20Parameter = totalobtainmarks20.HasValue ?
                new ObjectParameter("totalobtainmarks20", totalobtainmarks20) :
                new ObjectParameter("totalobtainmarks20", typeof(decimal));
    
            var tatalobtainmarksParameter = tatalobtainmarks.HasValue ?
                new ObjectParameter("tatalobtainmarks", tatalobtainmarks) :
                new ObjectParameter("tatalobtainmarks", typeof(decimal));
    
            var totalWorkingDayParameter = totalWorkingDay.HasValue ?
                new ObjectParameter("TotalWorkingDay", totalWorkingDay) :
                new ObjectParameter("TotalWorkingDay", typeof(decimal));
    
            var totalPresentDayParameter = totalPresentDay.HasValue ?
                new ObjectParameter("totalPresentDay", totalPresentDay) :
                new ObjectParameter("totalPresentDay", typeof(decimal));
    
            var totalAbsentDayParameter = totalAbsentDay.HasValue ?
                new ObjectParameter("totalAbsentDay", totalAbsentDay) :
                new ObjectParameter("totalAbsentDay", typeof(decimal));
    
            var writtingParameter = writting != null ?
                new ObjectParameter("Writting", writting) :
                new ObjectParameter("Writting", typeof(string));
    
            var speakingParameter = speaking != null ?
                new ObjectParameter("Speaking", speaking) :
                new ObjectParameter("Speaking", typeof(string));
    
            var conductParameter = conduct != null ?
                new ObjectParameter("Conduct", conduct) :
                new ObjectParameter("Conduct", typeof(string));
    
            var neatnessParameter = neatness != null ?
                new ObjectParameter("Neatness", neatness) :
                new ObjectParameter("Neatness", typeof(string));
    
            var musicDanceParameter = musicDance != null ?
                new ObjectParameter("MusicDance", musicDance) :
                new ObjectParameter("MusicDance", typeof(string));
    
            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));
    
            var passFailParameter = passFail != null ?
                new ObjectParameter("PassFail", passFail) :
                new ObjectParameter("PassFail", typeof(string));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("Percentage", percentage) :
                new ObjectParameter("Percentage", typeof(decimal));
    
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var examtermParameter = examterm != null ?
                new ObjectParameter("Examterm", examterm) :
                new ObjectParameter("Examterm", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var rankParameter = rank.HasValue ?
                new ObjectParameter("Rank", rank) :
                new ObjectParameter("Rank", typeof(int));
    
            var col1Parameter = col1 != null ?
                new ObjectParameter("Col1", col1) :
                new ObjectParameter("Col1", typeof(string));
    
            var col2Parameter = col2 != null ?
                new ObjectParameter("Col2", col2) :
                new ObjectParameter("Col2", typeof(string));
    
            var col3Parameter = col3 != null ?
                new ObjectParameter("Col3", col3) :
                new ObjectParameter("Col3", typeof(string));
    
            var col4Parameter = col4 != null ?
                new ObjectParameter("Col4", col4) :
                new ObjectParameter("Col4", typeof(string));
    
            var col5Parameter = col5 != null ?
                new ObjectParameter("Col5", col5) :
                new ObjectParameter("Col5", typeof(string));
    
            var col6Parameter = col6 != null ?
                new ObjectParameter("Col6", col6) :
                new ObjectParameter("Col6", typeof(string));
    
            var col7Parameter = col7 != null ?
                new ObjectParameter("Col7", col7) :
                new ObjectParameter("Col7", typeof(string));
    
            var col8Parameter = col8 != null ?
                new ObjectParameter("Col8", col8) :
                new ObjectParameter("Col8", typeof(string));
    
            var col9Parameter = col9 != null ?
                new ObjectParameter("Col9", col9) :
                new ObjectParameter("Col9", typeof(string));
    
            var col10Parameter = col10 != null ?
                new ObjectParameter("Col10", col10) :
                new ObjectParameter("Col10", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertMidfirsttermOnlineView", studentIdParameter, namefieldParameter, class_stuParameter, rollParameter, sectionfieldParameter, subject1Parameter, subject2Parameter, subject3Parameter, subject4Parameter, subject5Parameter, subject6Parameter, subject7Parameter, subject8Parameter, subject9Parameter, subject10Parameter, subject11Parameter, subject12Parameter, subject13Parameter, subject14Parameter, subject15Parameter, subject16Parameter, subject17Parameter, subject18Parameter, subject19Parameter, subject20Parameter, totalMarksObtainParameter, pratical1Parameter, pratical2Parameter, pratical3Parameter, pratical4Parameter, pratical5Parameter, pratical6Parameter, pratical7Parameter, pratical8Parameter, pratical9Parameter, pratical10Parameter, pratical11Parameter, pratical12Parameter, pratical13Parameter, pratical14Parameter, pratical15Parameter, pratical16Parameter, pratical17Parameter, pratical18Parameter, pratical19Parameter, pratical20Parameter, totalpraticalParameter, totalobtainmarks1Parameter, totalobtainmarks2Parameter, totalobtainmarks3Parameter, totalobtainmarks4Parameter, totalobtainmarks5Parameter, totalobtainmarks6Parameter, totalobtainmarks7Parameter, totalobtainmarks8Parameter, totalobtainmarks9Parameter, totalobtainmarks10Parameter, totalobtainmarks11Parameter, totalobtainmarks12Parameter, totalobtainmarks13Parameter, totalobtainmarks14Parameter, totalobtainmarks15Parameter, totalobtainmarks16Parameter, totalobtainmarks17Parameter, totalobtainmarks18Parameter, totalobtainmarks19Parameter, totalobtainmarks20Parameter, tatalobtainmarksParameter, totalWorkingDayParameter, totalPresentDayParameter, totalAbsentDayParameter, writtingParameter, speakingParameter, conductParameter, neatnessParameter, musicDanceParameter, currentUserParameter, passFailParameter, percentageParameter, divisionParameter, examtermParameter, year_B_CParameter, rankParameter, col1Parameter, col2Parameter, col3Parameter, col4Parameter, col5Parameter, col6Parameter, col7Parameter, col8Parameter, col9Parameter, col10Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertMidfirsttermtempory(string studentId, string namefield, string class_stu, string roll, string sectionfield, string subject1, string subject2, string subject3, string subject4, string subject5, string subject6, string subject7, string subject8, string subject9, string subject10, string subject11, string subject12, string subject13, string subject14, string subject15, string subject16, string subject17, string subject18, string subject19, string subject20, Nullable<decimal> totalMarksObtain, string pratical1, string pratical2, string pratical3, string pratical4, string pratical5, string pratical6, string pratical7, string pratical8, string pratical9, string pratical10, string pratical11, string pratical12, string pratical13, string pratical14, string pratical15, string pratical16, string pratical17, string pratical18, string pratical19, string pratical20, Nullable<decimal> totalpratical, Nullable<decimal> totalobtainmarks1, Nullable<decimal> totalobtainmarks2, Nullable<decimal> totalobtainmarks3, Nullable<decimal> totalobtainmarks4, Nullable<decimal> totalobtainmarks5, Nullable<decimal> totalobtainmarks6, Nullable<decimal> totalobtainmarks7, Nullable<decimal> totalobtainmarks8, Nullable<decimal> totalobtainmarks9, Nullable<decimal> totalobtainmarks10, Nullable<decimal> totalobtainmarks11, Nullable<decimal> totalobtainmarks12, Nullable<decimal> totalobtainmarks13, Nullable<decimal> totalobtainmarks14, Nullable<decimal> totalobtainmarks15, Nullable<decimal> totalobtainmarks16, Nullable<decimal> totalobtainmarks17, Nullable<decimal> totalobtainmarks18, Nullable<decimal> totalobtainmarks19, Nullable<decimal> totalobtainmarks20, Nullable<decimal> tatalobtainmarks, Nullable<decimal> totalWorkingDay, Nullable<decimal> totalPresentDay, Nullable<decimal> totalAbsentDay, string writting, string speaking, string conduct, string neatness, string musicDance, string currentUser, string passFail, Nullable<decimal> percentage, string division, string examterm, string year_B_C, Nullable<int> rank, string col1, string col2, string col3, string col4, string col5, string col6, string col7, string col8, string col9, string col10, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var namefieldParameter = namefield != null ?
                new ObjectParameter("Namefield", namefield) :
                new ObjectParameter("Namefield", typeof(string));
    
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("Class_stu", class_stu) :
                new ObjectParameter("Class_stu", typeof(string));
    
            var rollParameter = roll != null ?
                new ObjectParameter("Roll", roll) :
                new ObjectParameter("Roll", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("Sectionfield", sectionfield) :
                new ObjectParameter("Sectionfield", typeof(string));
    
            var subject1Parameter = subject1 != null ?
                new ObjectParameter("Subject1", subject1) :
                new ObjectParameter("Subject1", typeof(string));
    
            var subject2Parameter = subject2 != null ?
                new ObjectParameter("Subject2", subject2) :
                new ObjectParameter("Subject2", typeof(string));
    
            var subject3Parameter = subject3 != null ?
                new ObjectParameter("Subject3", subject3) :
                new ObjectParameter("Subject3", typeof(string));
    
            var subject4Parameter = subject4 != null ?
                new ObjectParameter("Subject4", subject4) :
                new ObjectParameter("Subject4", typeof(string));
    
            var subject5Parameter = subject5 != null ?
                new ObjectParameter("Subject5", subject5) :
                new ObjectParameter("Subject5", typeof(string));
    
            var subject6Parameter = subject6 != null ?
                new ObjectParameter("Subject6", subject6) :
                new ObjectParameter("Subject6", typeof(string));
    
            var subject7Parameter = subject7 != null ?
                new ObjectParameter("Subject7", subject7) :
                new ObjectParameter("Subject7", typeof(string));
    
            var subject8Parameter = subject8 != null ?
                new ObjectParameter("Subject8", subject8) :
                new ObjectParameter("Subject8", typeof(string));
    
            var subject9Parameter = subject9 != null ?
                new ObjectParameter("Subject9", subject9) :
                new ObjectParameter("Subject9", typeof(string));
    
            var subject10Parameter = subject10 != null ?
                new ObjectParameter("Subject10", subject10) :
                new ObjectParameter("Subject10", typeof(string));
    
            var subject11Parameter = subject11 != null ?
                new ObjectParameter("Subject11", subject11) :
                new ObjectParameter("Subject11", typeof(string));
    
            var subject12Parameter = subject12 != null ?
                new ObjectParameter("Subject12", subject12) :
                new ObjectParameter("Subject12", typeof(string));
    
            var subject13Parameter = subject13 != null ?
                new ObjectParameter("Subject13", subject13) :
                new ObjectParameter("Subject13", typeof(string));
    
            var subject14Parameter = subject14 != null ?
                new ObjectParameter("Subject14", subject14) :
                new ObjectParameter("Subject14", typeof(string));
    
            var subject15Parameter = subject15 != null ?
                new ObjectParameter("Subject15", subject15) :
                new ObjectParameter("Subject15", typeof(string));
    
            var subject16Parameter = subject16 != null ?
                new ObjectParameter("Subject16", subject16) :
                new ObjectParameter("Subject16", typeof(string));
    
            var subject17Parameter = subject17 != null ?
                new ObjectParameter("Subject17", subject17) :
                new ObjectParameter("Subject17", typeof(string));
    
            var subject18Parameter = subject18 != null ?
                new ObjectParameter("Subject18", subject18) :
                new ObjectParameter("Subject18", typeof(string));
    
            var subject19Parameter = subject19 != null ?
                new ObjectParameter("Subject19", subject19) :
                new ObjectParameter("Subject19", typeof(string));
    
            var subject20Parameter = subject20 != null ?
                new ObjectParameter("Subject20", subject20) :
                new ObjectParameter("Subject20", typeof(string));
    
            var totalMarksObtainParameter = totalMarksObtain.HasValue ?
                new ObjectParameter("TotalMarksObtain", totalMarksObtain) :
                new ObjectParameter("TotalMarksObtain", typeof(decimal));
    
            var pratical1Parameter = pratical1 != null ?
                new ObjectParameter("pratical1", pratical1) :
                new ObjectParameter("pratical1", typeof(string));
    
            var pratical2Parameter = pratical2 != null ?
                new ObjectParameter("pratical2", pratical2) :
                new ObjectParameter("pratical2", typeof(string));
    
            var pratical3Parameter = pratical3 != null ?
                new ObjectParameter("pratical3", pratical3) :
                new ObjectParameter("pratical3", typeof(string));
    
            var pratical4Parameter = pratical4 != null ?
                new ObjectParameter("pratical4", pratical4) :
                new ObjectParameter("pratical4", typeof(string));
    
            var pratical5Parameter = pratical5 != null ?
                new ObjectParameter("pratical5", pratical5) :
                new ObjectParameter("pratical5", typeof(string));
    
            var pratical6Parameter = pratical6 != null ?
                new ObjectParameter("pratical6", pratical6) :
                new ObjectParameter("pratical6", typeof(string));
    
            var pratical7Parameter = pratical7 != null ?
                new ObjectParameter("pratical7", pratical7) :
                new ObjectParameter("pratical7", typeof(string));
    
            var pratical8Parameter = pratical8 != null ?
                new ObjectParameter("pratical8", pratical8) :
                new ObjectParameter("pratical8", typeof(string));
    
            var pratical9Parameter = pratical9 != null ?
                new ObjectParameter("pratical9", pratical9) :
                new ObjectParameter("pratical9", typeof(string));
    
            var pratical10Parameter = pratical10 != null ?
                new ObjectParameter("pratical10", pratical10) :
                new ObjectParameter("pratical10", typeof(string));
    
            var pratical11Parameter = pratical11 != null ?
                new ObjectParameter("pratical11", pratical11) :
                new ObjectParameter("pratical11", typeof(string));
    
            var pratical12Parameter = pratical12 != null ?
                new ObjectParameter("pratical12", pratical12) :
                new ObjectParameter("pratical12", typeof(string));
    
            var pratical13Parameter = pratical13 != null ?
                new ObjectParameter("pratical13", pratical13) :
                new ObjectParameter("pratical13", typeof(string));
    
            var pratical14Parameter = pratical14 != null ?
                new ObjectParameter("pratical14", pratical14) :
                new ObjectParameter("pratical14", typeof(string));
    
            var pratical15Parameter = pratical15 != null ?
                new ObjectParameter("pratical15", pratical15) :
                new ObjectParameter("pratical15", typeof(string));
    
            var pratical16Parameter = pratical16 != null ?
                new ObjectParameter("pratical16", pratical16) :
                new ObjectParameter("pratical16", typeof(string));
    
            var pratical17Parameter = pratical17 != null ?
                new ObjectParameter("pratical17", pratical17) :
                new ObjectParameter("pratical17", typeof(string));
    
            var pratical18Parameter = pratical18 != null ?
                new ObjectParameter("pratical18", pratical18) :
                new ObjectParameter("pratical18", typeof(string));
    
            var pratical19Parameter = pratical19 != null ?
                new ObjectParameter("pratical19", pratical19) :
                new ObjectParameter("pratical19", typeof(string));
    
            var pratical20Parameter = pratical20 != null ?
                new ObjectParameter("pratical20", pratical20) :
                new ObjectParameter("pratical20", typeof(string));
    
            var totalpraticalParameter = totalpratical.HasValue ?
                new ObjectParameter("totalpratical", totalpratical) :
                new ObjectParameter("totalpratical", typeof(decimal));
    
            var totalobtainmarks1Parameter = totalobtainmarks1.HasValue ?
                new ObjectParameter("totalobtainmarks1", totalobtainmarks1) :
                new ObjectParameter("totalobtainmarks1", typeof(decimal));
    
            var totalobtainmarks2Parameter = totalobtainmarks2.HasValue ?
                new ObjectParameter("totalobtainmarks2", totalobtainmarks2) :
                new ObjectParameter("totalobtainmarks2", typeof(decimal));
    
            var totalobtainmarks3Parameter = totalobtainmarks3.HasValue ?
                new ObjectParameter("totalobtainmarks3", totalobtainmarks3) :
                new ObjectParameter("totalobtainmarks3", typeof(decimal));
    
            var totalobtainmarks4Parameter = totalobtainmarks4.HasValue ?
                new ObjectParameter("totalobtainmarks4", totalobtainmarks4) :
                new ObjectParameter("totalobtainmarks4", typeof(decimal));
    
            var totalobtainmarks5Parameter = totalobtainmarks5.HasValue ?
                new ObjectParameter("totalobtainmarks5", totalobtainmarks5) :
                new ObjectParameter("totalobtainmarks5", typeof(decimal));
    
            var totalobtainmarks6Parameter = totalobtainmarks6.HasValue ?
                new ObjectParameter("totalobtainmarks6", totalobtainmarks6) :
                new ObjectParameter("totalobtainmarks6", typeof(decimal));
    
            var totalobtainmarks7Parameter = totalobtainmarks7.HasValue ?
                new ObjectParameter("totalobtainmarks7", totalobtainmarks7) :
                new ObjectParameter("totalobtainmarks7", typeof(decimal));
    
            var totalobtainmarks8Parameter = totalobtainmarks8.HasValue ?
                new ObjectParameter("totalobtainmarks8", totalobtainmarks8) :
                new ObjectParameter("totalobtainmarks8", typeof(decimal));
    
            var totalobtainmarks9Parameter = totalobtainmarks9.HasValue ?
                new ObjectParameter("totalobtainmarks9", totalobtainmarks9) :
                new ObjectParameter("totalobtainmarks9", typeof(decimal));
    
            var totalobtainmarks10Parameter = totalobtainmarks10.HasValue ?
                new ObjectParameter("totalobtainmarks10", totalobtainmarks10) :
                new ObjectParameter("totalobtainmarks10", typeof(decimal));
    
            var totalobtainmarks11Parameter = totalobtainmarks11.HasValue ?
                new ObjectParameter("totalobtainmarks11", totalobtainmarks11) :
                new ObjectParameter("totalobtainmarks11", typeof(decimal));
    
            var totalobtainmarks12Parameter = totalobtainmarks12.HasValue ?
                new ObjectParameter("totalobtainmarks12", totalobtainmarks12) :
                new ObjectParameter("totalobtainmarks12", typeof(decimal));
    
            var totalobtainmarks13Parameter = totalobtainmarks13.HasValue ?
                new ObjectParameter("totalobtainmarks13", totalobtainmarks13) :
                new ObjectParameter("totalobtainmarks13", typeof(decimal));
    
            var totalobtainmarks14Parameter = totalobtainmarks14.HasValue ?
                new ObjectParameter("totalobtainmarks14", totalobtainmarks14) :
                new ObjectParameter("totalobtainmarks14", typeof(decimal));
    
            var totalobtainmarks15Parameter = totalobtainmarks15.HasValue ?
                new ObjectParameter("totalobtainmarks15", totalobtainmarks15) :
                new ObjectParameter("totalobtainmarks15", typeof(decimal));
    
            var totalobtainmarks16Parameter = totalobtainmarks16.HasValue ?
                new ObjectParameter("totalobtainmarks16", totalobtainmarks16) :
                new ObjectParameter("totalobtainmarks16", typeof(decimal));
    
            var totalobtainmarks17Parameter = totalobtainmarks17.HasValue ?
                new ObjectParameter("totalobtainmarks17", totalobtainmarks17) :
                new ObjectParameter("totalobtainmarks17", typeof(decimal));
    
            var totalobtainmarks18Parameter = totalobtainmarks18.HasValue ?
                new ObjectParameter("totalobtainmarks18", totalobtainmarks18) :
                new ObjectParameter("totalobtainmarks18", typeof(decimal));
    
            var totalobtainmarks19Parameter = totalobtainmarks19.HasValue ?
                new ObjectParameter("totalobtainmarks19", totalobtainmarks19) :
                new ObjectParameter("totalobtainmarks19", typeof(decimal));
    
            var totalobtainmarks20Parameter = totalobtainmarks20.HasValue ?
                new ObjectParameter("totalobtainmarks20", totalobtainmarks20) :
                new ObjectParameter("totalobtainmarks20", typeof(decimal));
    
            var tatalobtainmarksParameter = tatalobtainmarks.HasValue ?
                new ObjectParameter("tatalobtainmarks", tatalobtainmarks) :
                new ObjectParameter("tatalobtainmarks", typeof(decimal));
    
            var totalWorkingDayParameter = totalWorkingDay.HasValue ?
                new ObjectParameter("TotalWorkingDay", totalWorkingDay) :
                new ObjectParameter("TotalWorkingDay", typeof(decimal));
    
            var totalPresentDayParameter = totalPresentDay.HasValue ?
                new ObjectParameter("totalPresentDay", totalPresentDay) :
                new ObjectParameter("totalPresentDay", typeof(decimal));
    
            var totalAbsentDayParameter = totalAbsentDay.HasValue ?
                new ObjectParameter("totalAbsentDay", totalAbsentDay) :
                new ObjectParameter("totalAbsentDay", typeof(decimal));
    
            var writtingParameter = writting != null ?
                new ObjectParameter("Writting", writting) :
                new ObjectParameter("Writting", typeof(string));
    
            var speakingParameter = speaking != null ?
                new ObjectParameter("Speaking", speaking) :
                new ObjectParameter("Speaking", typeof(string));
    
            var conductParameter = conduct != null ?
                new ObjectParameter("Conduct", conduct) :
                new ObjectParameter("Conduct", typeof(string));
    
            var neatnessParameter = neatness != null ?
                new ObjectParameter("Neatness", neatness) :
                new ObjectParameter("Neatness", typeof(string));
    
            var musicDanceParameter = musicDance != null ?
                new ObjectParameter("MusicDance", musicDance) :
                new ObjectParameter("MusicDance", typeof(string));
    
            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));
    
            var passFailParameter = passFail != null ?
                new ObjectParameter("PassFail", passFail) :
                new ObjectParameter("PassFail", typeof(string));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("Percentage", percentage) :
                new ObjectParameter("Percentage", typeof(decimal));
    
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var examtermParameter = examterm != null ?
                new ObjectParameter("Examterm", examterm) :
                new ObjectParameter("Examterm", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var rankParameter = rank.HasValue ?
                new ObjectParameter("Rank", rank) :
                new ObjectParameter("Rank", typeof(int));
    
            var col1Parameter = col1 != null ?
                new ObjectParameter("Col1", col1) :
                new ObjectParameter("Col1", typeof(string));
    
            var col2Parameter = col2 != null ?
                new ObjectParameter("Col2", col2) :
                new ObjectParameter("Col2", typeof(string));
    
            var col3Parameter = col3 != null ?
                new ObjectParameter("Col3", col3) :
                new ObjectParameter("Col3", typeof(string));
    
            var col4Parameter = col4 != null ?
                new ObjectParameter("Col4", col4) :
                new ObjectParameter("Col4", typeof(string));
    
            var col5Parameter = col5 != null ?
                new ObjectParameter("Col5", col5) :
                new ObjectParameter("Col5", typeof(string));
    
            var col6Parameter = col6 != null ?
                new ObjectParameter("Col6", col6) :
                new ObjectParameter("Col6", typeof(string));
    
            var col7Parameter = col7 != null ?
                new ObjectParameter("Col7", col7) :
                new ObjectParameter("Col7", typeof(string));
    
            var col8Parameter = col8 != null ?
                new ObjectParameter("Col8", col8) :
                new ObjectParameter("Col8", typeof(string));
    
            var col9Parameter = col9 != null ?
                new ObjectParameter("Col9", col9) :
                new ObjectParameter("Col9", typeof(string));
    
            var col10Parameter = col10 != null ?
                new ObjectParameter("Col10", col10) :
                new ObjectParameter("Col10", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertMidfirsttermtempory", studentIdParameter, namefieldParameter, class_stuParameter, rollParameter, sectionfieldParameter, subject1Parameter, subject2Parameter, subject3Parameter, subject4Parameter, subject5Parameter, subject6Parameter, subject7Parameter, subject8Parameter, subject9Parameter, subject10Parameter, subject11Parameter, subject12Parameter, subject13Parameter, subject14Parameter, subject15Parameter, subject16Parameter, subject17Parameter, subject18Parameter, subject19Parameter, subject20Parameter, totalMarksObtainParameter, pratical1Parameter, pratical2Parameter, pratical3Parameter, pratical4Parameter, pratical5Parameter, pratical6Parameter, pratical7Parameter, pratical8Parameter, pratical9Parameter, pratical10Parameter, pratical11Parameter, pratical12Parameter, pratical13Parameter, pratical14Parameter, pratical15Parameter, pratical16Parameter, pratical17Parameter, pratical18Parameter, pratical19Parameter, pratical20Parameter, totalpraticalParameter, totalobtainmarks1Parameter, totalobtainmarks2Parameter, totalobtainmarks3Parameter, totalobtainmarks4Parameter, totalobtainmarks5Parameter, totalobtainmarks6Parameter, totalobtainmarks7Parameter, totalobtainmarks8Parameter, totalobtainmarks9Parameter, totalobtainmarks10Parameter, totalobtainmarks11Parameter, totalobtainmarks12Parameter, totalobtainmarks13Parameter, totalobtainmarks14Parameter, totalobtainmarks15Parameter, totalobtainmarks16Parameter, totalobtainmarks17Parameter, totalobtainmarks18Parameter, totalobtainmarks19Parameter, totalobtainmarks20Parameter, tatalobtainmarksParameter, totalWorkingDayParameter, totalPresentDayParameter, totalAbsentDayParameter, writtingParameter, speakingParameter, conductParameter, neatnessParameter, musicDanceParameter, currentUserParameter, passFailParameter, percentageParameter, divisionParameter, examtermParameter, year_B_CParameter, rankParameter, col1Parameter, col2Parameter, col3Parameter, col4Parameter, col5Parameter, col6Parameter, col7Parameter, col8Parameter, col9Parameter, col10Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertmonthlybillPrintIssue(ObjectParameter tranNO, string invoiceNo, string nepaliDate, Nullable<System.DateTime> dateBill, string studentId, string accountheading, Nullable<decimal> amount, string accountcode, string groupheading, string billmonthlyNepali, string class_student, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var nepaliDateParameter = nepaliDate != null ?
                new ObjectParameter("NepaliDate", nepaliDate) :
                new ObjectParameter("NepaliDate", typeof(string));
    
            var dateBillParameter = dateBill.HasValue ?
                new ObjectParameter("dateBill", dateBill) :
                new ObjectParameter("dateBill", typeof(System.DateTime));
    
            var studentIdParameter = studentId != null ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(string));
    
            var accountheadingParameter = accountheading != null ?
                new ObjectParameter("accountheading", accountheading) :
                new ObjectParameter("accountheading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var accountcodeParameter = accountcode != null ?
                new ObjectParameter("accountcode", accountcode) :
                new ObjectParameter("accountcode", typeof(string));
    
            var groupheadingParameter = groupheading != null ?
                new ObjectParameter("groupheading", groupheading) :
                new ObjectParameter("groupheading", typeof(string));
    
            var billmonthlyNepaliParameter = billmonthlyNepali != null ?
                new ObjectParameter("billmonthlyNepali", billmonthlyNepali) :
                new ObjectParameter("billmonthlyNepali", typeof(string));
    
            var class_studentParameter = class_student != null ?
                new ObjectParameter("Class_student", class_student) :
                new ObjectParameter("Class_student", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertmonthlybillPrintIssue", tranNO, invoiceNoParameter, nepaliDateParameter, dateBillParameter, studentIdParameter, accountheadingParameter, amountParameter, accountcodeParameter, groupheadingParameter, billmonthlyNepaliParameter, class_studentParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertMonthlySalaryAdd(string staffIn, Nullable<decimal> preBalance, Nullable<decimal> nowSalary, Nullable<decimal> totalPay, string forMonth, ObjectParameter transNo, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var staffInParameter = staffIn != null ?
                new ObjectParameter("StaffIn", staffIn) :
                new ObjectParameter("StaffIn", typeof(string));
    
            var preBalanceParameter = preBalance.HasValue ?
                new ObjectParameter("PreBalance", preBalance) :
                new ObjectParameter("PreBalance", typeof(decimal));
    
            var nowSalaryParameter = nowSalary.HasValue ?
                new ObjectParameter("NowSalary", nowSalary) :
                new ObjectParameter("NowSalary", typeof(decimal));
    
            var totalPayParameter = totalPay.HasValue ?
                new ObjectParameter("TotalPay", totalPay) :
                new ObjectParameter("TotalPay", typeof(decimal));
    
            var forMonthParameter = forMonth != null ?
                new ObjectParameter("ForMonth", forMonth) :
                new ObjectParameter("ForMonth", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertMonthlySalaryAdd", staffInParameter, preBalanceParameter, nowSalaryParameter, totalPayParameter, forMonthParameter, transNo, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertmonthlystaffsalary(string staffId, Nullable<decimal> salaryhead1, Nullable<decimal> salaryhead2, Nullable<decimal> salaryhead3, Nullable<decimal> salaryhead4, Nullable<decimal> totalAmount, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var staffIdParameter = staffId != null ?
                new ObjectParameter("StaffId", staffId) :
                new ObjectParameter("StaffId", typeof(string));
    
            var salaryhead1Parameter = salaryhead1.HasValue ?
                new ObjectParameter("Salaryhead1", salaryhead1) :
                new ObjectParameter("Salaryhead1", typeof(decimal));
    
            var salaryhead2Parameter = salaryhead2.HasValue ?
                new ObjectParameter("Salaryhead2", salaryhead2) :
                new ObjectParameter("Salaryhead2", typeof(decimal));
    
            var salaryhead3Parameter = salaryhead3.HasValue ?
                new ObjectParameter("Salaryhead3", salaryhead3) :
                new ObjectParameter("Salaryhead3", typeof(decimal));
    
            var salaryhead4Parameter = salaryhead4.HasValue ?
                new ObjectParameter("Salaryhead4", salaryhead4) :
                new ObjectParameter("Salaryhead4", typeof(decimal));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertmonthlystaffsalary", staffIdParameter, salaryhead1Parameter, salaryhead2Parameter, salaryhead3Parameter, salaryhead4Parameter, totalAmountParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertPayment_Supplier(ObjectParameter pVNo, Nullable<System.DateTime> datefield, string supplierId, string companyName, string address, string panVat, string telephoneNo, string contactPerson, string mobile, string goodsType, Nullable<decimal> previousAmount, Nullable<decimal> todayPayment, Nullable<decimal> balanceAmont, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var datefieldParameter = datefield.HasValue ?
                new ObjectParameter("Datefield", datefield) :
                new ObjectParameter("Datefield", typeof(System.DateTime));
    
            var supplierIdParameter = supplierId != null ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var panVatParameter = panVat != null ?
                new ObjectParameter("PanVat", panVat) :
                new ObjectParameter("PanVat", typeof(string));
    
            var telephoneNoParameter = telephoneNo != null ?
                new ObjectParameter("TelephoneNo", telephoneNo) :
                new ObjectParameter("TelephoneNo", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var goodsTypeParameter = goodsType != null ?
                new ObjectParameter("GoodsType", goodsType) :
                new ObjectParameter("GoodsType", typeof(string));
    
            var previousAmountParameter = previousAmount.HasValue ?
                new ObjectParameter("PreviousAmount", previousAmount) :
                new ObjectParameter("PreviousAmount", typeof(decimal));
    
            var todayPaymentParameter = todayPayment.HasValue ?
                new ObjectParameter("todayPayment", todayPayment) :
                new ObjectParameter("todayPayment", typeof(decimal));
    
            var balanceAmontParameter = balanceAmont.HasValue ?
                new ObjectParameter("BalanceAmont", balanceAmont) :
                new ObjectParameter("BalanceAmont", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertPayment_Supplier", pVNo, datefieldParameter, supplierIdParameter, companyNameParameter, addressParameter, panVatParameter, telephoneNoParameter, contactPersonParameter, mobileParameter, goodsTypeParameter, previousAmountParameter, todayPaymentParameter, balanceAmontParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertProcessingReultTerm_Year(ObjectParameter intNo, string term, string year_B_C, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var termParameter = term != null ?
                new ObjectParameter("Term", term) :
                new ObjectParameter("Term", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertProcessingReultTerm_Year", intNo, termParameter, year_B_CParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_InsertRankStudent_Result> sp_InsertRankStudent(string studentid, Nullable<decimal> percentage, string examterm, string year_B_c, Nullable<int> rank, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("Studentid", studentid) :
                new ObjectParameter("Studentid", typeof(string));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("percentage", percentage) :
                new ObjectParameter("percentage", typeof(decimal));
    
            var examtermParameter = examterm != null ?
                new ObjectParameter("examterm", examterm) :
                new ObjectParameter("examterm", typeof(string));
    
            var year_B_cParameter = year_B_c != null ?
                new ObjectParameter("Year_B_c", year_B_c) :
                new ObjectParameter("Year_B_c", typeof(string));
    
            var rankParameter = rank.HasValue ?
                new ObjectParameter("Rank", rank) :
                new ObjectParameter("Rank", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsertRankStudent_Result>("sp_InsertRankStudent", studentidParameter, percentageParameter, examtermParameter, year_B_cParameter, rankParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_insertreadylivebillStaff(string staffid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var staffidParameter = staffid != null ?
                new ObjectParameter("staffid", staffid) :
                new ObjectParameter("staffid", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertreadylivebillStaff", staffidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_Insertreadyliveidmake(Nullable<int> studentid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid.HasValue ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insertreadyliveidmake", studentidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_InsertremarksresultDivision(ObjectParameter tranNo, string division, Nullable<decimal> f_Percentage, Nullable<decimal> t_Percentage, string remarks, string teacherRemarks, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var f_PercentageParameter = f_Percentage.HasValue ?
                new ObjectParameter("F_Percentage", f_Percentage) :
                new ObjectParameter("F_Percentage", typeof(decimal));
    
            var t_PercentageParameter = t_Percentage.HasValue ?
                new ObjectParameter("T_Percentage", t_Percentage) :
                new ObjectParameter("T_Percentage", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var teacherRemarksParameter = teacherRemarks != null ?
                new ObjectParameter("TeacherRemarks", teacherRemarks) :
                new ObjectParameter("TeacherRemarks", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertremarksresultDivision", tranNo, divisionParameter, f_PercentageParameter, t_PercentageParameter, remarksParameter, teacherRemarksParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertResultIndivusalClassEntry(string studentId, string name_field, string class_Stu, string sectionfield, string roll_Stu, string theoryMarks1, string particalMarks1, string theoryMarks2, string particalMarks2, string theoryMarks3, string particalMarks3, string theoryMarks4, string particalMarks4, string theoryMarks5, string particalMarks5, string theoryMarks6, string particalMarks6, string theoryMarks7, string particalMarks7, string theoryMarks8, string particalMarks8, string theoryMarks9, string particalMarks9, string theoryMarks10, string particalMarks10, string theoryMarks11, string particalMarks11, string theoryMarks12, string particalMarks12, string theoryMarks13, string particalMarks13, string theoryMarks14, string particalMarks14, string theoryMarks15, string particalMarks15, string theoryMarks16, string particalMarks16, string theoryMarks17, string particalMarks17, string theoryMarks18, string particalMarks18, string theoryMarks19, string particalMarks19, string theoryMarks20, string particalMarks20, string presentDay, string writting, string speaking, string conduct, string neatness, string music_Dance, string terms_Exan, string year_exam, string col1, string col2, string col3, string col4, string col5, string col6, string col7, string col8, string col9, string col10, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var name_fieldParameter = name_field != null ?
                new ObjectParameter("Name_field", name_field) :
                new ObjectParameter("Name_field", typeof(string));
    
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("Class_Stu", class_Stu) :
                new ObjectParameter("Class_Stu", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("Sectionfield", sectionfield) :
                new ObjectParameter("Sectionfield", typeof(string));
    
            var roll_StuParameter = roll_Stu != null ?
                new ObjectParameter("Roll_Stu", roll_Stu) :
                new ObjectParameter("Roll_Stu", typeof(string));
    
            var theoryMarks1Parameter = theoryMarks1 != null ?
                new ObjectParameter("TheoryMarks1", theoryMarks1) :
                new ObjectParameter("TheoryMarks1", typeof(string));
    
            var particalMarks1Parameter = particalMarks1 != null ?
                new ObjectParameter("ParticalMarks1", particalMarks1) :
                new ObjectParameter("ParticalMarks1", typeof(string));
    
            var theoryMarks2Parameter = theoryMarks2 != null ?
                new ObjectParameter("TheoryMarks2", theoryMarks2) :
                new ObjectParameter("TheoryMarks2", typeof(string));
    
            var particalMarks2Parameter = particalMarks2 != null ?
                new ObjectParameter("ParticalMarks2", particalMarks2) :
                new ObjectParameter("ParticalMarks2", typeof(string));
    
            var theoryMarks3Parameter = theoryMarks3 != null ?
                new ObjectParameter("TheoryMarks3", theoryMarks3) :
                new ObjectParameter("TheoryMarks3", typeof(string));
    
            var particalMarks3Parameter = particalMarks3 != null ?
                new ObjectParameter("ParticalMarks3", particalMarks3) :
                new ObjectParameter("ParticalMarks3", typeof(string));
    
            var theoryMarks4Parameter = theoryMarks4 != null ?
                new ObjectParameter("TheoryMarks4", theoryMarks4) :
                new ObjectParameter("TheoryMarks4", typeof(string));
    
            var particalMarks4Parameter = particalMarks4 != null ?
                new ObjectParameter("ParticalMarks4", particalMarks4) :
                new ObjectParameter("ParticalMarks4", typeof(string));
    
            var theoryMarks5Parameter = theoryMarks5 != null ?
                new ObjectParameter("TheoryMarks5", theoryMarks5) :
                new ObjectParameter("TheoryMarks5", typeof(string));
    
            var particalMarks5Parameter = particalMarks5 != null ?
                new ObjectParameter("ParticalMarks5", particalMarks5) :
                new ObjectParameter("ParticalMarks5", typeof(string));
    
            var theoryMarks6Parameter = theoryMarks6 != null ?
                new ObjectParameter("TheoryMarks6", theoryMarks6) :
                new ObjectParameter("TheoryMarks6", typeof(string));
    
            var particalMarks6Parameter = particalMarks6 != null ?
                new ObjectParameter("ParticalMarks6", particalMarks6) :
                new ObjectParameter("ParticalMarks6", typeof(string));
    
            var theoryMarks7Parameter = theoryMarks7 != null ?
                new ObjectParameter("TheoryMarks7", theoryMarks7) :
                new ObjectParameter("TheoryMarks7", typeof(string));
    
            var particalMarks7Parameter = particalMarks7 != null ?
                new ObjectParameter("ParticalMarks7", particalMarks7) :
                new ObjectParameter("ParticalMarks7", typeof(string));
    
            var theoryMarks8Parameter = theoryMarks8 != null ?
                new ObjectParameter("TheoryMarks8", theoryMarks8) :
                new ObjectParameter("TheoryMarks8", typeof(string));
    
            var particalMarks8Parameter = particalMarks8 != null ?
                new ObjectParameter("ParticalMarks8", particalMarks8) :
                new ObjectParameter("ParticalMarks8", typeof(string));
    
            var theoryMarks9Parameter = theoryMarks9 != null ?
                new ObjectParameter("TheoryMarks9", theoryMarks9) :
                new ObjectParameter("TheoryMarks9", typeof(string));
    
            var particalMarks9Parameter = particalMarks9 != null ?
                new ObjectParameter("ParticalMarks9", particalMarks9) :
                new ObjectParameter("ParticalMarks9", typeof(string));
    
            var theoryMarks10Parameter = theoryMarks10 != null ?
                new ObjectParameter("TheoryMarks10", theoryMarks10) :
                new ObjectParameter("TheoryMarks10", typeof(string));
    
            var particalMarks10Parameter = particalMarks10 != null ?
                new ObjectParameter("ParticalMarks10", particalMarks10) :
                new ObjectParameter("ParticalMarks10", typeof(string));
    
            var theoryMarks11Parameter = theoryMarks11 != null ?
                new ObjectParameter("TheoryMarks11", theoryMarks11) :
                new ObjectParameter("TheoryMarks11", typeof(string));
    
            var particalMarks11Parameter = particalMarks11 != null ?
                new ObjectParameter("ParticalMarks11", particalMarks11) :
                new ObjectParameter("ParticalMarks11", typeof(string));
    
            var theoryMarks12Parameter = theoryMarks12 != null ?
                new ObjectParameter("TheoryMarks12", theoryMarks12) :
                new ObjectParameter("TheoryMarks12", typeof(string));
    
            var particalMarks12Parameter = particalMarks12 != null ?
                new ObjectParameter("ParticalMarks12", particalMarks12) :
                new ObjectParameter("ParticalMarks12", typeof(string));
    
            var theoryMarks13Parameter = theoryMarks13 != null ?
                new ObjectParameter("TheoryMarks13", theoryMarks13) :
                new ObjectParameter("TheoryMarks13", typeof(string));
    
            var particalMarks13Parameter = particalMarks13 != null ?
                new ObjectParameter("ParticalMarks13", particalMarks13) :
                new ObjectParameter("ParticalMarks13", typeof(string));
    
            var theoryMarks14Parameter = theoryMarks14 != null ?
                new ObjectParameter("TheoryMarks14", theoryMarks14) :
                new ObjectParameter("TheoryMarks14", typeof(string));
    
            var particalMarks14Parameter = particalMarks14 != null ?
                new ObjectParameter("ParticalMarks14", particalMarks14) :
                new ObjectParameter("ParticalMarks14", typeof(string));
    
            var theoryMarks15Parameter = theoryMarks15 != null ?
                new ObjectParameter("TheoryMarks15", theoryMarks15) :
                new ObjectParameter("TheoryMarks15", typeof(string));
    
            var particalMarks15Parameter = particalMarks15 != null ?
                new ObjectParameter("ParticalMarks15", particalMarks15) :
                new ObjectParameter("ParticalMarks15", typeof(string));
    
            var theoryMarks16Parameter = theoryMarks16 != null ?
                new ObjectParameter("TheoryMarks16", theoryMarks16) :
                new ObjectParameter("TheoryMarks16", typeof(string));
    
            var particalMarks16Parameter = particalMarks16 != null ?
                new ObjectParameter("ParticalMarks16", particalMarks16) :
                new ObjectParameter("ParticalMarks16", typeof(string));
    
            var theoryMarks17Parameter = theoryMarks17 != null ?
                new ObjectParameter("TheoryMarks17", theoryMarks17) :
                new ObjectParameter("TheoryMarks17", typeof(string));
    
            var particalMarks17Parameter = particalMarks17 != null ?
                new ObjectParameter("ParticalMarks17", particalMarks17) :
                new ObjectParameter("ParticalMarks17", typeof(string));
    
            var theoryMarks18Parameter = theoryMarks18 != null ?
                new ObjectParameter("TheoryMarks18", theoryMarks18) :
                new ObjectParameter("TheoryMarks18", typeof(string));
    
            var particalMarks18Parameter = particalMarks18 != null ?
                new ObjectParameter("ParticalMarks18", particalMarks18) :
                new ObjectParameter("ParticalMarks18", typeof(string));
    
            var theoryMarks19Parameter = theoryMarks19 != null ?
                new ObjectParameter("TheoryMarks19", theoryMarks19) :
                new ObjectParameter("TheoryMarks19", typeof(string));
    
            var particalMarks19Parameter = particalMarks19 != null ?
                new ObjectParameter("ParticalMarks19", particalMarks19) :
                new ObjectParameter("ParticalMarks19", typeof(string));
    
            var theoryMarks20Parameter = theoryMarks20 != null ?
                new ObjectParameter("TheoryMarks20", theoryMarks20) :
                new ObjectParameter("TheoryMarks20", typeof(string));
    
            var particalMarks20Parameter = particalMarks20 != null ?
                new ObjectParameter("ParticalMarks20", particalMarks20) :
                new ObjectParameter("ParticalMarks20", typeof(string));
    
            var presentDayParameter = presentDay != null ?
                new ObjectParameter("PresentDay", presentDay) :
                new ObjectParameter("PresentDay", typeof(string));
    
            var writtingParameter = writting != null ?
                new ObjectParameter("Writting", writting) :
                new ObjectParameter("Writting", typeof(string));
    
            var speakingParameter = speaking != null ?
                new ObjectParameter("Speaking", speaking) :
                new ObjectParameter("Speaking", typeof(string));
    
            var conductParameter = conduct != null ?
                new ObjectParameter("Conduct", conduct) :
                new ObjectParameter("Conduct", typeof(string));
    
            var neatnessParameter = neatness != null ?
                new ObjectParameter("Neatness", neatness) :
                new ObjectParameter("Neatness", typeof(string));
    
            var music_DanceParameter = music_Dance != null ?
                new ObjectParameter("Music_Dance", music_Dance) :
                new ObjectParameter("Music_Dance", typeof(string));
    
            var terms_ExanParameter = terms_Exan != null ?
                new ObjectParameter("Terms_Exan", terms_Exan) :
                new ObjectParameter("Terms_Exan", typeof(string));
    
            var year_examParameter = year_exam != null ?
                new ObjectParameter("Year_exam", year_exam) :
                new ObjectParameter("Year_exam", typeof(string));
    
            var col1Parameter = col1 != null ?
                new ObjectParameter("Col1", col1) :
                new ObjectParameter("Col1", typeof(string));
    
            var col2Parameter = col2 != null ?
                new ObjectParameter("Col2", col2) :
                new ObjectParameter("Col2", typeof(string));
    
            var col3Parameter = col3 != null ?
                new ObjectParameter("Col3", col3) :
                new ObjectParameter("Col3", typeof(string));
    
            var col4Parameter = col4 != null ?
                new ObjectParameter("Col4", col4) :
                new ObjectParameter("Col4", typeof(string));
    
            var col5Parameter = col5 != null ?
                new ObjectParameter("Col5", col5) :
                new ObjectParameter("Col5", typeof(string));
    
            var col6Parameter = col6 != null ?
                new ObjectParameter("Col6", col6) :
                new ObjectParameter("Col6", typeof(string));
    
            var col7Parameter = col7 != null ?
                new ObjectParameter("Col7", col7) :
                new ObjectParameter("Col7", typeof(string));
    
            var col8Parameter = col8 != null ?
                new ObjectParameter("Col8", col8) :
                new ObjectParameter("Col8", typeof(string));
    
            var col9Parameter = col9 != null ?
                new ObjectParameter("Col9", col9) :
                new ObjectParameter("Col9", typeof(string));
    
            var col10Parameter = col10 != null ?
                new ObjectParameter("Col10", col10) :
                new ObjectParameter("Col10", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertResultIndivusalClassEntry", studentIdParameter, name_fieldParameter, class_StuParameter, sectionfieldParameter, roll_StuParameter, theoryMarks1Parameter, particalMarks1Parameter, theoryMarks2Parameter, particalMarks2Parameter, theoryMarks3Parameter, particalMarks3Parameter, theoryMarks4Parameter, particalMarks4Parameter, theoryMarks5Parameter, particalMarks5Parameter, theoryMarks6Parameter, particalMarks6Parameter, theoryMarks7Parameter, particalMarks7Parameter, theoryMarks8Parameter, particalMarks8Parameter, theoryMarks9Parameter, particalMarks9Parameter, theoryMarks10Parameter, particalMarks10Parameter, theoryMarks11Parameter, particalMarks11Parameter, theoryMarks12Parameter, particalMarks12Parameter, theoryMarks13Parameter, particalMarks13Parameter, theoryMarks14Parameter, particalMarks14Parameter, theoryMarks15Parameter, particalMarks15Parameter, theoryMarks16Parameter, particalMarks16Parameter, theoryMarks17Parameter, particalMarks17Parameter, theoryMarks18Parameter, particalMarks18Parameter, theoryMarks19Parameter, particalMarks19Parameter, theoryMarks20Parameter, particalMarks20Parameter, presentDayParameter, writtingParameter, speakingParameter, conductParameter, neatnessParameter, music_DanceParameter, terms_ExanParameter, year_examParameter, col1Parameter, col2Parameter, col3Parameter, col4Parameter, col5Parameter, col6Parameter, col7Parameter, col8Parameter, col9Parameter, col10Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertResultIndivusalClassEntryTemp(string studentId, string name_field, string class_Stu, string sectionfield, string roll_Stu, string theoryMarks1, string particalMarks1, string theoryMarks2, string particalMarks2, string theoryMarks3, string particalMarks3, string theoryMarks4, string particalMarks4, string theoryMarks5, string particalMarks5, string theoryMarks6, string particalMarks6, string theoryMarks7, string particalMarks7, string theoryMarks8, string particalMarks8, string theoryMarks9, string particalMarks9, string theoryMarks10, string particalMarks10, string theoryMarks11, string particalMarks11, string theoryMarks12, string particalMarks12, string theoryMarks13, string particalMarks13, string theoryMarks14, string particalMarks14, string theoryMarks15, string particalMarks15, string theoryMarks16, string particalMarks16, string theoryMarks17, string particalMarks17, string theoryMarks18, string particalMarks18, string theoryMarks19, string particalMarks19, string theoryMarks20, string particalMarks20, string presentDay, string writting, string speaking, string conduct, string neatness, string music_Dance, string terms_Exan, string year_exam, string col1, string col2, string col3, string col4, string col5, string col6, string col7, string col8, string col9, string col10, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var name_fieldParameter = name_field != null ?
                new ObjectParameter("Name_field", name_field) :
                new ObjectParameter("Name_field", typeof(string));
    
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("Class_Stu", class_Stu) :
                new ObjectParameter("Class_Stu", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("Sectionfield", sectionfield) :
                new ObjectParameter("Sectionfield", typeof(string));
    
            var roll_StuParameter = roll_Stu != null ?
                new ObjectParameter("Roll_Stu", roll_Stu) :
                new ObjectParameter("Roll_Stu", typeof(string));
    
            var theoryMarks1Parameter = theoryMarks1 != null ?
                new ObjectParameter("TheoryMarks1", theoryMarks1) :
                new ObjectParameter("TheoryMarks1", typeof(string));
    
            var particalMarks1Parameter = particalMarks1 != null ?
                new ObjectParameter("ParticalMarks1", particalMarks1) :
                new ObjectParameter("ParticalMarks1", typeof(string));
    
            var theoryMarks2Parameter = theoryMarks2 != null ?
                new ObjectParameter("TheoryMarks2", theoryMarks2) :
                new ObjectParameter("TheoryMarks2", typeof(string));
    
            var particalMarks2Parameter = particalMarks2 != null ?
                new ObjectParameter("ParticalMarks2", particalMarks2) :
                new ObjectParameter("ParticalMarks2", typeof(string));
    
            var theoryMarks3Parameter = theoryMarks3 != null ?
                new ObjectParameter("TheoryMarks3", theoryMarks3) :
                new ObjectParameter("TheoryMarks3", typeof(string));
    
            var particalMarks3Parameter = particalMarks3 != null ?
                new ObjectParameter("ParticalMarks3", particalMarks3) :
                new ObjectParameter("ParticalMarks3", typeof(string));
    
            var theoryMarks4Parameter = theoryMarks4 != null ?
                new ObjectParameter("TheoryMarks4", theoryMarks4) :
                new ObjectParameter("TheoryMarks4", typeof(string));
    
            var particalMarks4Parameter = particalMarks4 != null ?
                new ObjectParameter("ParticalMarks4", particalMarks4) :
                new ObjectParameter("ParticalMarks4", typeof(string));
    
            var theoryMarks5Parameter = theoryMarks5 != null ?
                new ObjectParameter("TheoryMarks5", theoryMarks5) :
                new ObjectParameter("TheoryMarks5", typeof(string));
    
            var particalMarks5Parameter = particalMarks5 != null ?
                new ObjectParameter("ParticalMarks5", particalMarks5) :
                new ObjectParameter("ParticalMarks5", typeof(string));
    
            var theoryMarks6Parameter = theoryMarks6 != null ?
                new ObjectParameter("TheoryMarks6", theoryMarks6) :
                new ObjectParameter("TheoryMarks6", typeof(string));
    
            var particalMarks6Parameter = particalMarks6 != null ?
                new ObjectParameter("ParticalMarks6", particalMarks6) :
                new ObjectParameter("ParticalMarks6", typeof(string));
    
            var theoryMarks7Parameter = theoryMarks7 != null ?
                new ObjectParameter("TheoryMarks7", theoryMarks7) :
                new ObjectParameter("TheoryMarks7", typeof(string));
    
            var particalMarks7Parameter = particalMarks7 != null ?
                new ObjectParameter("ParticalMarks7", particalMarks7) :
                new ObjectParameter("ParticalMarks7", typeof(string));
    
            var theoryMarks8Parameter = theoryMarks8 != null ?
                new ObjectParameter("TheoryMarks8", theoryMarks8) :
                new ObjectParameter("TheoryMarks8", typeof(string));
    
            var particalMarks8Parameter = particalMarks8 != null ?
                new ObjectParameter("ParticalMarks8", particalMarks8) :
                new ObjectParameter("ParticalMarks8", typeof(string));
    
            var theoryMarks9Parameter = theoryMarks9 != null ?
                new ObjectParameter("TheoryMarks9", theoryMarks9) :
                new ObjectParameter("TheoryMarks9", typeof(string));
    
            var particalMarks9Parameter = particalMarks9 != null ?
                new ObjectParameter("ParticalMarks9", particalMarks9) :
                new ObjectParameter("ParticalMarks9", typeof(string));
    
            var theoryMarks10Parameter = theoryMarks10 != null ?
                new ObjectParameter("TheoryMarks10", theoryMarks10) :
                new ObjectParameter("TheoryMarks10", typeof(string));
    
            var particalMarks10Parameter = particalMarks10 != null ?
                new ObjectParameter("ParticalMarks10", particalMarks10) :
                new ObjectParameter("ParticalMarks10", typeof(string));
    
            var theoryMarks11Parameter = theoryMarks11 != null ?
                new ObjectParameter("TheoryMarks11", theoryMarks11) :
                new ObjectParameter("TheoryMarks11", typeof(string));
    
            var particalMarks11Parameter = particalMarks11 != null ?
                new ObjectParameter("ParticalMarks11", particalMarks11) :
                new ObjectParameter("ParticalMarks11", typeof(string));
    
            var theoryMarks12Parameter = theoryMarks12 != null ?
                new ObjectParameter("TheoryMarks12", theoryMarks12) :
                new ObjectParameter("TheoryMarks12", typeof(string));
    
            var particalMarks12Parameter = particalMarks12 != null ?
                new ObjectParameter("ParticalMarks12", particalMarks12) :
                new ObjectParameter("ParticalMarks12", typeof(string));
    
            var theoryMarks13Parameter = theoryMarks13 != null ?
                new ObjectParameter("TheoryMarks13", theoryMarks13) :
                new ObjectParameter("TheoryMarks13", typeof(string));
    
            var particalMarks13Parameter = particalMarks13 != null ?
                new ObjectParameter("ParticalMarks13", particalMarks13) :
                new ObjectParameter("ParticalMarks13", typeof(string));
    
            var theoryMarks14Parameter = theoryMarks14 != null ?
                new ObjectParameter("TheoryMarks14", theoryMarks14) :
                new ObjectParameter("TheoryMarks14", typeof(string));
    
            var particalMarks14Parameter = particalMarks14 != null ?
                new ObjectParameter("ParticalMarks14", particalMarks14) :
                new ObjectParameter("ParticalMarks14", typeof(string));
    
            var theoryMarks15Parameter = theoryMarks15 != null ?
                new ObjectParameter("TheoryMarks15", theoryMarks15) :
                new ObjectParameter("TheoryMarks15", typeof(string));
    
            var particalMarks15Parameter = particalMarks15 != null ?
                new ObjectParameter("ParticalMarks15", particalMarks15) :
                new ObjectParameter("ParticalMarks15", typeof(string));
    
            var theoryMarks16Parameter = theoryMarks16 != null ?
                new ObjectParameter("TheoryMarks16", theoryMarks16) :
                new ObjectParameter("TheoryMarks16", typeof(string));
    
            var particalMarks16Parameter = particalMarks16 != null ?
                new ObjectParameter("ParticalMarks16", particalMarks16) :
                new ObjectParameter("ParticalMarks16", typeof(string));
    
            var theoryMarks17Parameter = theoryMarks17 != null ?
                new ObjectParameter("TheoryMarks17", theoryMarks17) :
                new ObjectParameter("TheoryMarks17", typeof(string));
    
            var particalMarks17Parameter = particalMarks17 != null ?
                new ObjectParameter("ParticalMarks17", particalMarks17) :
                new ObjectParameter("ParticalMarks17", typeof(string));
    
            var theoryMarks18Parameter = theoryMarks18 != null ?
                new ObjectParameter("TheoryMarks18", theoryMarks18) :
                new ObjectParameter("TheoryMarks18", typeof(string));
    
            var particalMarks18Parameter = particalMarks18 != null ?
                new ObjectParameter("ParticalMarks18", particalMarks18) :
                new ObjectParameter("ParticalMarks18", typeof(string));
    
            var theoryMarks19Parameter = theoryMarks19 != null ?
                new ObjectParameter("TheoryMarks19", theoryMarks19) :
                new ObjectParameter("TheoryMarks19", typeof(string));
    
            var particalMarks19Parameter = particalMarks19 != null ?
                new ObjectParameter("ParticalMarks19", particalMarks19) :
                new ObjectParameter("ParticalMarks19", typeof(string));
    
            var theoryMarks20Parameter = theoryMarks20 != null ?
                new ObjectParameter("TheoryMarks20", theoryMarks20) :
                new ObjectParameter("TheoryMarks20", typeof(string));
    
            var particalMarks20Parameter = particalMarks20 != null ?
                new ObjectParameter("ParticalMarks20", particalMarks20) :
                new ObjectParameter("ParticalMarks20", typeof(string));
    
            var presentDayParameter = presentDay != null ?
                new ObjectParameter("PresentDay", presentDay) :
                new ObjectParameter("PresentDay", typeof(string));
    
            var writtingParameter = writting != null ?
                new ObjectParameter("Writting", writting) :
                new ObjectParameter("Writting", typeof(string));
    
            var speakingParameter = speaking != null ?
                new ObjectParameter("Speaking", speaking) :
                new ObjectParameter("Speaking", typeof(string));
    
            var conductParameter = conduct != null ?
                new ObjectParameter("Conduct", conduct) :
                new ObjectParameter("Conduct", typeof(string));
    
            var neatnessParameter = neatness != null ?
                new ObjectParameter("Neatness", neatness) :
                new ObjectParameter("Neatness", typeof(string));
    
            var music_DanceParameter = music_Dance != null ?
                new ObjectParameter("Music_Dance", music_Dance) :
                new ObjectParameter("Music_Dance", typeof(string));
    
            var terms_ExanParameter = terms_Exan != null ?
                new ObjectParameter("Terms_Exan", terms_Exan) :
                new ObjectParameter("Terms_Exan", typeof(string));
    
            var year_examParameter = year_exam != null ?
                new ObjectParameter("Year_exam", year_exam) :
                new ObjectParameter("Year_exam", typeof(string));
    
            var col1Parameter = col1 != null ?
                new ObjectParameter("Col1", col1) :
                new ObjectParameter("Col1", typeof(string));
    
            var col2Parameter = col2 != null ?
                new ObjectParameter("Col2", col2) :
                new ObjectParameter("Col2", typeof(string));
    
            var col3Parameter = col3 != null ?
                new ObjectParameter("Col3", col3) :
                new ObjectParameter("Col3", typeof(string));
    
            var col4Parameter = col4 != null ?
                new ObjectParameter("Col4", col4) :
                new ObjectParameter("Col4", typeof(string));
    
            var col5Parameter = col5 != null ?
                new ObjectParameter("Col5", col5) :
                new ObjectParameter("Col5", typeof(string));
    
            var col6Parameter = col6 != null ?
                new ObjectParameter("Col6", col6) :
                new ObjectParameter("Col6", typeof(string));
    
            var col7Parameter = col7 != null ?
                new ObjectParameter("Col7", col7) :
                new ObjectParameter("Col7", typeof(string));
    
            var col8Parameter = col8 != null ?
                new ObjectParameter("Col8", col8) :
                new ObjectParameter("Col8", typeof(string));
    
            var col9Parameter = col9 != null ?
                new ObjectParameter("Col9", col9) :
                new ObjectParameter("Col9", typeof(string));
    
            var col10Parameter = col10 != null ?
                new ObjectParameter("Col10", col10) :
                new ObjectParameter("Col10", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertResultIndivusalClassEntryTemp", studentIdParameter, name_fieldParameter, class_StuParameter, sectionfieldParameter, roll_StuParameter, theoryMarks1Parameter, particalMarks1Parameter, theoryMarks2Parameter, particalMarks2Parameter, theoryMarks3Parameter, particalMarks3Parameter, theoryMarks4Parameter, particalMarks4Parameter, theoryMarks5Parameter, particalMarks5Parameter, theoryMarks6Parameter, particalMarks6Parameter, theoryMarks7Parameter, particalMarks7Parameter, theoryMarks8Parameter, particalMarks8Parameter, theoryMarks9Parameter, particalMarks9Parameter, theoryMarks10Parameter, particalMarks10Parameter, theoryMarks11Parameter, particalMarks11Parameter, theoryMarks12Parameter, particalMarks12Parameter, theoryMarks13Parameter, particalMarks13Parameter, theoryMarks14Parameter, particalMarks14Parameter, theoryMarks15Parameter, particalMarks15Parameter, theoryMarks16Parameter, particalMarks16Parameter, theoryMarks17Parameter, particalMarks17Parameter, theoryMarks18Parameter, particalMarks18Parameter, theoryMarks19Parameter, particalMarks19Parameter, theoryMarks20Parameter, particalMarks20Parameter, presentDayParameter, writtingParameter, speakingParameter, conductParameter, neatnessParameter, music_DanceParameter, terms_ExanParameter, year_examParameter, col1Parameter, col2Parameter, col3Parameter, col4Parameter, col5Parameter, col6Parameter, col7Parameter, col8Parameter, col9Parameter, col10Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertreturnbooks(ObjectParameter transNo, string studentId, string booksCode, string title, string authorsName, string edition, Nullable<System.DateTime> issueDate, Nullable<System.DateTime> returnDate, Nullable<decimal> delayfine, Nullable<decimal> lostbooks, Nullable<decimal> booksNotReturn, string receiveby, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(string));
    
            var booksCodeParameter = booksCode != null ?
                new ObjectParameter("BooksCode", booksCode) :
                new ObjectParameter("BooksCode", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var authorsNameParameter = authorsName != null ?
                new ObjectParameter("AuthorsName", authorsName) :
                new ObjectParameter("AuthorsName", typeof(string));
    
            var editionParameter = edition != null ?
                new ObjectParameter("Edition", edition) :
                new ObjectParameter("Edition", typeof(string));
    
            var issueDateParameter = issueDate.HasValue ?
                new ObjectParameter("IssueDate", issueDate) :
                new ObjectParameter("IssueDate", typeof(System.DateTime));
    
            var returnDateParameter = returnDate.HasValue ?
                new ObjectParameter("ReturnDate", returnDate) :
                new ObjectParameter("ReturnDate", typeof(System.DateTime));
    
            var delayfineParameter = delayfine.HasValue ?
                new ObjectParameter("Delayfine", delayfine) :
                new ObjectParameter("Delayfine", typeof(decimal));
    
            var lostbooksParameter = lostbooks.HasValue ?
                new ObjectParameter("lostbooks", lostbooks) :
                new ObjectParameter("lostbooks", typeof(decimal));
    
            var booksNotReturnParameter = booksNotReturn.HasValue ?
                new ObjectParameter("BooksNotReturn", booksNotReturn) :
                new ObjectParameter("BooksNotReturn", typeof(decimal));
    
            var receivebyParameter = receiveby != null ?
                new ObjectParameter("Receiveby", receiveby) :
                new ObjectParameter("Receiveby", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertreturnbooks", transNo, studentIdParameter, booksCodeParameter, titleParameter, authorsNameParameter, editionParameter, issueDateParameter, returnDateParameter, delayfineParameter, lostbooksParameter, booksNotReturnParameter, receivebyParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertSalaryHeadingDetail(ObjectParameter tranno, string staffHeading, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var staffHeadingParameter = staffHeading != null ?
                new ObjectParameter("StaffHeading", staffHeading) :
                new ObjectParameter("StaffHeading", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertSalaryHeadingDetail", tranno, staffHeadingParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertSaloko(string potha, string jhal, ObjectParameter transNo, string groupUser, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var pothaParameter = potha != null ?
                new ObjectParameter("Potha", potha) :
                new ObjectParameter("Potha", typeof(string));
    
            var jhalParameter = jhal != null ?
                new ObjectParameter("Jhal", jhal) :
                new ObjectParameter("Jhal", typeof(string));
    
            var groupUserParameter = groupUser != null ?
                new ObjectParameter("GroupUser", groupUser) :
                new ObjectParameter("GroupUser", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertSaloko", pothaParameter, jhalParameter, transNo, groupUserParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_insertsetholiday(ObjectParameter transno, Nullable<System.DateTime> datevalue, string nepal, string months, string remarks, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var datevalueParameter = datevalue.HasValue ?
                new ObjectParameter("Datevalue", datevalue) :
                new ObjectParameter("Datevalue", typeof(System.DateTime));
    
            var nepalParameter = nepal != null ?
                new ObjectParameter("Nepal", nepal) :
                new ObjectParameter("Nepal", typeof(string));
    
            var monthsParameter = months != null ?
                new ObjectParameter("Months", months) :
                new ObjectParameter("Months", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertsetholiday", transno, datevalueParameter, nepalParameter, monthsParameter, remarksParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_InsertSlokoPrintToo(ObjectParameter tranNo, string seconName, string documentType, string dcoumnetDetail, Nullable<int> condition, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var seconNameParameter = seconName != null ?
                new ObjectParameter("SeconName", seconName) :
                new ObjectParameter("SeconName", typeof(string));
    
            var documentTypeParameter = documentType != null ?
                new ObjectParameter("documentType", documentType) :
                new ObjectParameter("documentType", typeof(string));
    
            var dcoumnetDetailParameter = dcoumnetDetail != null ?
                new ObjectParameter("DcoumnetDetail", dcoumnetDetail) :
                new ObjectParameter("DcoumnetDetail", typeof(string));
    
            var conditionParameter = condition.HasValue ?
                new ObjectParameter("Condition", condition) :
                new ObjectParameter("Condition", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertSlokoPrintToo", tranNo, seconNameParameter, documentTypeParameter, dcoumnetDetailParameter, conditionParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertStaffcasualleav(ObjectParameter transno, string stafid, Nullable<System.DateTime> datevalue, Nullable<decimal> totalAnualLeave, Nullable<decimal> todayCasual, Nullable<decimal> remaincasual, string remarks, string approvedby, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var stafidParameter = stafid != null ?
                new ObjectParameter("Stafid", stafid) :
                new ObjectParameter("Stafid", typeof(string));
    
            var datevalueParameter = datevalue.HasValue ?
                new ObjectParameter("Datevalue", datevalue) :
                new ObjectParameter("Datevalue", typeof(System.DateTime));
    
            var totalAnualLeaveParameter = totalAnualLeave.HasValue ?
                new ObjectParameter("TotalAnualLeave", totalAnualLeave) :
                new ObjectParameter("TotalAnualLeave", typeof(decimal));
    
            var todayCasualParameter = todayCasual.HasValue ?
                new ObjectParameter("TodayCasual", todayCasual) :
                new ObjectParameter("TodayCasual", typeof(decimal));
    
            var remaincasualParameter = remaincasual.HasValue ?
                new ObjectParameter("remaincasual", remaincasual) :
                new ObjectParameter("remaincasual", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var approvedbyParameter = approvedby != null ?
                new ObjectParameter("Approvedby", approvedby) :
                new ObjectParameter("Approvedby", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertStaffcasualleav", transno, stafidParameter, datevalueParameter, totalAnualLeaveParameter, todayCasualParameter, remaincasualParameter, remarksParameter, approvedbyParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertStaffinformation(string staffName, string addTemp, string addPerma, string mobile, string earthNo, string qualification, string otherQualification, string expriences, string specialSubject, string joinDate, string citizenshipNo, string issueFrom, Nullable<System.DateTime> birthDate, string designation, string jobCardNo, string staffPhotographPath, Nullable<decimal> balanceAmount, string groupStaff, string bina, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var staffNameParameter = staffName != null ?
                new ObjectParameter("StaffName", staffName) :
                new ObjectParameter("StaffName", typeof(string));
    
            var addTempParameter = addTemp != null ?
                new ObjectParameter("AddTemp", addTemp) :
                new ObjectParameter("AddTemp", typeof(string));
    
            var addPermaParameter = addPerma != null ?
                new ObjectParameter("AddPerma", addPerma) :
                new ObjectParameter("AddPerma", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var earthNoParameter = earthNo != null ?
                new ObjectParameter("EarthNo", earthNo) :
                new ObjectParameter("EarthNo", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("Qualification", qualification) :
                new ObjectParameter("Qualification", typeof(string));
    
            var otherQualificationParameter = otherQualification != null ?
                new ObjectParameter("OtherQualification", otherQualification) :
                new ObjectParameter("OtherQualification", typeof(string));
    
            var expriencesParameter = expriences != null ?
                new ObjectParameter("Expriences", expriences) :
                new ObjectParameter("Expriences", typeof(string));
    
            var specialSubjectParameter = specialSubject != null ?
                new ObjectParameter("SpecialSubject", specialSubject) :
                new ObjectParameter("SpecialSubject", typeof(string));
    
            var joinDateParameter = joinDate != null ?
                new ObjectParameter("JoinDate", joinDate) :
                new ObjectParameter("JoinDate", typeof(string));
    
            var citizenshipNoParameter = citizenshipNo != null ?
                new ObjectParameter("CitizenshipNo", citizenshipNo) :
                new ObjectParameter("CitizenshipNo", typeof(string));
    
            var issueFromParameter = issueFrom != null ?
                new ObjectParameter("IssueFrom", issueFrom) :
                new ObjectParameter("IssueFrom", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var jobCardNoParameter = jobCardNo != null ?
                new ObjectParameter("JobCardNo", jobCardNo) :
                new ObjectParameter("JobCardNo", typeof(string));
    
            var staffPhotographPathParameter = staffPhotographPath != null ?
                new ObjectParameter("StaffPhotographPath", staffPhotographPath) :
                new ObjectParameter("StaffPhotographPath", typeof(string));
    
            var balanceAmountParameter = balanceAmount.HasValue ?
                new ObjectParameter("BalanceAmount", balanceAmount) :
                new ObjectParameter("BalanceAmount", typeof(decimal));
    
            var groupStaffParameter = groupStaff != null ?
                new ObjectParameter("GroupStaff", groupStaff) :
                new ObjectParameter("GroupStaff", typeof(string));
    
            var binaParameter = bina != null ?
                new ObjectParameter("bina", bina) :
                new ObjectParameter("bina", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertStaffinformation", staffNameParameter, addTempParameter, addPermaParameter, mobileParameter, earthNoParameter, qualificationParameter, otherQualificationParameter, expriencesParameter, specialSubjectParameter, joinDateParameter, citizenshipNoParameter, issueFromParameter, birthDateParameter, designationParameter, jobCardNoParameter, staffPhotographPathParameter, balanceAmountParameter, groupStaffParameter, binaParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertStaffmonthlyindivusal(string stafid, string billHeading, Nullable<decimal> amount, ObjectParameter tranNo, string accountheading, string accountCode, string groupHeading, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var stafidParameter = stafid != null ?
                new ObjectParameter("Stafid", stafid) :
                new ObjectParameter("Stafid", typeof(string));
    
            var billHeadingParameter = billHeading != null ?
                new ObjectParameter("billHeading", billHeading) :
                new ObjectParameter("billHeading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var accountheadingParameter = accountheading != null ?
                new ObjectParameter("Accountheading", accountheading) :
                new ObjectParameter("Accountheading", typeof(string));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var groupHeadingParameter = groupHeading != null ?
                new ObjectParameter("GroupHeading", groupHeading) :
                new ObjectParameter("GroupHeading", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertStaffmonthlyindivusal", stafidParameter, billHeadingParameter, amountParameter, tranNo, accountheadingParameter, accountCodeParameter, groupHeadingParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_insertstaffsalaryformatgov(string staff, string staffname, string designation, Nullable<decimal> salaryScale, string grade, Nullable<decimal> gradeamount, Nullable<decimal> perincreament1, Nullable<decimal> total1, Nullable<decimal> reduceincrement, Nullable<decimal> total2, Nullable<decimal> allowance1, Nullable<decimal> schoolAllowance, Nullable<decimal> total3, Nullable<decimal> insurance, Nullable<decimal> total4, Nullable<decimal> taxamount, Nullable<decimal> peski, Nullable<decimal> totalreduce, Nullable<decimal> finalAmount, string other1, string other2, string other3, string other4, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var staffParameter = staff != null ?
                new ObjectParameter("staff", staff) :
                new ObjectParameter("staff", typeof(string));
    
            var staffnameParameter = staffname != null ?
                new ObjectParameter("Staffname", staffname) :
                new ObjectParameter("Staffname", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var salaryScaleParameter = salaryScale.HasValue ?
                new ObjectParameter("SalaryScale", salaryScale) :
                new ObjectParameter("SalaryScale", typeof(decimal));
    
            var gradeParameter = grade != null ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(string));
    
            var gradeamountParameter = gradeamount.HasValue ?
                new ObjectParameter("Gradeamount", gradeamount) :
                new ObjectParameter("Gradeamount", typeof(decimal));
    
            var perincreament1Parameter = perincreament1.HasValue ?
                new ObjectParameter("perincreament1", perincreament1) :
                new ObjectParameter("perincreament1", typeof(decimal));
    
            var total1Parameter = total1.HasValue ?
                new ObjectParameter("Total1", total1) :
                new ObjectParameter("Total1", typeof(decimal));
    
            var reduceincrementParameter = reduceincrement.HasValue ?
                new ObjectParameter("Reduceincrement", reduceincrement) :
                new ObjectParameter("Reduceincrement", typeof(decimal));
    
            var total2Parameter = total2.HasValue ?
                new ObjectParameter("Total2", total2) :
                new ObjectParameter("Total2", typeof(decimal));
    
            var allowance1Parameter = allowance1.HasValue ?
                new ObjectParameter("Allowance1", allowance1) :
                new ObjectParameter("Allowance1", typeof(decimal));
    
            var schoolAllowanceParameter = schoolAllowance.HasValue ?
                new ObjectParameter("SchoolAllowance", schoolAllowance) :
                new ObjectParameter("SchoolAllowance", typeof(decimal));
    
            var total3Parameter = total3.HasValue ?
                new ObjectParameter("Total3", total3) :
                new ObjectParameter("Total3", typeof(decimal));
    
            var insuranceParameter = insurance.HasValue ?
                new ObjectParameter("Insurance", insurance) :
                new ObjectParameter("Insurance", typeof(decimal));
    
            var total4Parameter = total4.HasValue ?
                new ObjectParameter("Total4", total4) :
                new ObjectParameter("Total4", typeof(decimal));
    
            var taxamountParameter = taxamount.HasValue ?
                new ObjectParameter("taxamount", taxamount) :
                new ObjectParameter("taxamount", typeof(decimal));
    
            var peskiParameter = peski.HasValue ?
                new ObjectParameter("Peski", peski) :
                new ObjectParameter("Peski", typeof(decimal));
    
            var totalreduceParameter = totalreduce.HasValue ?
                new ObjectParameter("totalreduce", totalreduce) :
                new ObjectParameter("totalreduce", typeof(decimal));
    
            var finalAmountParameter = finalAmount.HasValue ?
                new ObjectParameter("FinalAmount", finalAmount) :
                new ObjectParameter("FinalAmount", typeof(decimal));
    
            var other1Parameter = other1 != null ?
                new ObjectParameter("other1", other1) :
                new ObjectParameter("other1", typeof(string));
    
            var other2Parameter = other2 != null ?
                new ObjectParameter("other2", other2) :
                new ObjectParameter("other2", typeof(string));
    
            var other3Parameter = other3 != null ?
                new ObjectParameter("other3", other3) :
                new ObjectParameter("other3", typeof(string));
    
            var other4Parameter = other4 != null ?
                new ObjectParameter("other4", other4) :
                new ObjectParameter("other4", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertstaffsalaryformatgov", staffParameter, staffnameParameter, designationParameter, salaryScaleParameter, gradeParameter, gradeamountParameter, perincreament1Parameter, total1Parameter, reduceincrementParameter, total2Parameter, allowance1Parameter, schoolAllowanceParameter, total3Parameter, insuranceParameter, total4Parameter, taxamountParameter, peskiParameter, totalreduceParameter, finalAmountParameter, other1Parameter, other2Parameter, other3Parameter, other4Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_insertstaffsalaryformatgovsheet(string staff, string staffname, string designation, Nullable<decimal> salaryScale, string grade, Nullable<decimal> gradeamount, Nullable<decimal> perincreament1, Nullable<decimal> total1, Nullable<decimal> reduceincrement, Nullable<decimal> total2, Nullable<decimal> allowance1, Nullable<decimal> schoolAllowance, Nullable<decimal> total3, Nullable<decimal> insurance, Nullable<decimal> total4, Nullable<decimal> taxamount, Nullable<decimal> peski, Nullable<decimal> totalreduce, Nullable<decimal> finalAmount, string other1, string other2, string other3, string other4, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var staffParameter = staff != null ?
                new ObjectParameter("staff", staff) :
                new ObjectParameter("staff", typeof(string));
    
            var staffnameParameter = staffname != null ?
                new ObjectParameter("Staffname", staffname) :
                new ObjectParameter("Staffname", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var salaryScaleParameter = salaryScale.HasValue ?
                new ObjectParameter("SalaryScale", salaryScale) :
                new ObjectParameter("SalaryScale", typeof(decimal));
    
            var gradeParameter = grade != null ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(string));
    
            var gradeamountParameter = gradeamount.HasValue ?
                new ObjectParameter("Gradeamount", gradeamount) :
                new ObjectParameter("Gradeamount", typeof(decimal));
    
            var perincreament1Parameter = perincreament1.HasValue ?
                new ObjectParameter("perincreament1", perincreament1) :
                new ObjectParameter("perincreament1", typeof(decimal));
    
            var total1Parameter = total1.HasValue ?
                new ObjectParameter("Total1", total1) :
                new ObjectParameter("Total1", typeof(decimal));
    
            var reduceincrementParameter = reduceincrement.HasValue ?
                new ObjectParameter("Reduceincrement", reduceincrement) :
                new ObjectParameter("Reduceincrement", typeof(decimal));
    
            var total2Parameter = total2.HasValue ?
                new ObjectParameter("Total2", total2) :
                new ObjectParameter("Total2", typeof(decimal));
    
            var allowance1Parameter = allowance1.HasValue ?
                new ObjectParameter("Allowance1", allowance1) :
                new ObjectParameter("Allowance1", typeof(decimal));
    
            var schoolAllowanceParameter = schoolAllowance.HasValue ?
                new ObjectParameter("SchoolAllowance", schoolAllowance) :
                new ObjectParameter("SchoolAllowance", typeof(decimal));
    
            var total3Parameter = total3.HasValue ?
                new ObjectParameter("Total3", total3) :
                new ObjectParameter("Total3", typeof(decimal));
    
            var insuranceParameter = insurance.HasValue ?
                new ObjectParameter("Insurance", insurance) :
                new ObjectParameter("Insurance", typeof(decimal));
    
            var total4Parameter = total4.HasValue ?
                new ObjectParameter("Total4", total4) :
                new ObjectParameter("Total4", typeof(decimal));
    
            var taxamountParameter = taxamount.HasValue ?
                new ObjectParameter("taxamount", taxamount) :
                new ObjectParameter("taxamount", typeof(decimal));
    
            var peskiParameter = peski.HasValue ?
                new ObjectParameter("Peski", peski) :
                new ObjectParameter("Peski", typeof(decimal));
    
            var totalreduceParameter = totalreduce.HasValue ?
                new ObjectParameter("totalreduce", totalreduce) :
                new ObjectParameter("totalreduce", typeof(decimal));
    
            var finalAmountParameter = finalAmount.HasValue ?
                new ObjectParameter("FinalAmount", finalAmount) :
                new ObjectParameter("FinalAmount", typeof(decimal));
    
            var other1Parameter = other1 != null ?
                new ObjectParameter("other1", other1) :
                new ObjectParameter("other1", typeof(string));
    
            var other2Parameter = other2 != null ?
                new ObjectParameter("other2", other2) :
                new ObjectParameter("other2", typeof(string));
    
            var other3Parameter = other3 != null ?
                new ObjectParameter("other3", other3) :
                new ObjectParameter("other3", typeof(string));
    
            var other4Parameter = other4 != null ?
                new ObjectParameter("other4", other4) :
                new ObjectParameter("other4", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertstaffsalaryformatgovsheet", staffParameter, staffnameParameter, designationParameter, salaryScaleParameter, gradeParameter, gradeamountParameter, perincreament1Parameter, total1Parameter, reduceincrementParameter, total2Parameter, allowance1Parameter, schoolAllowanceParameter, total3Parameter, insuranceParameter, total4Parameter, taxamountParameter, peskiParameter, totalreduceParameter, finalAmountParameter, other1Parameter, other2Parameter, other3Parameter, other4Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_InsertStudentAccountTable_Result> sp_InsertStudentAccountTable(string studentId, string namefield, string class_Student, string roll, Nullable<decimal> balanceAmount, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var namefieldParameter = namefield != null ?
                new ObjectParameter("Namefield", namefield) :
                new ObjectParameter("Namefield", typeof(string));
    
            var class_StudentParameter = class_Student != null ?
                new ObjectParameter("Class_Student", class_Student) :
                new ObjectParameter("Class_Student", typeof(string));
    
            var rollParameter = roll != null ?
                new ObjectParameter("Roll", roll) :
                new ObjectParameter("Roll", typeof(string));
    
            var balanceAmountParameter = balanceAmount.HasValue ?
                new ObjectParameter("BalanceAmount", balanceAmount) :
                new ObjectParameter("BalanceAmount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsertStudentAccountTable_Result>("sp_InsertStudentAccountTable", studentIdParameter, namefieldParameter, class_StudentParameter, rollParameter, balanceAmountParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertStudentAttendenceReco(string studentId, string class_Student, string rollNo, string nameStudent, string classTeacher, Nullable<decimal> month1, Nullable<decimal> month2, Nullable<decimal> month3, Nullable<decimal> month4, Nullable<decimal> month5, Nullable<decimal> month6, Nullable<decimal> month7, Nullable<decimal> month8, Nullable<decimal> month9, Nullable<decimal> month10, Nullable<decimal> month11, Nullable<decimal> month12, string studentStaus, string academicYear, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var class_StudentParameter = class_Student != null ?
                new ObjectParameter("Class_Student", class_Student) :
                new ObjectParameter("Class_Student", typeof(string));
    
            var rollNoParameter = rollNo != null ?
                new ObjectParameter("RollNo", rollNo) :
                new ObjectParameter("RollNo", typeof(string));
    
            var nameStudentParameter = nameStudent != null ?
                new ObjectParameter("NameStudent", nameStudent) :
                new ObjectParameter("NameStudent", typeof(string));
    
            var classTeacherParameter = classTeacher != null ?
                new ObjectParameter("ClassTeacher", classTeacher) :
                new ObjectParameter("ClassTeacher", typeof(string));
    
            var month1Parameter = month1.HasValue ?
                new ObjectParameter("Month1", month1) :
                new ObjectParameter("Month1", typeof(decimal));
    
            var month2Parameter = month2.HasValue ?
                new ObjectParameter("Month2", month2) :
                new ObjectParameter("Month2", typeof(decimal));
    
            var month3Parameter = month3.HasValue ?
                new ObjectParameter("Month3", month3) :
                new ObjectParameter("Month3", typeof(decimal));
    
            var month4Parameter = month4.HasValue ?
                new ObjectParameter("Month4", month4) :
                new ObjectParameter("Month4", typeof(decimal));
    
            var month5Parameter = month5.HasValue ?
                new ObjectParameter("Month5", month5) :
                new ObjectParameter("Month5", typeof(decimal));
    
            var month6Parameter = month6.HasValue ?
                new ObjectParameter("Month6", month6) :
                new ObjectParameter("Month6", typeof(decimal));
    
            var month7Parameter = month7.HasValue ?
                new ObjectParameter("Month7", month7) :
                new ObjectParameter("Month7", typeof(decimal));
    
            var month8Parameter = month8.HasValue ?
                new ObjectParameter("Month8", month8) :
                new ObjectParameter("Month8", typeof(decimal));
    
            var month9Parameter = month9.HasValue ?
                new ObjectParameter("Month9", month9) :
                new ObjectParameter("Month9", typeof(decimal));
    
            var month10Parameter = month10.HasValue ?
                new ObjectParameter("Month10", month10) :
                new ObjectParameter("Month10", typeof(decimal));
    
            var month11Parameter = month11.HasValue ?
                new ObjectParameter("Month11", month11) :
                new ObjectParameter("Month11", typeof(decimal));
    
            var month12Parameter = month12.HasValue ?
                new ObjectParameter("Month12", month12) :
                new ObjectParameter("Month12", typeof(decimal));
    
            var studentStausParameter = studentStaus != null ?
                new ObjectParameter("StudentStaus", studentStaus) :
                new ObjectParameter("StudentStaus", typeof(string));
    
            var academicYearParameter = academicYear != null ?
                new ObjectParameter("AcademicYear", academicYear) :
                new ObjectParameter("AcademicYear", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertStudentAttendenceReco", studentIdParameter, class_StudentParameter, rollNoParameter, nameStudentParameter, classTeacherParameter, month1Parameter, month2Parameter, month3Parameter, month4Parameter, month5Parameter, month6Parameter, month7Parameter, month8Parameter, month9Parameter, month10Parameter, month11Parameter, month12Parameter, studentStausParameter, academicYearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_InsertstudentBehav(string studentid, string examTerm, string year_B_c, string funBehav1, string funBehav2, string funBehav3, string funBehav4, string funBehav5, string funBehav6, string funBehav7, string funBehav8, string funBehav9, string funBehav10, string funBehav11, string funBehav12, string funBehav13, string funBehav14, string funBehav15, string funBehav16, string funBehav17, string funBehav18, string funBehav19, string funBehav20, string funBehav21, string funBehav22, string funBehav23, string funBehav24, string funBehav25, string funBehav26, string funBehav27, string funBehav28, string funBehav29, string funBehav30, string funBehav31, string funBehav32, string funBehav33, string funBehav34, string funBehav35, string funBehav36, string funBehav37, string funBehav38, string funBehav39, string funBehav40, string funBehav41, string funBehav42, string funBehav43, string funBehav44, string funBehav45, string funBehav46, string funBehav47, string funBehav48, string funBehav49, string funBehav50, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("Studentid", studentid) :
                new ObjectParameter("Studentid", typeof(string));
    
            var examTermParameter = examTerm != null ?
                new ObjectParameter("ExamTerm", examTerm) :
                new ObjectParameter("ExamTerm", typeof(string));
    
            var year_B_cParameter = year_B_c != null ?
                new ObjectParameter("Year_B_c", year_B_c) :
                new ObjectParameter("Year_B_c", typeof(string));
    
            var funBehav1Parameter = funBehav1 != null ?
                new ObjectParameter("FunBehav1", funBehav1) :
                new ObjectParameter("FunBehav1", typeof(string));
    
            var funBehav2Parameter = funBehav2 != null ?
                new ObjectParameter("FunBehav2", funBehav2) :
                new ObjectParameter("FunBehav2", typeof(string));
    
            var funBehav3Parameter = funBehav3 != null ?
                new ObjectParameter("FunBehav3", funBehav3) :
                new ObjectParameter("FunBehav3", typeof(string));
    
            var funBehav4Parameter = funBehav4 != null ?
                new ObjectParameter("FunBehav4", funBehav4) :
                new ObjectParameter("FunBehav4", typeof(string));
    
            var funBehav5Parameter = funBehav5 != null ?
                new ObjectParameter("FunBehav5", funBehav5) :
                new ObjectParameter("FunBehav5", typeof(string));
    
            var funBehav6Parameter = funBehav6 != null ?
                new ObjectParameter("FunBehav6", funBehav6) :
                new ObjectParameter("FunBehav6", typeof(string));
    
            var funBehav7Parameter = funBehav7 != null ?
                new ObjectParameter("FunBehav7", funBehav7) :
                new ObjectParameter("FunBehav7", typeof(string));
    
            var funBehav8Parameter = funBehav8 != null ?
                new ObjectParameter("FunBehav8", funBehav8) :
                new ObjectParameter("FunBehav8", typeof(string));
    
            var funBehav9Parameter = funBehav9 != null ?
                new ObjectParameter("FunBehav9", funBehav9) :
                new ObjectParameter("FunBehav9", typeof(string));
    
            var funBehav10Parameter = funBehav10 != null ?
                new ObjectParameter("FunBehav10", funBehav10) :
                new ObjectParameter("FunBehav10", typeof(string));
    
            var funBehav11Parameter = funBehav11 != null ?
                new ObjectParameter("FunBehav11", funBehav11) :
                new ObjectParameter("FunBehav11", typeof(string));
    
            var funBehav12Parameter = funBehav12 != null ?
                new ObjectParameter("FunBehav12", funBehav12) :
                new ObjectParameter("FunBehav12", typeof(string));
    
            var funBehav13Parameter = funBehav13 != null ?
                new ObjectParameter("FunBehav13", funBehav13) :
                new ObjectParameter("FunBehav13", typeof(string));
    
            var funBehav14Parameter = funBehav14 != null ?
                new ObjectParameter("FunBehav14", funBehav14) :
                new ObjectParameter("FunBehav14", typeof(string));
    
            var funBehav15Parameter = funBehav15 != null ?
                new ObjectParameter("FunBehav15", funBehav15) :
                new ObjectParameter("FunBehav15", typeof(string));
    
            var funBehav16Parameter = funBehav16 != null ?
                new ObjectParameter("FunBehav16", funBehav16) :
                new ObjectParameter("FunBehav16", typeof(string));
    
            var funBehav17Parameter = funBehav17 != null ?
                new ObjectParameter("FunBehav17", funBehav17) :
                new ObjectParameter("FunBehav17", typeof(string));
    
            var funBehav18Parameter = funBehav18 != null ?
                new ObjectParameter("FunBehav18", funBehav18) :
                new ObjectParameter("FunBehav18", typeof(string));
    
            var funBehav19Parameter = funBehav19 != null ?
                new ObjectParameter("FunBehav19", funBehav19) :
                new ObjectParameter("FunBehav19", typeof(string));
    
            var funBehav20Parameter = funBehav20 != null ?
                new ObjectParameter("FunBehav20", funBehav20) :
                new ObjectParameter("FunBehav20", typeof(string));
    
            var funBehav21Parameter = funBehav21 != null ?
                new ObjectParameter("FunBehav21", funBehav21) :
                new ObjectParameter("FunBehav21", typeof(string));
    
            var funBehav22Parameter = funBehav22 != null ?
                new ObjectParameter("FunBehav22", funBehav22) :
                new ObjectParameter("FunBehav22", typeof(string));
    
            var funBehav23Parameter = funBehav23 != null ?
                new ObjectParameter("FunBehav23", funBehav23) :
                new ObjectParameter("FunBehav23", typeof(string));
    
            var funBehav24Parameter = funBehav24 != null ?
                new ObjectParameter("FunBehav24", funBehav24) :
                new ObjectParameter("FunBehav24", typeof(string));
    
            var funBehav25Parameter = funBehav25 != null ?
                new ObjectParameter("FunBehav25", funBehav25) :
                new ObjectParameter("FunBehav25", typeof(string));
    
            var funBehav26Parameter = funBehav26 != null ?
                new ObjectParameter("FunBehav26", funBehav26) :
                new ObjectParameter("FunBehav26", typeof(string));
    
            var funBehav27Parameter = funBehav27 != null ?
                new ObjectParameter("FunBehav27", funBehav27) :
                new ObjectParameter("FunBehav27", typeof(string));
    
            var funBehav28Parameter = funBehav28 != null ?
                new ObjectParameter("FunBehav28", funBehav28) :
                new ObjectParameter("FunBehav28", typeof(string));
    
            var funBehav29Parameter = funBehav29 != null ?
                new ObjectParameter("FunBehav29", funBehav29) :
                new ObjectParameter("FunBehav29", typeof(string));
    
            var funBehav30Parameter = funBehav30 != null ?
                new ObjectParameter("FunBehav30", funBehav30) :
                new ObjectParameter("FunBehav30", typeof(string));
    
            var funBehav31Parameter = funBehav31 != null ?
                new ObjectParameter("FunBehav31", funBehav31) :
                new ObjectParameter("FunBehav31", typeof(string));
    
            var funBehav32Parameter = funBehav32 != null ?
                new ObjectParameter("FunBehav32", funBehav32) :
                new ObjectParameter("FunBehav32", typeof(string));
    
            var funBehav33Parameter = funBehav33 != null ?
                new ObjectParameter("FunBehav33", funBehav33) :
                new ObjectParameter("FunBehav33", typeof(string));
    
            var funBehav34Parameter = funBehav34 != null ?
                new ObjectParameter("FunBehav34", funBehav34) :
                new ObjectParameter("FunBehav34", typeof(string));
    
            var funBehav35Parameter = funBehav35 != null ?
                new ObjectParameter("FunBehav35", funBehav35) :
                new ObjectParameter("FunBehav35", typeof(string));
    
            var funBehav36Parameter = funBehav36 != null ?
                new ObjectParameter("FunBehav36", funBehav36) :
                new ObjectParameter("FunBehav36", typeof(string));
    
            var funBehav37Parameter = funBehav37 != null ?
                new ObjectParameter("FunBehav37", funBehav37) :
                new ObjectParameter("FunBehav37", typeof(string));
    
            var funBehav38Parameter = funBehav38 != null ?
                new ObjectParameter("FunBehav38", funBehav38) :
                new ObjectParameter("FunBehav38", typeof(string));
    
            var funBehav39Parameter = funBehav39 != null ?
                new ObjectParameter("FunBehav39", funBehav39) :
                new ObjectParameter("FunBehav39", typeof(string));
    
            var funBehav40Parameter = funBehav40 != null ?
                new ObjectParameter("FunBehav40", funBehav40) :
                new ObjectParameter("FunBehav40", typeof(string));
    
            var funBehav41Parameter = funBehav41 != null ?
                new ObjectParameter("FunBehav41", funBehav41) :
                new ObjectParameter("FunBehav41", typeof(string));
    
            var funBehav42Parameter = funBehav42 != null ?
                new ObjectParameter("FunBehav42", funBehav42) :
                new ObjectParameter("FunBehav42", typeof(string));
    
            var funBehav43Parameter = funBehav43 != null ?
                new ObjectParameter("FunBehav43", funBehav43) :
                new ObjectParameter("FunBehav43", typeof(string));
    
            var funBehav44Parameter = funBehav44 != null ?
                new ObjectParameter("FunBehav44", funBehav44) :
                new ObjectParameter("FunBehav44", typeof(string));
    
            var funBehav45Parameter = funBehav45 != null ?
                new ObjectParameter("FunBehav45", funBehav45) :
                new ObjectParameter("FunBehav45", typeof(string));
    
            var funBehav46Parameter = funBehav46 != null ?
                new ObjectParameter("FunBehav46", funBehav46) :
                new ObjectParameter("FunBehav46", typeof(string));
    
            var funBehav47Parameter = funBehav47 != null ?
                new ObjectParameter("FunBehav47", funBehav47) :
                new ObjectParameter("FunBehav47", typeof(string));
    
            var funBehav48Parameter = funBehav48 != null ?
                new ObjectParameter("FunBehav48", funBehav48) :
                new ObjectParameter("FunBehav48", typeof(string));
    
            var funBehav49Parameter = funBehav49 != null ?
                new ObjectParameter("FunBehav49", funBehav49) :
                new ObjectParameter("FunBehav49", typeof(string));
    
            var funBehav50Parameter = funBehav50 != null ?
                new ObjectParameter("FunBehav50", funBehav50) :
                new ObjectParameter("FunBehav50", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertstudentBehav", studentidParameter, examTermParameter, year_B_cParameter, funBehav1Parameter, funBehav2Parameter, funBehav3Parameter, funBehav4Parameter, funBehav5Parameter, funBehav6Parameter, funBehav7Parameter, funBehav8Parameter, funBehav9Parameter, funBehav10Parameter, funBehav11Parameter, funBehav12Parameter, funBehav13Parameter, funBehav14Parameter, funBehav15Parameter, funBehav16Parameter, funBehav17Parameter, funBehav18Parameter, funBehav19Parameter, funBehav20Parameter, funBehav21Parameter, funBehav22Parameter, funBehav23Parameter, funBehav24Parameter, funBehav25Parameter, funBehav26Parameter, funBehav27Parameter, funBehav28Parameter, funBehav29Parameter, funBehav30Parameter, funBehav31Parameter, funBehav32Parameter, funBehav33Parameter, funBehav34Parameter, funBehav35Parameter, funBehav36Parameter, funBehav37Parameter, funBehav38Parameter, funBehav39Parameter, funBehav40Parameter, funBehav41Parameter, funBehav42Parameter, funBehav43Parameter, funBehav44Parameter, funBehav45Parameter, funBehav46Parameter, funBehav47Parameter, funBehav48Parameter, funBehav49Parameter, funBehav50Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertstudentbillingsystem(string studentid, string studentName, string stud_Class, string stud_roll, string stud_section, Nullable<System.DateTime> englishdate, string nepalidate, string title_Heading, string paymentmonth, Nullable<decimal> amount, ObjectParameter transNo, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var studentNameParameter = studentName != null ?
                new ObjectParameter("studentName", studentName) :
                new ObjectParameter("studentName", typeof(string));
    
            var stud_ClassParameter = stud_Class != null ?
                new ObjectParameter("Stud_Class", stud_Class) :
                new ObjectParameter("Stud_Class", typeof(string));
    
            var stud_rollParameter = stud_roll != null ?
                new ObjectParameter("stud_roll", stud_roll) :
                new ObjectParameter("stud_roll", typeof(string));
    
            var stud_sectionParameter = stud_section != null ?
                new ObjectParameter("stud_section", stud_section) :
                new ObjectParameter("stud_section", typeof(string));
    
            var englishdateParameter = englishdate.HasValue ?
                new ObjectParameter("Englishdate", englishdate) :
                new ObjectParameter("Englishdate", typeof(System.DateTime));
    
            var nepalidateParameter = nepalidate != null ?
                new ObjectParameter("nepalidate", nepalidate) :
                new ObjectParameter("nepalidate", typeof(string));
    
            var title_HeadingParameter = title_Heading != null ?
                new ObjectParameter("title_Heading", title_Heading) :
                new ObjectParameter("title_Heading", typeof(string));
    
            var paymentmonthParameter = paymentmonth != null ?
                new ObjectParameter("paymentmonth", paymentmonth) :
                new ObjectParameter("paymentmonth", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertstudentbillingsystem", studentidParameter, studentNameParameter, stud_ClassParameter, stud_rollParameter, stud_sectionParameter, englishdateParameter, nepalidateParameter, title_HeadingParameter, paymentmonthParameter, amountParameter, transNo, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertStudentbooksInOut(ObjectParameter tranNo, Nullable<System.DateTime> date_English, string miti, string bookscode, Nullable<int> booksTaken, Nullable<System.DateTime> returnDate, Nullable<int> bokestakendays, string rreturnMiti, Nullable<int> booksReturn, string remarks, string studentId, Nullable<decimal> fines, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var date_EnglishParameter = date_English.HasValue ?
                new ObjectParameter("Date_English", date_English) :
                new ObjectParameter("Date_English", typeof(System.DateTime));
    
            var mitiParameter = miti != null ?
                new ObjectParameter("Miti", miti) :
                new ObjectParameter("Miti", typeof(string));
    
            var bookscodeParameter = bookscode != null ?
                new ObjectParameter("Bookscode", bookscode) :
                new ObjectParameter("Bookscode", typeof(string));
    
            var booksTakenParameter = booksTaken.HasValue ?
                new ObjectParameter("BooksTaken", booksTaken) :
                new ObjectParameter("BooksTaken", typeof(int));
    
            var returnDateParameter = returnDate.HasValue ?
                new ObjectParameter("ReturnDate", returnDate) :
                new ObjectParameter("ReturnDate", typeof(System.DateTime));
    
            var bokestakendaysParameter = bokestakendays.HasValue ?
                new ObjectParameter("bokestakendays", bokestakendays) :
                new ObjectParameter("bokestakendays", typeof(int));
    
            var rreturnMitiParameter = rreturnMiti != null ?
                new ObjectParameter("RreturnMiti", rreturnMiti) :
                new ObjectParameter("RreturnMiti", typeof(string));
    
            var booksReturnParameter = booksReturn.HasValue ?
                new ObjectParameter("BooksReturn", booksReturn) :
                new ObjectParameter("BooksReturn", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var finesParameter = fines.HasValue ?
                new ObjectParameter("fines", fines) :
                new ObjectParameter("fines", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertStudentbooksInOut", tranNo, date_EnglishParameter, mitiParameter, bookscodeParameter, booksTakenParameter, returnDateParameter, bokestakendaysParameter, rreturnMitiParameter, booksReturnParameter, remarksParameter, studentIdParameter, finesParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertstudentdiscountinformation(string studentid, Nullable<System.DateTime> englishdate, string title_Heading, Nullable<decimal> amount, ObjectParameter transno, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var englishdateParameter = englishdate.HasValue ?
                new ObjectParameter("Englishdate", englishdate) :
                new ObjectParameter("Englishdate", typeof(System.DateTime));
    
            var title_HeadingParameter = title_Heading != null ?
                new ObjectParameter("title_Heading", title_Heading) :
                new ObjectParameter("title_Heading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertstudentdiscountinformation", studentidParameter, englishdateParameter, title_HeadingParameter, amountParameter, transno, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Insertstudentinformationtable(string namefield, string class_Student, string roll, string sectionfield, string address, string phoneNumber, string house, string classTeacher, string customerPhotographPath, string customerGurdianPhoto, string busstop, string hobbies, string foodType, string studentType, Nullable<decimal> specialAddDicount, Nullable<System.DateTime> dateofbirthAD, string dateofbirthBs, string address1, string previousSchoolName, string previousAcademicGrade, string percantageObtain, Nullable<decimal> specialtutionDiscount, Nullable<decimal> otherDiscount, string fatherName, string qualificationfather, string occupationfather, string citizenshipNo, Nullable<decimal> incomePermonthfather, string motherName, string qualificationMother, string occupationMother, string citizenshipNoMother, Nullable<decimal> incomeMother, string fathermobile, string fatherofficeno, string mothermobile, string motherofficeno, string currentUser, string gender, string jati, string relegious, ObjectParameter studentId, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var namefieldParameter = namefield != null ?
                new ObjectParameter("Namefield", namefield) :
                new ObjectParameter("Namefield", typeof(string));
    
            var class_StudentParameter = class_Student != null ?
                new ObjectParameter("Class_Student", class_Student) :
                new ObjectParameter("Class_Student", typeof(string));
    
            var rollParameter = roll != null ?
                new ObjectParameter("Roll", roll) :
                new ObjectParameter("Roll", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("Sectionfield", sectionfield) :
                new ObjectParameter("Sectionfield", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var houseParameter = house != null ?
                new ObjectParameter("House", house) :
                new ObjectParameter("House", typeof(string));
    
            var classTeacherParameter = classTeacher != null ?
                new ObjectParameter("ClassTeacher", classTeacher) :
                new ObjectParameter("ClassTeacher", typeof(string));
    
            var customerPhotographPathParameter = customerPhotographPath != null ?
                new ObjectParameter("customerPhotographPath", customerPhotographPath) :
                new ObjectParameter("customerPhotographPath", typeof(string));
    
            var customerGurdianPhotoParameter = customerGurdianPhoto != null ?
                new ObjectParameter("customerGurdianPhoto", customerGurdianPhoto) :
                new ObjectParameter("customerGurdianPhoto", typeof(string));
    
            var busstopParameter = busstop != null ?
                new ObjectParameter("Busstop", busstop) :
                new ObjectParameter("Busstop", typeof(string));
    
            var hobbiesParameter = hobbies != null ?
                new ObjectParameter("Hobbies", hobbies) :
                new ObjectParameter("Hobbies", typeof(string));
    
            var foodTypeParameter = foodType != null ?
                new ObjectParameter("FoodType", foodType) :
                new ObjectParameter("FoodType", typeof(string));
    
            var studentTypeParameter = studentType != null ?
                new ObjectParameter("StudentType", studentType) :
                new ObjectParameter("StudentType", typeof(string));
    
            var specialAddDicountParameter = specialAddDicount.HasValue ?
                new ObjectParameter("SpecialAddDicount", specialAddDicount) :
                new ObjectParameter("SpecialAddDicount", typeof(decimal));
    
            var dateofbirthADParameter = dateofbirthAD.HasValue ?
                new ObjectParameter("dateofbirthAD", dateofbirthAD) :
                new ObjectParameter("dateofbirthAD", typeof(System.DateTime));
    
            var dateofbirthBsParameter = dateofbirthBs != null ?
                new ObjectParameter("dateofbirthBs", dateofbirthBs) :
                new ObjectParameter("dateofbirthBs", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("address1", address1) :
                new ObjectParameter("address1", typeof(string));
    
            var previousSchoolNameParameter = previousSchoolName != null ?
                new ObjectParameter("PreviousSchoolName", previousSchoolName) :
                new ObjectParameter("PreviousSchoolName", typeof(string));
    
            var previousAcademicGradeParameter = previousAcademicGrade != null ?
                new ObjectParameter("PreviousAcademicGrade", previousAcademicGrade) :
                new ObjectParameter("PreviousAcademicGrade", typeof(string));
    
            var percantageObtainParameter = percantageObtain != null ?
                new ObjectParameter("PercantageObtain", percantageObtain) :
                new ObjectParameter("PercantageObtain", typeof(string));
    
            var specialtutionDiscountParameter = specialtutionDiscount.HasValue ?
                new ObjectParameter("specialtutionDiscount", specialtutionDiscount) :
                new ObjectParameter("specialtutionDiscount", typeof(decimal));
    
            var otherDiscountParameter = otherDiscount.HasValue ?
                new ObjectParameter("OtherDiscount", otherDiscount) :
                new ObjectParameter("OtherDiscount", typeof(decimal));
    
            var fatherNameParameter = fatherName != null ?
                new ObjectParameter("FatherName", fatherName) :
                new ObjectParameter("FatherName", typeof(string));
    
            var qualificationfatherParameter = qualificationfather != null ?
                new ObjectParameter("Qualificationfather", qualificationfather) :
                new ObjectParameter("Qualificationfather", typeof(string));
    
            var occupationfatherParameter = occupationfather != null ?
                new ObjectParameter("Occupationfather", occupationfather) :
                new ObjectParameter("Occupationfather", typeof(string));
    
            var citizenshipNoParameter = citizenshipNo != null ?
                new ObjectParameter("CitizenshipNo", citizenshipNo) :
                new ObjectParameter("CitizenshipNo", typeof(string));
    
            var incomePermonthfatherParameter = incomePermonthfather.HasValue ?
                new ObjectParameter("IncomePermonthfather", incomePermonthfather) :
                new ObjectParameter("IncomePermonthfather", typeof(decimal));
    
            var motherNameParameter = motherName != null ?
                new ObjectParameter("MotherName", motherName) :
                new ObjectParameter("MotherName", typeof(string));
    
            var qualificationMotherParameter = qualificationMother != null ?
                new ObjectParameter("QualificationMother", qualificationMother) :
                new ObjectParameter("QualificationMother", typeof(string));
    
            var occupationMotherParameter = occupationMother != null ?
                new ObjectParameter("OccupationMother", occupationMother) :
                new ObjectParameter("OccupationMother", typeof(string));
    
            var citizenshipNoMotherParameter = citizenshipNoMother != null ?
                new ObjectParameter("CitizenshipNoMother", citizenshipNoMother) :
                new ObjectParameter("CitizenshipNoMother", typeof(string));
    
            var incomeMotherParameter = incomeMother.HasValue ?
                new ObjectParameter("IncomeMother", incomeMother) :
                new ObjectParameter("IncomeMother", typeof(decimal));
    
            var fathermobileParameter = fathermobile != null ?
                new ObjectParameter("fathermobile", fathermobile) :
                new ObjectParameter("fathermobile", typeof(string));
    
            var fatherofficenoParameter = fatherofficeno != null ?
                new ObjectParameter("fatherofficeno", fatherofficeno) :
                new ObjectParameter("fatherofficeno", typeof(string));
    
            var mothermobileParameter = mothermobile != null ?
                new ObjectParameter("mothermobile", mothermobile) :
                new ObjectParameter("mothermobile", typeof(string));
    
            var motherofficenoParameter = motherofficeno != null ?
                new ObjectParameter("motherofficeno", motherofficeno) :
                new ObjectParameter("motherofficeno", typeof(string));
    
            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var jatiParameter = jati != null ?
                new ObjectParameter("Jati", jati) :
                new ObjectParameter("Jati", typeof(string));
    
            var relegiousParameter = relegious != null ?
                new ObjectParameter("Relegious", relegious) :
                new ObjectParameter("Relegious", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertstudentinformationtable", namefieldParameter, class_StudentParameter, rollParameter, sectionfieldParameter, addressParameter, phoneNumberParameter, houseParameter, classTeacherParameter, customerPhotographPathParameter, customerGurdianPhotoParameter, busstopParameter, hobbiesParameter, foodTypeParameter, studentTypeParameter, specialAddDicountParameter, dateofbirthADParameter, dateofbirthBsParameter, address1Parameter, previousSchoolNameParameter, previousAcademicGradeParameter, percantageObtainParameter, specialtutionDiscountParameter, otherDiscountParameter, fatherNameParameter, qualificationfatherParameter, occupationfatherParameter, citizenshipNoParameter, incomePermonthfatherParameter, motherNameParameter, qualificationMotherParameter, occupationMotherParameter, citizenshipNoMotherParameter, incomeMotherParameter, fathermobileParameter, fatherofficenoParameter, mothermobileParameter, motherofficenoParameter, currentUserParameter, genderParameter, jatiParameter, relegiousParameter, studentId, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_insertstudentmonthlybehavior(ObjectParameter tranno, string studentid, string namefield, string class_stu, string yearValue, Nullable<System.DateTime> datevalue, string mistake1, string complainby, string matterHandleby, string desiciontaken, string actiontaken, string commetmentbyStudent, string ramarks1, string ramarks2, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("Studentid", studentid) :
                new ObjectParameter("Studentid", typeof(string));
    
            var namefieldParameter = namefield != null ?
                new ObjectParameter("Namefield", namefield) :
                new ObjectParameter("Namefield", typeof(string));
    
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("Class_stu", class_stu) :
                new ObjectParameter("Class_stu", typeof(string));
    
            var yearValueParameter = yearValue != null ?
                new ObjectParameter("YearValue", yearValue) :
                new ObjectParameter("YearValue", typeof(string));
    
            var datevalueParameter = datevalue.HasValue ?
                new ObjectParameter("Datevalue", datevalue) :
                new ObjectParameter("Datevalue", typeof(System.DateTime));
    
            var mistake1Parameter = mistake1 != null ?
                new ObjectParameter("Mistake1", mistake1) :
                new ObjectParameter("Mistake1", typeof(string));
    
            var complainbyParameter = complainby != null ?
                new ObjectParameter("Complainby", complainby) :
                new ObjectParameter("Complainby", typeof(string));
    
            var matterHandlebyParameter = matterHandleby != null ?
                new ObjectParameter("MatterHandleby", matterHandleby) :
                new ObjectParameter("MatterHandleby", typeof(string));
    
            var desiciontakenParameter = desiciontaken != null ?
                new ObjectParameter("Desiciontaken", desiciontaken) :
                new ObjectParameter("Desiciontaken", typeof(string));
    
            var actiontakenParameter = actiontaken != null ?
                new ObjectParameter("Actiontaken", actiontaken) :
                new ObjectParameter("Actiontaken", typeof(string));
    
            var commetmentbyStudentParameter = commetmentbyStudent != null ?
                new ObjectParameter("CommetmentbyStudent", commetmentbyStudent) :
                new ObjectParameter("CommetmentbyStudent", typeof(string));
    
            var ramarks1Parameter = ramarks1 != null ?
                new ObjectParameter("Ramarks1", ramarks1) :
                new ObjectParameter("Ramarks1", typeof(string));
    
            var ramarks2Parameter = ramarks2 != null ?
                new ObjectParameter("Ramarks2", ramarks2) :
                new ObjectParameter("Ramarks2", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertstudentmonthlybehavior", tranno, studentidParameter, namefieldParameter, class_stuParameter, yearValueParameter, datevalueParameter, mistake1Parameter, complainbyParameter, matterHandlebyParameter, desiciontakenParameter, actiontakenParameter, commetmentbyStudentParameter, ramarks1Parameter, ramarks2Parameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_insertTempbillDiscountMonthly(string studentid, string billheading, Nullable<decimal> amount, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("Studentid", studentid) :
                new ObjectParameter("Studentid", typeof(string));
    
            var billheadingParameter = billheading != null ?
                new ObjectParameter("Billheading", billheading) :
                new ObjectParameter("Billheading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertTempbillDiscountMonthly", studentidParameter, billheadingParameter, amountParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_insertTempBillExtraIndivusal(string nepalidate, string studentid, string billheading, Nullable<decimal> amount, string billmonthNepali, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var nepalidateParameter = nepalidate != null ?
                new ObjectParameter("Nepalidate", nepalidate) :
                new ObjectParameter("Nepalidate", typeof(string));
    
            var studentidParameter = studentid != null ?
                new ObjectParameter("Studentid", studentid) :
                new ObjectParameter("Studentid", typeof(string));
    
            var billheadingParameter = billheading != null ?
                new ObjectParameter("Billheading", billheading) :
                new ObjectParameter("Billheading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var billmonthNepaliParameter = billmonthNepali != null ?
                new ObjectParameter("billmonthNepali", billmonthNepali) :
                new ObjectParameter("billmonthNepali", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertTempBillExtraIndivusal", nepalidateParameter, studentidParameter, billheadingParameter, amountParameter, billmonthNepaliParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_insertTempbillmonthlyindivusal(string studentid, string billheading, Nullable<decimal> amount, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("Studentid", studentid) :
                new ObjectParameter("Studentid", typeof(string));
    
            var billheadingParameter = billheading != null ?
                new ObjectParameter("Billheading", billheading) :
                new ObjectParameter("Billheading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertTempbillmonthlyindivusal", studentidParameter, billheadingParameter, amountParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_inserttempmergertableAnita()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_inserttempmergertableAnita");
        }
    
        public virtual int sp_InserttempprntBill(ObjectParameter transNo, string studentid, string billHeading, Nullable<decimal> amount, string class_Stu, string billMonth, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("Studentid", studentid) :
                new ObjectParameter("Studentid", typeof(string));
    
            var billHeadingParameter = billHeading != null ?
                new ObjectParameter("BillHeading", billHeading) :
                new ObjectParameter("BillHeading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("Class_Stu", class_Stu) :
                new ObjectParameter("Class_Stu", typeof(string));
    
            var billMonthParameter = billMonth != null ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InserttempprntBill", transNo, studentidParameter, billHeadingParameter, amountParameter, class_StuParameter, billMonthParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_inserttermterms(string terms, string yearvalue, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var termsParameter = terms != null ?
                new ObjectParameter("terms", terms) :
                new ObjectParameter("terms", typeof(string));
    
            var yearvalueParameter = yearvalue != null ?
                new ObjectParameter("yearvalue", yearvalue) :
                new ObjectParameter("yearvalue", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_inserttermterms", termsParameter, yearvalueParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_inserttermtermsfinal(string terms, string yearvalue, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var termsParameter = terms != null ?
                new ObjectParameter("terms", terms) :
                new ObjectParameter("terms", typeof(string));
    
            var yearvalueParameter = yearvalue != null ?
                new ObjectParameter("yearvalue", yearvalue) :
                new ObjectParameter("yearvalue", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_inserttermtermsfinal", termsParameter, yearvalueParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_insertTopMarksObtained(string class_stu, Nullable<decimal> subject1, Nullable<decimal> subject2, Nullable<decimal> subject3, Nullable<decimal> subject4, Nullable<decimal> subject5, Nullable<decimal> subject6, Nullable<decimal> subject7, Nullable<decimal> subject8, Nullable<decimal> subject9, Nullable<decimal> subject10, Nullable<decimal> subject11, Nullable<decimal> subject12, Nullable<decimal> subject13, Nullable<decimal> subject14, Nullable<decimal> subject15, Nullable<decimal> subject16, Nullable<decimal> subject17, Nullable<decimal> subject18, Nullable<decimal> subject19, Nullable<decimal> subject20, string examterm, string year_B_C, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("Class_stu", class_stu) :
                new ObjectParameter("Class_stu", typeof(string));
    
            var subject1Parameter = subject1.HasValue ?
                new ObjectParameter("Subject1", subject1) :
                new ObjectParameter("Subject1", typeof(decimal));
    
            var subject2Parameter = subject2.HasValue ?
                new ObjectParameter("Subject2", subject2) :
                new ObjectParameter("Subject2", typeof(decimal));
    
            var subject3Parameter = subject3.HasValue ?
                new ObjectParameter("Subject3", subject3) :
                new ObjectParameter("Subject3", typeof(decimal));
    
            var subject4Parameter = subject4.HasValue ?
                new ObjectParameter("Subject4", subject4) :
                new ObjectParameter("Subject4", typeof(decimal));
    
            var subject5Parameter = subject5.HasValue ?
                new ObjectParameter("Subject5", subject5) :
                new ObjectParameter("Subject5", typeof(decimal));
    
            var subject6Parameter = subject6.HasValue ?
                new ObjectParameter("Subject6", subject6) :
                new ObjectParameter("Subject6", typeof(decimal));
    
            var subject7Parameter = subject7.HasValue ?
                new ObjectParameter("Subject7", subject7) :
                new ObjectParameter("Subject7", typeof(decimal));
    
            var subject8Parameter = subject8.HasValue ?
                new ObjectParameter("Subject8", subject8) :
                new ObjectParameter("Subject8", typeof(decimal));
    
            var subject9Parameter = subject9.HasValue ?
                new ObjectParameter("Subject9", subject9) :
                new ObjectParameter("Subject9", typeof(decimal));
    
            var subject10Parameter = subject10.HasValue ?
                new ObjectParameter("Subject10", subject10) :
                new ObjectParameter("Subject10", typeof(decimal));
    
            var subject11Parameter = subject11.HasValue ?
                new ObjectParameter("Subject11", subject11) :
                new ObjectParameter("Subject11", typeof(decimal));
    
            var subject12Parameter = subject12.HasValue ?
                new ObjectParameter("Subject12", subject12) :
                new ObjectParameter("Subject12", typeof(decimal));
    
            var subject13Parameter = subject13.HasValue ?
                new ObjectParameter("Subject13", subject13) :
                new ObjectParameter("Subject13", typeof(decimal));
    
            var subject14Parameter = subject14.HasValue ?
                new ObjectParameter("Subject14", subject14) :
                new ObjectParameter("Subject14", typeof(decimal));
    
            var subject15Parameter = subject15.HasValue ?
                new ObjectParameter("Subject15", subject15) :
                new ObjectParameter("Subject15", typeof(decimal));
    
            var subject16Parameter = subject16.HasValue ?
                new ObjectParameter("Subject16", subject16) :
                new ObjectParameter("Subject16", typeof(decimal));
    
            var subject17Parameter = subject17.HasValue ?
                new ObjectParameter("Subject17", subject17) :
                new ObjectParameter("Subject17", typeof(decimal));
    
            var subject18Parameter = subject18.HasValue ?
                new ObjectParameter("Subject18", subject18) :
                new ObjectParameter("Subject18", typeof(decimal));
    
            var subject19Parameter = subject19.HasValue ?
                new ObjectParameter("Subject19", subject19) :
                new ObjectParameter("Subject19", typeof(decimal));
    
            var subject20Parameter = subject20.HasValue ?
                new ObjectParameter("Subject20", subject20) :
                new ObjectParameter("Subject20", typeof(decimal));
    
            var examtermParameter = examterm != null ?
                new ObjectParameter("Examterm", examterm) :
                new ObjectParameter("Examterm", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_insertTopMarksObtained", class_stuParameter, subject1Parameter, subject2Parameter, subject3Parameter, subject4Parameter, subject5Parameter, subject6Parameter, subject7Parameter, subject8Parameter, subject9Parameter, subject10Parameter, subject11Parameter, subject12Parameter, subject13Parameter, subject14Parameter, subject15Parameter, subject16Parameter, subject17Parameter, subject18Parameter, subject19Parameter, subject20Parameter, examtermParameter, year_B_CParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertTotalBooksOut(Nullable<int> codeNo, Nullable<int> books, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var codeNoParameter = codeNo.HasValue ?
                new ObjectParameter("CodeNo", codeNo) :
                new ObjectParameter("CodeNo", typeof(int));
    
            var booksParameter = books.HasValue ?
                new ObjectParameter("Books", books) :
                new ObjectParameter("Books", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertTotalBooksOut", codeNoParameter, booksParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertTran_Detail(string accountID, Nullable<System.DateTime> transactionDate, string transactionTime, string deposit_ChequNo, string discription_Transction, Nullable<decimal> preBalanceAmount, Nullable<decimal> amountWithdrawl, Nullable<decimal> amountDepositing, Nullable<decimal> balanceAmount, string currentuser, ObjectParameter transNo, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            var transactionTimeParameter = transactionTime != null ?
                new ObjectParameter("TransactionTime", transactionTime) :
                new ObjectParameter("TransactionTime", typeof(string));
    
            var deposit_ChequNoParameter = deposit_ChequNo != null ?
                new ObjectParameter("Deposit_ChequNo", deposit_ChequNo) :
                new ObjectParameter("Deposit_ChequNo", typeof(string));
    
            var discription_TransctionParameter = discription_Transction != null ?
                new ObjectParameter("Discription_Transction", discription_Transction) :
                new ObjectParameter("Discription_Transction", typeof(string));
    
            var preBalanceAmountParameter = preBalanceAmount.HasValue ?
                new ObjectParameter("preBalanceAmount", preBalanceAmount) :
                new ObjectParameter("preBalanceAmount", typeof(decimal));
    
            var amountWithdrawlParameter = amountWithdrawl.HasValue ?
                new ObjectParameter("AmountWithdrawl", amountWithdrawl) :
                new ObjectParameter("AmountWithdrawl", typeof(decimal));
    
            var amountDepositingParameter = amountDepositing.HasValue ?
                new ObjectParameter("AmountDepositing", amountDepositing) :
                new ObjectParameter("AmountDepositing", typeof(decimal));
    
            var balanceAmountParameter = balanceAmount.HasValue ?
                new ObjectParameter("BalanceAmount", balanceAmount) :
                new ObjectParameter("BalanceAmount", typeof(decimal));
    
            var currentuserParameter = currentuser != null ?
                new ObjectParameter("currentuser", currentuser) :
                new ObjectParameter("currentuser", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertTran_Detail", accountIDParameter, transactionDateParameter, transactionTimeParameter, deposit_ChequNoParameter, discription_TransctionParameter, preBalanceAmountParameter, amountWithdrawlParameter, amountDepositingParameter, balanceAmountParameter, currentuserParameter, transNo, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertTranNo(string idNo, Nullable<System.DateTime> datevalue, Nullable<decimal> totalAmount, Nullable<decimal> duePayment, Nullable<decimal> balanceDue, string selectMonths, ObjectParameter tranNo, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var idNoParameter = idNo != null ?
                new ObjectParameter("IdNo", idNo) :
                new ObjectParameter("IdNo", typeof(string));
    
            var datevalueParameter = datevalue.HasValue ?
                new ObjectParameter("Datevalue", datevalue) :
                new ObjectParameter("Datevalue", typeof(System.DateTime));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var duePaymentParameter = duePayment.HasValue ?
                new ObjectParameter("DuePayment", duePayment) :
                new ObjectParameter("DuePayment", typeof(decimal));
    
            var balanceDueParameter = balanceDue.HasValue ?
                new ObjectParameter("BalanceDue", balanceDue) :
                new ObjectParameter("BalanceDue", typeof(decimal));
    
            var selectMonthsParameter = selectMonths != null ?
                new ObjectParameter("SelectMonths", selectMonths) :
                new ObjectParameter("SelectMonths", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertTranNo", idNoParameter, datevalueParameter, totalAmountParameter, duePaymentParameter, balanceDueParameter, selectMonthsParameter, tranNo, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Inserttransctiondetail(Nullable<System.DateTime> datefield, string accountCode, string accountHeading, Nullable<decimal> preAmount, Nullable<decimal> newAmount, Nullable<decimal> balanceAmount, string remarks, string customer, ObjectParameter transNo, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var datefieldParameter = datefield.HasValue ?
                new ObjectParameter("Datefield", datefield) :
                new ObjectParameter("Datefield", typeof(System.DateTime));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var preAmountParameter = preAmount.HasValue ?
                new ObjectParameter("PreAmount", preAmount) :
                new ObjectParameter("PreAmount", typeof(decimal));
    
            var newAmountParameter = newAmount.HasValue ?
                new ObjectParameter("NewAmount", newAmount) :
                new ObjectParameter("NewAmount", typeof(decimal));
    
            var balanceAmountParameter = balanceAmount.HasValue ?
                new ObjectParameter("BalanceAmount", balanceAmount) :
                new ObjectParameter("BalanceAmount", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inserttransctiondetail", datefieldParameter, accountCodeParameter, accountHeadingParameter, preAmountParameter, newAmountParameter, balanceAmountParameter, remarksParameter, customerParameter, transNo, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Inserttransctiondetail_Preyear(Nullable<System.DateTime> datefield, string accountCode, string accountHeading, Nullable<decimal> preAmount, Nullable<decimal> newAmount, Nullable<decimal> balanceAmount, string remarks, string acYear, string customer, Nullable<int> transNo, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var datefieldParameter = datefield.HasValue ?
                new ObjectParameter("Datefield", datefield) :
                new ObjectParameter("Datefield", typeof(System.DateTime));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var preAmountParameter = preAmount.HasValue ?
                new ObjectParameter("PreAmount", preAmount) :
                new ObjectParameter("PreAmount", typeof(decimal));
    
            var newAmountParameter = newAmount.HasValue ?
                new ObjectParameter("NewAmount", newAmount) :
                new ObjectParameter("NewAmount", typeof(decimal));
    
            var balanceAmountParameter = balanceAmount.HasValue ?
                new ObjectParameter("BalanceAmount", balanceAmount) :
                new ObjectParameter("BalanceAmount", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var acYearParameter = acYear != null ?
                new ObjectParameter("AcYear", acYear) :
                new ObjectParameter("AcYear", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var transNoParameter = transNo.HasValue ?
                new ObjectParameter("TransNo", transNo) :
                new ObjectParameter("TransNo", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inserttransctiondetail_Preyear", datefieldParameter, accountCodeParameter, accountHeadingParameter, preAmountParameter, newAmountParameter, balanceAmountParameter, remarksParameter, acYearParameter, customerParameter, transNoParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Inserttransctiondetail_test(Nullable<System.DateTime> datefield, string accountCode, string accountHeading, Nullable<decimal> preAmount, Nullable<decimal> newAmount, Nullable<decimal> balanceAmount, string remarks, string customer, ObjectParameter transNo, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var datefieldParameter = datefield.HasValue ?
                new ObjectParameter("Datefield", datefield) :
                new ObjectParameter("Datefield", typeof(System.DateTime));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountHeadingParameter = accountHeading != null ?
                new ObjectParameter("AccountHeading", accountHeading) :
                new ObjectParameter("AccountHeading", typeof(string));
    
            var preAmountParameter = preAmount.HasValue ?
                new ObjectParameter("PreAmount", preAmount) :
                new ObjectParameter("PreAmount", typeof(decimal));
    
            var newAmountParameter = newAmount.HasValue ?
                new ObjectParameter("NewAmount", newAmount) :
                new ObjectParameter("NewAmount", typeof(decimal));
    
            var balanceAmountParameter = balanceAmount.HasValue ?
                new ObjectParameter("BalanceAmount", balanceAmount) :
                new ObjectParameter("BalanceAmount", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inserttransctiondetail_test", datefieldParameter, accountCodeParameter, accountHeadingParameter, preAmountParameter, newAmountParameter, balanceAmountParameter, remarksParameter, customerParameter, transNo, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_InsertUpBilBalanceMonthly(ObjectParameter trano, string studentId, Nullable<decimal> newBalance, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var newBalanceParameter = newBalance.HasValue ?
                new ObjectParameter("NewBalance", newBalance) :
                new ObjectParameter("NewBalance", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpBilBalanceMonthly", trano, studentIdParameter, newBalanceParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_InsertUserIDName(ObjectParameter tranno, string groupId, string groupName, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var groupIdParameter = groupId != null ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(string));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertUserIDName", tranno, groupIdParameter, groupNameParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_insertvariableSalaryMonthly(ObjectParameter tranno, Nullable<System.DateTime> dateVale, string miti, string staffid, string heading, Nullable<decimal> amount, string remarks, string approvedby, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var dateValeParameter = dateVale.HasValue ?
                new ObjectParameter("DateVale", dateVale) :
                new ObjectParameter("DateVale", typeof(System.DateTime));
    
            var mitiParameter = miti != null ?
                new ObjectParameter("Miti", miti) :
                new ObjectParameter("Miti", typeof(string));
    
            var staffidParameter = staffid != null ?
                new ObjectParameter("Staffid", staffid) :
                new ObjectParameter("Staffid", typeof(string));
    
            var headingParameter = heading != null ?
                new ObjectParameter("heading", heading) :
                new ObjectParameter("heading", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var approvedbyParameter = approvedby != null ?
                new ObjectParameter("Approvedby", approvedby) :
                new ObjectParameter("Approvedby", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertvariableSalaryMonthly", tranno, dateValeParameter, mitiParameter, staffidParameter, headingParameter, amountParameter, remarksParameter, approvedbyParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_insetRegegere(ObjectParameter tranno, string schoolname, string registrationNo, string pANNo, string address, string telephone, string email, string schoolType, string country, string contactPerson, string cell_mobileContactPerson, string computercode, string websie, string codeSchool)
        {
            var schoolnameParameter = schoolname != null ?
                new ObjectParameter("Schoolname", schoolname) :
                new ObjectParameter("Schoolname", typeof(string));
    
            var registrationNoParameter = registrationNo != null ?
                new ObjectParameter("RegistrationNo", registrationNo) :
                new ObjectParameter("RegistrationNo", typeof(string));
    
            var pANNoParameter = pANNo != null ?
                new ObjectParameter("PANNo", pANNo) :
                new ObjectParameter("PANNo", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var schoolTypeParameter = schoolType != null ?
                new ObjectParameter("SchoolType", schoolType) :
                new ObjectParameter("SchoolType", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var cell_mobileContactPersonParameter = cell_mobileContactPerson != null ?
                new ObjectParameter("Cell_mobileContactPerson", cell_mobileContactPerson) :
                new ObjectParameter("Cell_mobileContactPerson", typeof(string));
    
            var computercodeParameter = computercode != null ?
                new ObjectParameter("computercode", computercode) :
                new ObjectParameter("computercode", typeof(string));
    
            var websieParameter = websie != null ?
                new ObjectParameter("websie", websie) :
                new ObjectParameter("websie", typeof(string));
    
            var codeSchoolParameter = codeSchool != null ?
                new ObjectParameter("CodeSchool", codeSchool) :
                new ObjectParameter("CodeSchool", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_insetRegegere", tranno, schoolnameParameter, registrationNoParameter, pANNoParameter, addressParameter, telephoneParameter, emailParameter, schoolTypeParameter, countryParameter, contactPersonParameter, cell_mobileContactPersonParameter, computercodeParameter, websieParameter, codeSchoolParameter);
        }
    
        public virtual ObjectResult<Sp_makeresultIdFinalterm_Result> Sp_makeresultIdFinalterm(string p1reslt, string p2Ex_Term, string p2yrar, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var p1resltParameter = p1reslt != null ?
                new ObjectParameter("p1reslt", p1reslt) :
                new ObjectParameter("p1reslt", typeof(string));
    
            var p2Ex_TermParameter = p2Ex_Term != null ?
                new ObjectParameter("p2Ex_Term", p2Ex_Term) :
                new ObjectParameter("p2Ex_Term", typeof(string));
    
            var p2yrarParameter = p2yrar != null ?
                new ObjectParameter("p2yrar", p2yrar) :
                new ObjectParameter("p2yrar", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_makeresultIdFinalterm_Result>("Sp_makeresultIdFinalterm", p1resltParameter, p2Ex_TermParameter, p2yrarParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_makeresultIdMidfirstterm_Result> Sp_makeresultIdMidfirstterm(string p1reslt, string p2Ex_Term, string p2yrar, Nullable<int> sc_1, Nullable<int> sC_2)
        {
            var p1resltParameter = p1reslt != null ?
                new ObjectParameter("p1reslt", p1reslt) :
                new ObjectParameter("p1reslt", typeof(string));
    
            var p2Ex_TermParameter = p2Ex_Term != null ?
                new ObjectParameter("p2Ex_Term", p2Ex_Term) :
                new ObjectParameter("p2Ex_Term", typeof(string));
    
            var p2yrarParameter = p2yrar != null ?
                new ObjectParameter("p2yrar", p2yrar) :
                new ObjectParameter("p2yrar", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sC_2Parameter = sC_2.HasValue ?
                new ObjectParameter("SC_2", sC_2) :
                new ObjectParameter("SC_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_makeresultIdMidfirstterm_Result>("Sp_makeresultIdMidfirstterm", p1resltParameter, p2Ex_TermParameter, p2yrarParameter, sc_1Parameter, sC_2Parameter);
        }
    
        public virtual int Sp_ManageFinal_Track()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ManageFinal_Track");
        }
    
        public virtual ObjectResult<Sp_Marks_Entry_Subject_Get_Result> Sp_Marks_Entry_Subject_Get(string class_Stu, string terms, string time_Year, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("class_Stu", class_Stu) :
                new ObjectParameter("class_Stu", typeof(string));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var time_YearParameter = time_Year != null ?
                new ObjectParameter("Time_Year", time_Year) :
                new ObjectParameter("Time_Year", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Marks_Entry_Subject_Get_Result>("Sp_Marks_Entry_Subject_Get", class_StuParameter, termsParameter, time_YearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_MBillGibco(string month, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MBillGibco", monthParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_MBillGibco_GetTotalBalance(string month, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MBillGibco_GetTotalBalance", monthParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_MBillGibco_GetTotalBalance_Adimi(string studentid, string class_stu, string month, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("class_stu", class_stu) :
                new ObjectParameter("class_stu", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MBillGibco_GetTotalBalance_Adimi", studentidParameter, class_stuParameter, monthParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_MBillPr_gakoMonthlydiscount(string month, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MBillPr_gakoMonthlydiscount", monthParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_MBillPr_gakoMonthlydiscount_adimi(string month, string studentid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MBillPr_gakoMonthlydiscount_adimi", monthParameter, studentidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_MBillPr_gakoMonthlyExtIndivusal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MBillPr_gakoMonthlyExtIndivusal");
        }
    
        public virtual int sp_MBillPr_gakoMonthlyExtIndivusal_adimi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MBillPr_gakoMonthlyExtIndivusal_adimi");
        }
    
        public virtual int sp_MBillPr_gakoMonthlyIndivusal(string month, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MBillPr_gakoMonthlyIndivusal", monthParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_MBillPr_gakoMonthlyIndivusal_adimi(string month, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MBillPr_gakoMonthlyIndivusal_adimi", monthParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_mergeterm(string terms, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var termsParameter = terms != null ?
                new ObjectParameter("terms", terms) :
                new ObjectParameter("terms", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_mergeterm", termsParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_MidFirst_1(string terms, string year_B, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var year_BParameter = year_B != null ?
                new ObjectParameter("Year_B", year_B) :
                new ObjectParameter("Year_B", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_MidFirst_1", termsParameter, year_BParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_MidFirst_2(string year_B, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var year_BParameter = year_B != null ?
                new ObjectParameter("Year_B", year_B) :
                new ObjectParameter("Year_B", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("sc_2", sc_2) :
                new ObjectParameter("sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_MidFirst_2", year_BParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_MidFirstActoFinal(string year_B, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var year_BParameter = year_B != null ?
                new ObjectParameter("Year_B", year_B) :
                new ObjectParameter("Year_B", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_MidFirstActoFinal", year_BParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_MidFirstSum(string year_B, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var year_BParameter = year_B != null ?
                new ObjectParameter("Year_B", year_B) :
                new ObjectParameter("Year_B", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("sc_2", sc_2) :
                new ObjectParameter("sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_MidFirstSum", year_BParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_passfailed_Result> sp_passfailed(string @class, string year, string term, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var termParameter = term != null ?
                new ObjectParameter("Term", term) :
                new ObjectParameter("Term", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_passfailed_Result>("sp_passfailed", classParameter, yearParameter, termParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_passfailed_final_Result> sp_passfailed_final(string @class, string year, string term, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var termParameter = term != null ?
                new ObjectParameter("Term", term) :
                new ObjectParameter("Term", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_passfailed_final_Result>("sp_passfailed_final", classParameter, yearParameter, termParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_publishonlineresult(string examterm, string year_B_C, Nullable<int> sc_1)
        {
            var examtermParameter = examterm != null ?
                new ObjectParameter("examterm", examterm) :
                new ObjectParameter("examterm", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("year_B_C", year_B_C) :
                new ObjectParameter("year_B_C", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_publishonlineresult", examtermParameter, year_B_CParameter, sc_1Parameter);
        }
    
        public virtual int Sp_Ready_Marks_Subject(Nullable<int> subject_code, string class_Stu, string subject, Nullable<int> fullMarks, Nullable<int> theory, Nullable<int> partical, Nullable<int> totalPass, string terms, string time_Year, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var subject_codeParameter = subject_code.HasValue ?
                new ObjectParameter("Subject_code", subject_code) :
                new ObjectParameter("Subject_code", typeof(int));
    
            var class_StuParameter = class_Stu != null ?
                new ObjectParameter("Class_Stu", class_Stu) :
                new ObjectParameter("Class_Stu", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var fullMarksParameter = fullMarks.HasValue ?
                new ObjectParameter("FullMarks", fullMarks) :
                new ObjectParameter("FullMarks", typeof(int));
    
            var theoryParameter = theory.HasValue ?
                new ObjectParameter("Theory", theory) :
                new ObjectParameter("Theory", typeof(int));
    
            var particalParameter = partical.HasValue ?
                new ObjectParameter("Partical", partical) :
                new ObjectParameter("Partical", typeof(int));
    
            var totalPassParameter = totalPass.HasValue ?
                new ObjectParameter("TotalPass", totalPass) :
                new ObjectParameter("TotalPass", typeof(int));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var time_YearParameter = time_Year != null ?
                new ObjectParameter("Time_Year", time_Year) :
                new ObjectParameter("Time_Year", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Ready_Marks_Subject", subject_codeParameter, class_StuParameter, subjectParameter, fullMarksParameter, theoryParameter, particalParameter, totalPassParameter, termsParameter, time_YearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Sp_ReduceSubjectIdList_Result> Sp_ReduceSubjectIdList(Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ReduceSubjectIdList_Result>("Sp_ReduceSubjectIdList", sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_ResetAssetsDate(Nullable<System.DateTime> todaydate, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var todaydateParameter = todaydate.HasValue ?
                new ObjectParameter("todaydate", todaydate) :
                new ObjectParameter("todaydate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ResetAssetsDate", todaydateParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_ResetLiabilitesdetailDate(Nullable<System.DateTime> todaydate, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var todaydateParameter = todaydate.HasValue ?
                new ObjectParameter("todaydate", todaydate) :
                new ObjectParameter("todaydate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ResetLiabilitesdetailDate", todaydateParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_ResetTransctiondetailDate(Nullable<System.DateTime> todaydate, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var todaydateParameter = todaydate.HasValue ?
                new ObjectParameter("todaydate", todaydate) :
                new ObjectParameter("todaydate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ResetTransctiondetailDate", todaydateParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_sendAssetsdetail_PreYear(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string acYear, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var acYearParameter = acYear != null ?
                new ObjectParameter("AcYear", acYear) :
                new ObjectParameter("AcYear", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("sc_2", sc_2) :
                new ObjectParameter("sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sendAssetsdetail_PreYear", fromdateParameter, todateParameter, acYearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_sendCashin_outPreyear(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sendCashin_outPreyear", fromdateParameter, todateParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_sendexpendituredetail_PreYear(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string acYear, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var acYearParameter = acYear != null ?
                new ObjectParameter("AcYear", acYear) :
                new ObjectParameter("AcYear", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sendexpendituredetail_PreYear", fromdateParameter, todateParameter, acYearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_sendincomedetail_PreYear(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string acYear, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var acYearParameter = acYear != null ?
                new ObjectParameter("AcYear", acYear) :
                new ObjectParameter("AcYear", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sendincomedetail_PreYear", fromdateParameter, todateParameter, acYearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_sendJVoucher_Preyear(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("sc_1", sc_1) :
                new ObjectParameter("sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sendJVoucher_Preyear", fromdateParameter, todateParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_sendLiabilitesdetail_PreYear(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string acYear, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var acYearParameter = acYear != null ?
                new ObjectParameter("AcYear", acYear) :
                new ObjectParameter("AcYear", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sendLiabilitesdetail_PreYear", fromdateParameter, todateParameter, acYearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_SendMarksIndivusalClassEntry(string terms_Exan, string year_exam, string sectionfield, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var terms_ExanParameter = terms_Exan != null ?
                new ObjectParameter("Terms_Exan", terms_Exan) :
                new ObjectParameter("Terms_Exan", typeof(string));
    
            var year_examParameter = year_exam != null ?
                new ObjectParameter("Year_exam", year_exam) :
                new ObjectParameter("Year_exam", typeof(string));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("sectionfield", sectionfield) :
                new ObjectParameter("sectionfield", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SendMarksIndivusalClassEntry", terms_ExanParameter, year_examParameter, sectionfieldParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_sendtransctiondetailLastyear(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string acYear, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var acYearParameter = acYear != null ?
                new ObjectParameter("AcYear", acYear) :
                new ObjectParameter("AcYear", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sendtransctiondetailLastyear", fromdateParameter, todateParameter, acYearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_SentIdForIndivusal_Marks_Result> sp_SentIdForIndivusal_Marks(Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SentIdForIndivusal_Marks_Result>("sp_SentIdForIndivusal_Marks", sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_spTruncateUnwantAssetsdetail(Nullable<int> sC_1, Nullable<int> sc_2)
        {
            var sC_1Parameter = sC_1.HasValue ?
                new ObjectParameter("SC_1", sC_1) :
                new ObjectParameter("SC_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_spTruncateUnwantAssetsdetail", sC_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_spTruncateUnwantexpendituredetail(Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_spTruncateUnwantexpendituredetail", sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_spTruncateUnwantincomedetail(Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_spTruncateUnwantincomedetail", sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_spTruncateUnwantLiabilitesdetail(Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_spTruncateUnwantLiabilitesdetail", sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_spTruncateUnwantTran_Detail(Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_spTruncateUnwantTran_Detail", sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_spTruncateUnwanttransctiondetail(Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_spTruncateUnwanttransctiondetail", sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<sp_studentdetail_Result> sp_studentdetail(string @class, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_studentdetail_Result>("sp_studentdetail", classParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_TeacherSalarySheetGovType(string month, string year, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TeacherSalarySheetGovType", monthParameter, yearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_TempBillCommonClassbank(string month, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_TempBillCommonClassbank", monthParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_TempbillDiscountMonthly(Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_TempbillDiscountMonthly", sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_TempbillDiscountMonthly_adimi(string studentid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_TempbillDiscountMonthly_adimi", studentidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_TempBillExtraIndivusalbank(string month, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_TempBillExtraIndivusalbank", monthParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_TempBillExtraIndivusalbank_adimi(string month, string studentid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_TempBillExtraIndivusalbank_adimi", monthParameter, studentidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_tempmonthlyindivusalbillbank(Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_tempmonthlyindivusalbillbank", sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_tempmonthlyindivusalbillbank_adimi(string studentid, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("sc_2", sc_2) :
                new ObjectParameter("sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_tempmonthlyindivusalbillbank_adimi", studentidParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_TruncateAssetsdetail(Nullable<int> trackId, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var trackIdParameter = trackId.HasValue ?
                new ObjectParameter("TrackId", trackId) :
                new ObjectParameter("TrackId", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TruncateAssetsdetail", trackIdParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_TruncateCashinou(Nullable<int> trackId, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var trackIdParameter = trackId.HasValue ?
                new ObjectParameter("TrackId", trackId) :
                new ObjectParameter("TrackId", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TruncateCashinou", trackIdParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Truncateexpendituredetail(Nullable<int> trackId, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var trackIdParameter = trackId.HasValue ?
                new ObjectParameter("TrackId", trackId) :
                new ObjectParameter("TrackId", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Truncateexpendituredetail", trackIdParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_Truncateincomedetail(Nullable<int> trackId, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var trackIdParameter = trackId.HasValue ?
                new ObjectParameter("TrackId", trackId) :
                new ObjectParameter("TrackId", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Truncateincomedetail", trackIdParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_TruncateLiabilitesdetail(Nullable<int> trackId, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var trackIdParameter = trackId.HasValue ?
                new ObjectParameter("TrackId", trackId) :
                new ObjectParameter("TrackId", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TruncateLiabilitesdetail", trackIdParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_TruncateProcessingResultterm(Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_TruncateProcessingResultterm", sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_UpdateAdvanSubject(Nullable<int> subject_code, string class_stu, string subject, Nullable<int> fullMarks, Nullable<int> theory, Nullable<int> partical, Nullable<int> totalPass, string terms, string time_Year, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var subject_codeParameter = subject_code.HasValue ?
                new ObjectParameter("Subject_code", subject_code) :
                new ObjectParameter("Subject_code", typeof(int));
    
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("class_stu", class_stu) :
                new ObjectParameter("class_stu", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var fullMarksParameter = fullMarks.HasValue ?
                new ObjectParameter("FullMarks", fullMarks) :
                new ObjectParameter("FullMarks", typeof(int));
    
            var theoryParameter = theory.HasValue ?
                new ObjectParameter("Theory", theory) :
                new ObjectParameter("Theory", typeof(int));
    
            var particalParameter = partical.HasValue ?
                new ObjectParameter("Partical", partical) :
                new ObjectParameter("Partical", typeof(int));
    
            var totalPassParameter = totalPass.HasValue ?
                new ObjectParameter("TotalPass", totalPass) :
                new ObjectParameter("TotalPass", typeof(int));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var time_YearParameter = time_Year != null ?
                new ObjectParameter("Time_Year", time_Year) :
                new ObjectParameter("Time_Year", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateAdvanSubject", subject_codeParameter, class_stuParameter, subjectParameter, fullMarksParameter, theoryParameter, particalParameter, totalPassParameter, termsParameter, time_YearParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_UpdateAttendence_Out(Nullable<System.DateTime> datevalue, string attcode, string outtime, Nullable<decimal> attValue, string remarks, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var datevalueParameter = datevalue.HasValue ?
                new ObjectParameter("Datevalue", datevalue) :
                new ObjectParameter("Datevalue", typeof(System.DateTime));
    
            var attcodeParameter = attcode != null ?
                new ObjectParameter("Attcode", attcode) :
                new ObjectParameter("Attcode", typeof(string));
    
            var outtimeParameter = outtime != null ?
                new ObjectParameter("outtime", outtime) :
                new ObjectParameter("outtime", typeof(string));
    
            var attValueParameter = attValue.HasValue ?
                new ObjectParameter("AttValue", attValue) :
                new ObjectParameter("AttValue", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_UpdateAttendence_Out", datevalueParameter, attcodeParameter, outtimeParameter, attValueParameter, remarksParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_updateBillstatus_Customer(string studentid, Nullable<int> tranNo, string class_stu, string accountheading, Nullable<decimal> paidamount, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var tranNoParameter = tranNo.HasValue ?
                new ObjectParameter("TranNo", tranNo) :
                new ObjectParameter("TranNo", typeof(int));
    
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("class_stu", class_stu) :
                new ObjectParameter("class_stu", typeof(string));
    
            var accountheadingParameter = accountheading != null ?
                new ObjectParameter("accountheading", accountheading) :
                new ObjectParameter("accountheading", typeof(string));
    
            var paidamountParameter = paidamount.HasValue ?
                new ObjectParameter("paidamount", paidamount) :
                new ObjectParameter("paidamount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateBillstatus_Customer", studentidParameter, tranNoParameter, class_stuParameter, accountheadingParameter, paidamountParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_updateremarksresultDivision(Nullable<int> tranno, string division, Nullable<decimal> f_Percentage, Nullable<decimal> t_Percentage, string remarks, string teacherremarks, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var trannoParameter = tranno.HasValue ?
                new ObjectParameter("tranno", tranno) :
                new ObjectParameter("tranno", typeof(int));
    
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var f_PercentageParameter = f_Percentage.HasValue ?
                new ObjectParameter("F_Percentage", f_Percentage) :
                new ObjectParameter("F_Percentage", typeof(decimal));
    
            var t_PercentageParameter = t_Percentage.HasValue ?
                new ObjectParameter("T_Percentage", t_Percentage) :
                new ObjectParameter("T_Percentage", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var teacherremarksParameter = teacherremarks != null ?
                new ObjectParameter("Teacherremarks", teacherremarks) :
                new ObjectParameter("Teacherremarks", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateremarksresultDivision", trannoParameter, divisionParameter, f_PercentageParameter, t_PercentageParameter, remarksParameter, teacherremarksParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_UpdateSlokoPrintToo(Nullable<int> tranNo, Nullable<int> condition, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var tranNoParameter = tranNo.HasValue ?
                new ObjectParameter("TranNo", tranNo) :
                new ObjectParameter("TranNo", typeof(int));
    
            var conditionParameter = condition.HasValue ?
                new ObjectParameter("Condition", condition) :
                new ObjectParameter("Condition", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateSlokoPrintToo", tranNoParameter, conditionParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_UpdateSlokoPrintToo_1(string documentType, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var documentTypeParameter = documentType != null ?
                new ObjectParameter("documentType", documentType) :
                new ObjectParameter("documentType", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateSlokoPrintToo_1", documentTypeParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_UpdateStaffsanchayakosh(string staffid, Nullable<decimal> amount, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var staffidParameter = staffid != null ?
                new ObjectParameter("staffid", staffid) :
                new ObjectParameter("staffid", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateStaffsanchayakosh", staffidParameter, amountParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_updateStudentinformation(Nullable<int> studentid, string namefield, string class_Student, Nullable<int> roll, string sectionfield, string address, string phoneNumber, string house, string classTeacher, string busstop, string hobbies, string foodType, string studentType, Nullable<decimal> specialAddDicount, Nullable<System.DateTime> dateofbirthAD, string dateofbirthBs, string address1, string previousSchoolName, string previousAcademicGrade, string percantageObtain, Nullable<decimal> specialtutionDiscount, Nullable<decimal> otherDiscount, string fatherName, string qualificationfather, string occupationfather, string citizenshipNo, Nullable<decimal> incomePermonthfather, string motherName, string qualificationMother, string occupationMother, string citizenshipNoMother, Nullable<decimal> incomeMother, string fathermobile, string fatherofficeno, string mothermobile, string motherofficeno, string currentUser, string gender, string jati, string relegious, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid.HasValue ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(int));
    
            var namefieldParameter = namefield != null ?
                new ObjectParameter("Namefield", namefield) :
                new ObjectParameter("Namefield", typeof(string));
    
            var class_StudentParameter = class_Student != null ?
                new ObjectParameter("Class_Student", class_Student) :
                new ObjectParameter("Class_Student", typeof(string));
    
            var rollParameter = roll.HasValue ?
                new ObjectParameter("Roll", roll) :
                new ObjectParameter("Roll", typeof(int));
    
            var sectionfieldParameter = sectionfield != null ?
                new ObjectParameter("Sectionfield", sectionfield) :
                new ObjectParameter("Sectionfield", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var houseParameter = house != null ?
                new ObjectParameter("House", house) :
                new ObjectParameter("House", typeof(string));
    
            var classTeacherParameter = classTeacher != null ?
                new ObjectParameter("ClassTeacher", classTeacher) :
                new ObjectParameter("ClassTeacher", typeof(string));
    
            var busstopParameter = busstop != null ?
                new ObjectParameter("Busstop", busstop) :
                new ObjectParameter("Busstop", typeof(string));
    
            var hobbiesParameter = hobbies != null ?
                new ObjectParameter("Hobbies", hobbies) :
                new ObjectParameter("Hobbies", typeof(string));
    
            var foodTypeParameter = foodType != null ?
                new ObjectParameter("FoodType", foodType) :
                new ObjectParameter("FoodType", typeof(string));
    
            var studentTypeParameter = studentType != null ?
                new ObjectParameter("StudentType", studentType) :
                new ObjectParameter("StudentType", typeof(string));
    
            var specialAddDicountParameter = specialAddDicount.HasValue ?
                new ObjectParameter("SpecialAddDicount", specialAddDicount) :
                new ObjectParameter("SpecialAddDicount", typeof(decimal));
    
            var dateofbirthADParameter = dateofbirthAD.HasValue ?
                new ObjectParameter("dateofbirthAD", dateofbirthAD) :
                new ObjectParameter("dateofbirthAD", typeof(System.DateTime));
    
            var dateofbirthBsParameter = dateofbirthBs != null ?
                new ObjectParameter("dateofbirthBs", dateofbirthBs) :
                new ObjectParameter("dateofbirthBs", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("address1", address1) :
                new ObjectParameter("address1", typeof(string));
    
            var previousSchoolNameParameter = previousSchoolName != null ?
                new ObjectParameter("PreviousSchoolName", previousSchoolName) :
                new ObjectParameter("PreviousSchoolName", typeof(string));
    
            var previousAcademicGradeParameter = previousAcademicGrade != null ?
                new ObjectParameter("PreviousAcademicGrade", previousAcademicGrade) :
                new ObjectParameter("PreviousAcademicGrade", typeof(string));
    
            var percantageObtainParameter = percantageObtain != null ?
                new ObjectParameter("PercantageObtain", percantageObtain) :
                new ObjectParameter("PercantageObtain", typeof(string));
    
            var specialtutionDiscountParameter = specialtutionDiscount.HasValue ?
                new ObjectParameter("specialtutionDiscount", specialtutionDiscount) :
                new ObjectParameter("specialtutionDiscount", typeof(decimal));
    
            var otherDiscountParameter = otherDiscount.HasValue ?
                new ObjectParameter("OtherDiscount", otherDiscount) :
                new ObjectParameter("OtherDiscount", typeof(decimal));
    
            var fatherNameParameter = fatherName != null ?
                new ObjectParameter("FatherName", fatherName) :
                new ObjectParameter("FatherName", typeof(string));
    
            var qualificationfatherParameter = qualificationfather != null ?
                new ObjectParameter("Qualificationfather", qualificationfather) :
                new ObjectParameter("Qualificationfather", typeof(string));
    
            var occupationfatherParameter = occupationfather != null ?
                new ObjectParameter("Occupationfather", occupationfather) :
                new ObjectParameter("Occupationfather", typeof(string));
    
            var citizenshipNoParameter = citizenshipNo != null ?
                new ObjectParameter("CitizenshipNo", citizenshipNo) :
                new ObjectParameter("CitizenshipNo", typeof(string));
    
            var incomePermonthfatherParameter = incomePermonthfather.HasValue ?
                new ObjectParameter("IncomePermonthfather", incomePermonthfather) :
                new ObjectParameter("IncomePermonthfather", typeof(decimal));
    
            var motherNameParameter = motherName != null ?
                new ObjectParameter("MotherName", motherName) :
                new ObjectParameter("MotherName", typeof(string));
    
            var qualificationMotherParameter = qualificationMother != null ?
                new ObjectParameter("QualificationMother", qualificationMother) :
                new ObjectParameter("QualificationMother", typeof(string));
    
            var occupationMotherParameter = occupationMother != null ?
                new ObjectParameter("OccupationMother", occupationMother) :
                new ObjectParameter("OccupationMother", typeof(string));
    
            var citizenshipNoMotherParameter = citizenshipNoMother != null ?
                new ObjectParameter("CitizenshipNoMother", citizenshipNoMother) :
                new ObjectParameter("CitizenshipNoMother", typeof(string));
    
            var incomeMotherParameter = incomeMother.HasValue ?
                new ObjectParameter("IncomeMother", incomeMother) :
                new ObjectParameter("IncomeMother", typeof(decimal));
    
            var fathermobileParameter = fathermobile != null ?
                new ObjectParameter("fathermobile", fathermobile) :
                new ObjectParameter("fathermobile", typeof(string));
    
            var fatherofficenoParameter = fatherofficeno != null ?
                new ObjectParameter("fatherofficeno", fatherofficeno) :
                new ObjectParameter("fatherofficeno", typeof(string));
    
            var mothermobileParameter = mothermobile != null ?
                new ObjectParameter("mothermobile", mothermobile) :
                new ObjectParameter("mothermobile", typeof(string));
    
            var motherofficenoParameter = motherofficeno != null ?
                new ObjectParameter("motherofficeno", motherofficeno) :
                new ObjectParameter("motherofficeno", typeof(string));
    
            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var jatiParameter = jati != null ?
                new ObjectParameter("Jati", jati) :
                new ObjectParameter("Jati", typeof(string));
    
            var relegiousParameter = relegious != null ?
                new ObjectParameter("Relegious", relegious) :
                new ObjectParameter("Relegious", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateStudentinformation", studentidParameter, namefieldParameter, class_StudentParameter, rollParameter, sectionfieldParameter, addressParameter, phoneNumberParameter, houseParameter, classTeacherParameter, busstopParameter, hobbiesParameter, foodTypeParameter, studentTypeParameter, specialAddDicountParameter, dateofbirthADParameter, dateofbirthBsParameter, address1Parameter, previousSchoolNameParameter, previousAcademicGradeParameter, percantageObtainParameter, specialtutionDiscountParameter, otherDiscountParameter, fatherNameParameter, qualificationfatherParameter, occupationfatherParameter, citizenshipNoParameter, incomePermonthfatherParameter, motherNameParameter, qualificationMotherParameter, occupationMotherParameter, citizenshipNoMotherParameter, incomeMotherParameter, fathermobileParameter, fatherofficenoParameter, mothermobileParameter, motherofficenoParameter, currentUserParameter, genderParameter, jatiParameter, relegiousParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_UpdateStudentLastBalance(string studentid, Nullable<decimal> newBalance, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var studentidParameter = studentid != null ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(string));
    
            var newBalanceParameter = newBalance.HasValue ?
                new ObjectParameter("NewBalance", newBalance) :
                new ObjectParameter("NewBalance", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_UpdateStudentLastBalance", studentidParameter, newBalanceParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_updatetermsAnita(string terma, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var termaParameter = terma != null ?
                new ObjectParameter("terma", terma) :
                new ObjectParameter("terma", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("sc_2", sc_2) :
                new ObjectParameter("sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updatetermsAnita", termaParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_UpdateTopMarksObtained(string class_stu, string examTerm, string year_B_C, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("Class_stu", class_stu) :
                new ObjectParameter("Class_stu", typeof(string));
    
            var examTermParameter = examTerm != null ?
                new ObjectParameter("ExamTerm", examTerm) :
                new ObjectParameter("ExamTerm", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_UpdateTopMarksObtained", class_stuParameter, examTermParameter, year_B_CParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int Sp_UpdateTopMarksObtained_Final(string class_stu, string year_B_C, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("Class_stu", class_stu) :
                new ObjectParameter("Class_stu", typeof(string));
    
            var year_B_CParameter = year_B_C != null ?
                new ObjectParameter("Year_B_C", year_B_C) :
                new ObjectParameter("Year_B_C", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_UpdateTopMarksObtained_Final", class_stuParameter, year_B_CParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<SubjectCode_Result> SubjectCode(string class_stu, string time_Year, string terms, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var class_stuParameter = class_stu != null ?
                new ObjectParameter("Class_stu", class_stu) :
                new ObjectParameter("Class_stu", typeof(string));
    
            var time_YearParameter = time_Year != null ?
                new ObjectParameter("Time_Year", time_Year) :
                new ObjectParameter("Time_Year", typeof(string));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjectCode_Result>("SubjectCode", class_stuParameter, time_YearParameter, termsParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Totalbookstakenview_Result> Totalbookstakenview(Nullable<int> tBR, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var tBRParameter = tBR.HasValue ?
                new ObjectParameter("TBR", tBR) :
                new ObjectParameter("TBR", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Totalbookstakenview_Result>("Totalbookstakenview", tBRParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int UpdateassetsdetailRepair(Nullable<int> tackid, Nullable<decimal> amount, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var tackidParameter = tackid.HasValue ?
                new ObjectParameter("Tackid", tackid) :
                new ObjectParameter("Tackid", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateassetsdetailRepair", tackidParameter, amountParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int UpdateCashoutRepair(Nullable<int> tackid, Nullable<decimal> amount, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var tackidParameter = tackid.HasValue ?
                new ObjectParameter("Tackid", tackid) :
                new ObjectParameter("Tackid", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCashoutRepair", tackidParameter, amountParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int UpdateDepositeTransction(Nullable<int> tackid, Nullable<decimal> preamount, Nullable<decimal> deposite, Nullable<decimal> balance, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var tackidParameter = tackid.HasValue ?
                new ObjectParameter("Tackid", tackid) :
                new ObjectParameter("Tackid", typeof(int));
    
            var preamountParameter = preamount.HasValue ?
                new ObjectParameter("Preamount", preamount) :
                new ObjectParameter("Preamount", typeof(decimal));
    
            var depositeParameter = deposite.HasValue ?
                new ObjectParameter("Deposite", deposite) :
                new ObjectParameter("Deposite", typeof(decimal));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("balance", balance) :
                new ObjectParameter("balance", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDepositeTransction", tackidParameter, preamountParameter, depositeParameter, balanceParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int UpdateincomedetailRepair(Nullable<int> tackid, Nullable<decimal> amount, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var tackidParameter = tackid.HasValue ?
                new ObjectParameter("Tackid", tackid) :
                new ObjectParameter("Tackid", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateincomedetailRepair", tackidParameter, amountParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int UpdateInterestTransction(Nullable<int> tackid, string accountid, Nullable<decimal> preamount, Nullable<decimal> deposite, Nullable<decimal> balance, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var tackidParameter = tackid.HasValue ?
                new ObjectParameter("Tackid", tackid) :
                new ObjectParameter("Tackid", typeof(int));
    
            var accountidParameter = accountid != null ?
                new ObjectParameter("accountid", accountid) :
                new ObjectParameter("accountid", typeof(string));
    
            var preamountParameter = preamount.HasValue ?
                new ObjectParameter("Preamount", preamount) :
                new ObjectParameter("Preamount", typeof(decimal));
    
            var depositeParameter = deposite.HasValue ?
                new ObjectParameter("Deposite", deposite) :
                new ObjectParameter("Deposite", typeof(decimal));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("balance", balance) :
                new ObjectParameter("balance", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateInterestTransction", tackidParameter, accountidParameter, preamountParameter, depositeParameter, balanceParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int UpdateLiabilitesRepair(Nullable<int> tackid, Nullable<decimal> amount, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var tackidParameter = tackid.HasValue ?
                new ObjectParameter("Tackid", tackid) :
                new ObjectParameter("Tackid", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateLiabilitesRepair", tackidParameter, amountParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int UpdateTransctionCreditRepair(Nullable<int> tackid, Nullable<decimal> amount, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var tackidParameter = tackid.HasValue ?
                new ObjectParameter("Tackid", tackid) :
                new ObjectParameter("Tackid", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransctionCreditRepair", tackidParameter, amountParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual int UpdateTransctionDebiRepair(Nullable<int> tackid, Nullable<decimal> amount, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var tackidParameter = tackid.HasValue ?
                new ObjectParameter("Tackid", tackid) :
                new ObjectParameter("Tackid", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransctionDebiRepair", tackidParameter, amountParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<string> viewAccHeading(string ah, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var ahParameter = ah != null ?
                new ObjectParameter("Ah", ah) :
                new ObjectParameter("Ah", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("viewAccHeading", ahParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<viewaccountcode_Result> viewaccountcode(string co, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var coParameter = co != null ?
                new ObjectParameter("Co", co) :
                new ObjectParameter("Co", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<viewaccountcode_Result>("viewaccountcode", coParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<ViewCl_Sta_Batch_Result> ViewCl_Sta_Batch(string @class, string status, string batch, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewCl_Sta_Batch_Result>("ViewCl_Sta_Batch", classParameter, statusParameter, batchParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<viewCodeAccount_Result> viewCodeAccount(string coA, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var coAParameter = coA != null ?
                new ObjectParameter("CoA", coA) :
                new ObjectParameter("CoA", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<viewCodeAccount_Result>("viewCodeAccount", coAParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Viewcrosslink_Result> Viewcrosslink(string vCLH, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var vCLHParameter = vCLH != null ?
                new ObjectParameter("VCLH", vCLH) :
                new ObjectParameter("VCLH", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Viewcrosslink_Result>("Viewcrosslink", vCLHParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Viewcrosslink_byAccountheading_Result> Viewcrosslink_byAccountheading(string vCAH, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var vCAHParameter = vCAH != null ?
                new ObjectParameter("VCAH", vCAH) :
                new ObjectParameter("VCAH", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Viewcrosslink_byAccountheading_Result>("Viewcrosslink_byAccountheading", vCAHParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<string> ViewLastBookCode(string bc, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var bcParameter = bc != null ?
                new ObjectParameter("Bc", bc) :
                new ObjectParameter("Bc", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ViewLastBookCode", bcParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<Nullable<int>> viewTotalBooks(Nullable<int> bt, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var btParameter = bt.HasValue ?
                new ObjectParameter("Bt", bt) :
                new ObjectParameter("Bt", typeof(int));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("viewTotalBooks", btParameter, sc_1Parameter, sc_2Parameter);
        }
    
        public virtual ObjectResult<whenissuebooksrecord_Result> whenissuebooksrecord(string wIBR, Nullable<int> sc_1, Nullable<int> sc_2)
        {
            var wIBRParameter = wIBR != null ?
                new ObjectParameter("WIBR", wIBR) :
                new ObjectParameter("WIBR", typeof(string));
    
            var sc_1Parameter = sc_1.HasValue ?
                new ObjectParameter("Sc_1", sc_1) :
                new ObjectParameter("Sc_1", typeof(int));
    
            var sc_2Parameter = sc_2.HasValue ?
                new ObjectParameter("Sc_2", sc_2) :
                new ObjectParameter("Sc_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<whenissuebooksrecord_Result>("whenissuebooksrecord", wIBRParameter, sc_1Parameter, sc_2Parameter);
        }
    }
}
